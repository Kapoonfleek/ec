function frostboltSound(p: player):
	play sound "skill.glaceon.frostbolt_cast" with volume 2 and pitch 1 to {_p}
function frostboltHitSound(p: location):
	play sound "skill.glaceon.frostbolt_impact" with volume 3 and pitch 1 at {_p}
function frostbolthurlSound(p: location):
	play sound "skill.glaceon.frostbolt_hurl" with volume 3 and pitch 1 at {_p}
function icelanceHitSound(p: location):
	play sound "skill.glaceon.icelance_impact" with volume 3 and pitch 1 at {_p}
function icelancehurlSound(p: location):
	play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1 at {_p}
function Icicles(p: player):
	while {icicles::%{_p}%} > 0:
		set {_l} to location 0.4 blocks above {_p}'s head
		set {_l} to location 0.6 blocks left of {_l}
		#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
		draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l}
		#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 1:
			set {_l2} to location 0.5 blocks above {_p}'s head
			set {_l2} to location 0.3 blocks left of {_l2}
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l2}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l2}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 2:
			set {_l3} to location 0.6 blocks above {_p}'s head
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l3}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l3}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 3:
			set {_l4} to location 0.5 blocks above {_p}'s head
			set {_l4} to location 0.3 blocks right of {_l4}
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l4}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l4}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 4:
			set {_l5} to location 0.4 blocks above {_p}'s head
			set {_l5} to location 0.6 blocks right of {_l5}
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 1 of dust using dustOption((rgb 106, 184, 230), 0.5) at {_l5}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l5}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 5:
			set {_l5} to location 0.3 blocks above {_p}'s head
			set {_l5} to location 0.9 blocks left of {_l5}
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l5}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l5}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		if {icicles::%{_p}%} > 6:
			set {_l5} to location 0.3 blocks above {_p}'s head
			set {_l5} to location 0.9 blocks right of {_l5}
			#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
			draw 2 of dust using dustOption((rgb 106, 184, 230), 1) at {_l5}
			#drawDot count 1, particle "redstone", RGB 106, 184, 230, center {_l5}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 15 ticks
		wait 10 ticks
function IcicleForm(p: player, icicle: integer):
	if tag "Constellation;Eternal Winter" of nbt of {karta::%{_p}%} is set:
		set {_max} to 7
	else:
		set {_max} to 5
	if {_icicle} - {_max} > 0:
		set {_icicle} to {_max}
	spawn 1 armor stand at {_p} with nbt from "{Invisible:1b,Marker:1b}"
	set {_x} to last spawned armor stand
	set {_x}'s helmet to stick named "Icicle"
	if {icicle%{_icicle}%::%{_p}%} is not set:
		set {icicle%{_icicle}%::%{_p}%} to {_x}
		IcicleMove({_p}, {_icicle}, {_x})

function IcicleFormIcicleStorm(p: player, icicle: integer) :: entity:
	set {_loc} to {_p}'s location
	increase {_loc}'s y-coordinate by 0.2
	if {_p}'s horizontal facing is east or west:
		if {_icicle} = 1:
			increase {_loc}'s z-coordinate by -0.6
			increase {_loc}'s y-coordinate by -0.2
		else if {_icicle} = 2:
			increase {_loc}'s z-coordinate by -0.3
			increase {_loc}'s y-coordinate by -0.1
		else if {_icicle} = 4:
			increase {_loc}'s z-coordinate by 0.3
			increase {_loc}'s y-coordinate by -0.1
		else if {_icicle} = 5:
			increase {_loc}'s z-coordinate by 0.6
			increase {_loc}'s y-coordinate by -0.2
	else:
		if {_icicle} = 1:
			increase {_loc}'s x-coordinate by -0.6
			increase {_loc}'s y-coordinate by -0.2
		else if {_icicle} = 2:
			increase {_loc}'s x-coordinate by -0.3
			increase {_loc}'s y-coordinate by -0.1
		else if {_icicle} = 4:
			increase {_loc}'s x-coordinate by 0.3
			increase {_loc}'s y-coordinate by -0.1
		else if {_icicle} = 5:
			increase {_loc}'s x-coordinate by 0.6
			increase {_loc}'s y-coordinate by -0.2
	spawn 1 armor stand at {_loc} with nbt from "{Invisible:1b,Marker:1b}"
	set {_x} to last spawned armor stand
	set {_x}'s helmet to stick named "Icicle"
	return {_x}

function IcicleHurl(p: player, icicle: entity, target: entity, rgb: color):
	set {_l} to location of {_icicle}
	set {_yaw} to yaw of {_p}
	set {_pitch} to pitch of {_p}
	set yaw of {_l} to {_yaw}
	set pitch of {_l} to {_pitch}
	set {_targetLoc} to location 0.5 below {_target}
	loop round(distance between {_l} and {_targetLoc}) / 1 times:
		set {_targetLoc} to location 0.5 below {_target}
		set {_vec} to vector between {_l} and {_targetLoc}
		set vector length of {_vec} to loop-value * 2
		teleport {_icicle} to {_l} ~ {_vec}
		set {_icicleLoc} to location of {_icicle}
		increase y-coordinate of {_icicleLoc} by 2 
		draw 1 of dust using dustOption({_rgb}, 1) at {_icicleLoc}
		wait 1 tick
	kill {_icicle}

function IcicleMove(p: player, num: integer, x: entity):
	while {icicles::%{_p}%} > 0:
		if {_x} is alive:
			if {icicle%{_num}%::%{_p}%} is set:
				if {_p} is not offline:
					set {_loc3} to {_p}'s location
					increase {_loc3}'s y-coordinate by 0.2
					set {_loc%{_num}%} to {_loc3}
					if tag "Constellation;Eternal Winter" of nbt of {karta::%{_p}%} is not set:
						if {_p}'s horizontal facing is east or west:
							if {_num} = 1:
								increase {_loc%{_num}%}'s z-coordinate by -0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 2:
								increase {_loc%{_num}%}'s z-coordinate by -0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 4:
								increase {_loc%{_num}%}'s z-coordinate by 0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 5:
								increase {_loc%{_num}%}'s z-coordinate by 0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
						else:
							if {_num} = 1:
								increase {_loc%{_num}%}'s x-coordinate by -0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 2:
								increase {_loc%{_num}%}'s x-coordinate by -0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 4:
								increase {_loc%{_num}%}'s x-coordinate by 0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 5:
								increase {_loc%{_num}%}'s x-coordinate by 0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
					else:
						if {_p}'s horizontal facing is east or west:
							if {_num} = 1:
								increase {_loc%{_num}%}'s z-coordinate by -0.9
								increase {_loc%{_num}%}'s y-coordinate by -0.3
							else if {_num} = 2:
								increase {_loc%{_num}%}'s z-coordinate by -0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 4:
								increase {_loc%{_num}%}'s z-coordinate by -0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 5:
								increase {_loc%{_num}%}'s z-coordinate by 0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 6:
								increase {_loc%{_num}%}'s z-coordinate by 0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 7:
								increase {_loc%{_num}%}'s z-coordinate by 0.9
								increase {_loc%{_num}%}'s y-coordinate by -0.3
						else:
							if {_num} = 1:
								increase {_loc%{_num}%}'s x-coordinate by -0.9
								increase {_loc%{_num}%}'s y-coordinate by -0.3
							else if {_num} = 2:
								increase {_loc%{_num}%}'s x-coordinate by -0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 4:
								increase {_loc%{_num}%}'s x-coordinate by -0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 5:
								increase {_loc%{_num}%}'s x-coordinate by 0.3
								increase {_loc%{_num}%}'s y-coordinate by -0.1
							else if {_num} = 6:
								increase {_loc%{_num}%}'s x-coordinate by 0.6
								increase {_loc%{_num}%}'s y-coordinate by -0.2
							else if {_num} = 7:
								increase {_loc%{_num}%}'s x-coordinate by 0.9
								increase {_loc%{_num}%}'s y-coordinate by -0.3
					add nbt from "{Rotation:[%{_p}'s yaw%f,%{_p}'s pitch%f]}" to nbt of {_x}
					teleport {_x} to {_loc%{_num}%}
		wait 2 ticks

function GlacialSpike(p: player) :: entity:
	set {_loc} to {_p}'s location
	increase {_loc}'s y-coordinate by 0.4
	spawn 1 armor stand at {_loc} with nbt from "{Invisible:1b,Marker:1b}"
	set {_x} to last spawned armor stand
	set {_x}'s helmet to stick named "Glacial Spike"
	return {_x}

function GlacialSpikeMove(p: player, x: entity):
	while metadata value "GlacialSpike" of {_p} is set:
		if {_x} is alive:
			if {_p} is alive:
				if {_p} is not offline:
					set {_loc} to {_p}'s location
					increase {_loc}'s y-coordinate by 0.4
					add nbt from "{Rotation:[%{_p}'s yaw%f,%{_p}'s pitch%f]}" to nbt of {_x}
					teleport {_x} to {_loc}
		wait 2 ticks

function GlacialSpikeHurl(p: player, glacialspike: entity, target: entity):
	set {_l} to location of {_glacialspike}
	set {_yaw} to yaw of {_p}
	set {_pitch} to pitch of {_p}
	set yaw of {_l} to {_yaw}
	set pitch of {_l} to {_pitch}
	set {_targetLoc} to location 0.5 below {_target}
	loop round(distance between {_l} and {_targetLoc}) / 1 times:
		set {_targetLoc} to location 0.5 below {_target}
		set {_vec} to vector between {_l} and {_targetLoc}
		set vector length of {_vec} to loop-value * 2
		teleport {_glacialspike} to {_l} ~ {_vec}
		set {_glacialspikeLoc} to location of {_glacialspike}
		increase y-coordinate of {_glacialspikeLoc} by 2 
		draw 1 of dust using dustOption({_rgb}, 1) at {_glacialspikeLoc}
		wait 1 tick
	kill {_glacialspike}

variables:
	{frozenfingers::%player%} = 0
	{chainreaction::%player%} = 0
#on join:
	#if {kartaname::%player%} = "Glaceon":
		#if {icicles::%player%} > 0:
			#Icicles(player)
function stopSoundGlaceon(p: player):
	stop sound "skill.glaceon.frostbolt_cast" for {_p}
	stop sound "skill.glaceon.flurry_cast" for {_p}
on load:
	set {traits::Glaceon::*} to "Chain Reaction", "Flash Freeze", "Frigid Grasp", "Frozen Touch", "Packed Ice", "Splintering Cold", "Thermal Void", "Tunnel of Ice", "Whiteout" and "Wintertide"
	set {Chain Reaction} to ""
	set {Flash Freeze} to ""
	set {Frigid Grasp} to ""
	set {Frozen Touch} to ""
	set {Packed Ice} to ""
	set {Splintering Cold} to ""
	set {Thermal Void} to ""
	set {Tunnel of Ice} to ""
	set {Whiteout} to ""
	set {Wintertide} to ""

on join:
	if {kolekcja::karty::%player%::*} contains "Glaceon":
		loop 10 times:
			set {_r} to {traits::Glaceon::%loop-number%}
			set {_x%loop-number%} to {trait::Glaceon::%{_r}%::%player%}
		if {language::%player%} = "English":
			set {traits::Glaceon::1::opis::%player%} to "&7Your <##4bbfe2>Ice Lances&7 against frozen targets%nl%&7increase the damage of your <##4bbfe2>Ice Lance &7by &f%0.6*{_x1}%%nl%&7for 12 seconds, stacking up to 5 times."
			set {traits::Glaceon::2::opis::%player%} to "&7Each of your <##4bbfe2>Icicles &7deals an additional%nl%&f%0.2*{_x2}% &7damage and has a &f%1*{_x2}%%% &7chance to grant you%nl%&7<##4bbfe2>Fingers of Frost&7."
			set {traits::Glaceon::3::opis::%player%} to "&7<##4bbfe2>Icy Veins &7grants you a charge of <##4bbfe2>Fingers of Frost%nl%&7and increases your damage stat by &f%35*{_x3}%%nl%&7for 15 seconds."
			set {traits::Glaceon::4::opis::%player%} to "&7<##4bbfe2>Frostbolt &7grants you <##4bbfe2>Fingers of Frost &f%3*{_x4}%%%%nl%&7more often&7."
			set {traits::Glaceon::5::opis::%player%} to "&7<##4bbfe2>Ice Lance &7deals an additional &f%0.9*{_x5}% &7damage when%nl%&7your last spell used is <##4bbfe2>Frostbolt&7."
			set {traits::Glaceon::6::opis::%player%} to "&7<##4bbfe2>Frostbolt &7has a &f%5*{_x6}%%% &7chance to generate%nl%&7two additional <##4bbfe2>Icicles&7."
			set {traits::Glaceon::7::opis::%player%} to "&7Increases the duration of <##4bbfe2>Icy Veins &7by%nl%&f%4*{_x7}% seconds&7."
			set {traits::Glaceon::8::opis::%player%} to "&7<##4bbfe2>Frostbolt &7increases the damage of <##4bbfe2>Frostbolt%nl%&7by &f%0.5*{_x8}%&7, stacking up to 3 times. This effect%nl%&7resets when you use <##4bbfe2>Frostbolt &7on a%nl%&7different target."
			set {traits::Glaceon::9::opis::%player%} to "&7<##4bbfe2>Ice Lance &7deals an additional &f%0.7*{_x9}% damage%nl%&7and reduces the cooldown of <##4bbfe2>Icy Veins &7by%nl%&f%0.3*{_x9}% seconds&7."
			set {traits::Glaceon::10::opis::%player%} to "&7<##4bbfe2>Frostbolt &7deals an additional &f%0.5*{_x10}% &7damage,%nl%&7and has a &f%1*{_x10}%%% &7increased chance to%nl%&7critically strike."
		else:
			if {_x9} > 1:
				set {_tekst} to "sekundy"
			else:
				set {_tekst} to "sekundę"
			if {_x9} = 4:
				set {_tekst2} to "obrażenia"
			else:
				set {_tekst2} to "obrażeń"
			set {traits::Glaceon::1::opis::%player%} to "&7Twoje <##4bbfe2>Lodowe Lance&7 przeciwko zamrożonym celom%nl%&7zwiększają obrażenia twojej <##4bbfe2>Lodowej Lancy &7o &f%0.6*{_x1}%%nl%&7na 12 sekund, stackując się maksymalnie 5 razy."
			set {traits::Glaceon::2::opis::%player%} to "&7Każdy z twoich <##4bbfe2>Sopelków &7zadaje dodatkowe%nl%&f%0.2*{_x2}% &7obrażeń i ma &f%1*{_x2}%%% &7szans na przyznanie%nl%&7<##4bbfe2>Palców Mrozu&7."
			set {traits::Glaceon::3::opis::%player%} to "&7<##4bbfe2>Lodowe Żyły &7przyznają ci ładunek <##4bbfe2>Palców Mrozu%nl%&7i zwiększają twoją statystykę obrażeń o &f%35*{_x3}%%nl%&7na 15 sekund."
			set {traits::Glaceon::4::opis::%player%} to "&7<##4bbfe2>Mroźny Pocisk &7ma o &f%3*{_x4}%%% &7zwiększoną szansę%nl%&7na przyznanie ci <##4bbfe2>Palców Mrozu&7."
			set {traits::Glaceon::5::opis::%player%} to "&7<##4bbfe2>Ice Lance &7zadaje &f%0.9*{_x5}% &7więcej obrażeń, gdy%nl%&7twoja ostatnia użyta umiejętność to <##4bbfe2>Mroźny Pocisk&7."
			set {traits::Glaceon::6::opis::%player%} to "&7<##4bbfe2>Mroźny Pocisk &7ma &f%5*{_x6}%%% &7szans na wygenerowanie%nl%&7dwóch dodatkowych <##4bbfe2>Sopelków&7."
			set {traits::Glaceon::7::opis::%player%} to "&7Zwiększa czas trwania <##4bbfe2>Lodowych Żył &7o%nl%&f%4*{_x7}% sekund&7."
			set {traits::Glaceon::8::opis::%player%} to "&7<##4bbfe2>Mroźny Pocisk &7zwiększa obrażenia <##4bbfe2>Mroźnego Pocisku%nl%&7o &f%0.5*{_x8}%&7, &7stackując się maksymalnie 3 razy. Ten efekt%nl%&7resetuje się, gdy użyjesz <##4bbfe2>Mroźnego Pocisku &7na%nl%&7innym przeciwniku."
			set {traits::Glaceon::9::opis::%player%} to "&7<##4bbfe2>Lodowa Lanca &7zadaje dodatkowe &f%0.7*{_x9}% obrażeń%nl%&7i redukuje cooldown <##4bbfe2>Lodowych Żył &7o &f%0.3*{_x9}% %{_tekst}%&7."
			set {traits::Glaceon::10::opis::%player%} to "&7<##4bbfe2>Mroźny Pocisk &7zadaje dodatkowe &f%0.5*{_x10}% &7%{_tekst2}%,%nl%&7oraz ma dodatkowe &f%1*{_x10}%%% &7szans na trafienie%nl%&7krytyczne."
			
on leave:
	if {kolekcja::karty::%player%::*} contains "Glaceon":
		loop 10 times:
			clear {traits::Glaceon::%loop-number%::opis::%player%}
	clear {iciclelaunch::%player%}
on rightclick:
	if player's tool is light blue dye:
		if name of player's tool = "<##4bbfe2>Ice Lance" or "<##4bbfe2>Lodowa Lanca":
			cancel event
			if {kartaname::%player%} = "Glaceon":
				if CanUseAbility(player) != false:
					set {_target} to Target(player, 100, false)
					if {_target} is set:
						set {_id} to line 19 of lore of {karta::%player%}
						if player's chestplate is golden nugget:
							if name of player's chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
								if line 30 of lore of player's chestplate contains player's name:
									set {_loreheart::*} to lore of player's chestplate
						if metadata value "cast" of player is not set:
							set {_crit} to 25 + ({criticalhit::%player%}/10)
							set {_cd} to 1.5
							set {_pospiech} to 1 + ({haste::%player%}/4)/100
							set {_damageicicles} to 0.4 + {mastery::%player%}/57
							set {_cd} to {_cd}/{_pospiech}
							set {_damage} to 2.5 + {damage::%player%}/40 + {versatility::%player%}/120 + {primarystat::%player%}/20

							if tag "Talents;Row 2" of nbt of {karta::%player%} = "Lonely Winter":
								set {_damage} to {_damage}*1.25

							if tag "Constellation;Frigid Winds" of nbt of {karta::%player%} is set:
								set {_damage} to {_damage} * (1 + (({crowdcontrol::%player%}*0.3)/100))

							if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
								if metadata value "Icy Veins" of player is true:
									set {_damage} to {_damage}*1.2
									set {_damageicicles} to {_damageicicles}*1.2

							if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
								set {_damage} to {_damage}*1.05
								set {_damageicicles} to {_damageicicles}*1.05

							if tag "Constellation;Eternal Winter" of nbt of {karta::%player%} is set:
								set {_iciclesCap} to 7
							else:
								set {_iciclesCap} to 5

							set line 5 of lore of player's tool to "<##4bbfe2>Strzela lodową lancą w cel, zadajac &f%{_damage}% <##4bbfe2>obrażeń."
							set {_loreicicles} to "&7Użycie <##4bbfe2>Frostbolt &7przyzna ci <##4bbfe2>Sopelek&7. Użycie%nl%&7<##4bbfe2>Lodowej Lancy &7wystrzeli wszystkie przechowane%nl%<##4bbfe2>Sopelki &7w cel, każdy zadając &f%{_damageicicles}% &7obrażeń <##add8e6>Lodu&7.%nl% %nl%&7Maksymalnie %{_iciclesCap}% <##4bbfe2>Sopelków &7może być przechowane,%nl%&7a każdy wygenerowany <##4bbfe2>Sopelek &7w nadmiarze%nl%&7zostanie natychmiastowo wystrzelony."
							set {_lore} to "&8Umiejętność%nl%&fNatychmiastowy cast%nl%&7Globalny Cooldown: &f%{_cd}% sekund%nl%&7Użycie: &fPPM%nl%<##4bbfe2>Strzela lodową lancą w cel, zadając &f%{_damage}% <##4bbfe2>obrażeń <##add8e6>Lodu<##4bbfe2>.%nl%<##4bbfe2>Lodowa Lanca zadaje podwójne obrażenia%nl%<##4bbfe2>zamrożonym celom, oraz włącza &f%{_cd}% sekundowy%nl%<##4bbfe2>cooldown dla wszystkich zaklęć, gdy zostanie%nl%<##4bbfe2>użyta bez aktywnych <##aedafc>Palców Mrozu<##4bbfe2>."
							set {_loreEN} to "&8Ability%nl%&fInstant cast%nl%&7Global Cooldown: &f%{_cd}% seconds%nl%&7Use: &fRMB%nl%<##4bbfe2>Shoots an Ice Lance at your target, inflicting &f%{_damage}% <##add8e6>Ice%nl%<##4bbfe2>damage. Ice Lance deals double damage against%nl%<##4bbfe2>frozen targets and puts your spells on a &f%{_cd}% second%nl%<##4bbfe2>cooldown when it is used without <##aedafc>Fingers of Frost<##4bbfe2>."
							set {_loreiciclesEN} to "&7Casting <##4bbfe2>Frostbolt &7grants you an <##4bbfe2>Icicle&7.%nl%&7Casting <##4bbfe2>Ice Lance &7hurls all stored <##4bbfe2>Icicles%nl%&7at your target, each dealing &f%{_damageicicles}% <##add8e6>Ice &7damage.%nl% %nl%&7Up to %{_iciclesCap}% <##4bbfe2>Icicles &7can be stored.%nl%&7Any excess <##4bbfe2>Icicles &7gained will be%nl%&7automatically launched."
							if {language::%player%} = "English":
								if name of player's tool does not contain "Ice Lance":
									replace all "Lodowa Lanca" in player's tool's name with "Ice Lance"
								set lore of player's tool to {_loreEN}
							else:
								if name of player's tool does not contain "Lodowa Lanca":
									replace all "Ice Lance" in player's tool's name with "Lodowa Lanca"
								set lore of player's tool to {_lore}
							if cooldown "Ice Lance%player%" is finished:								
								AbilityUse(player, "Ice Lance")
								#WHITEOUT
								loop {_loreheart::*}:
									loop-value contains "Whiteout":
										set {_line::*} to loop-value split at " "
										if {_line::3} is set:
											replace all "(" and " (" in {_line::3} with ""
											replace all "x)" in {_line::3} with ""
											set {_traitAmount} to "%{_line::3}%" parsed as number
										else:
											set {_traitAmount} to 1
										add (0.7*{trait::Glaceon::Whiteout::%player%})*{_traitAmount} to {_damage}
										set {_cdredu} to "%(0.3*{trait::Glaceon::Whiteout::%player%})*{_traitAmount}% seconds" parsed as timespan
										remove {_cdredu} from {icyveins::use::%player%}
										set {icyveins::cooldown::%player%} to difference between {icyveins::use::%player%} and now
										set {_cdiv} to "%difference between {cdicyveins::%player%} and {icyveins::cooldown::%player%}%" parsed as timespan
										loop all items in the inventory of player:
											if loop-value-2 is lapis lazuli:
												if name of loop-value-2 contains "Icy Veins":
													if cooldown of loop-value-2 for player is set:
														set the cooldown of loop-value-2 for player to {_cdiv}
														stop loop
								#PACKED ICE
									loop-value contains "Packed Ice":
										if metadata value "lastspell" of player contains "Frostbolt":
											add (0.9*{trait::Glaceon::Packed Ice::%player%}) to {_damage}
								if {frozenfingers::%player%} = 0:
									set cooldown "Ice Lance%player%" to "%{_cd}% seconds" parsed as timespan
									set cooldown "Frostbolt%player%" to "%{_cd}% seconds" parsed as timespan
									set cooldown "Flurry%player%" to "%{_cd}% seconds" parsed as timespan
									set cooldown "Glacial Spike%player%" to "%{_cd}% seconds" parsed as timespan
									set the cooldown of player's tool for player to "%{_cd}% seconds" parsed as timespan
								if {extraSecondsIcyVeins::%player%} is not set:
									set {extraSecondsIcyVeins::%player%} to 0 seconds
								if {frozenfingers::%player%} > 0:
									remove 1 from {frozenfingers::%player%}
									if tag "Talents;Row 2" of nbt of {karta::%player%} = "Thermal Void":
										if metadata value "Icy Veins" of player is true:
											add 1 second to {extraSecondsIcyVeins::%player%}
									#CHAIN REACTION
									#loop {_loreheart::*}:
										#loop-value contains "Chain Reaction":
											#add (0.6*{trait::Glaceon::Chain Reaction::%player%}) to {_chainbuff}
									if tag "Talents;Row 3" of nbt of {karta::%player%} = "Chain Reaction":
										set {_chainbuff} to 0.02*{chainreaction::%player%}
									if {chainreaction::%player%} < 5:
										add 1 to {chainreaction::%player%}
									if {_chainbuff} is set:
										#3% chain reaction -> set {_damage} to ({_damage}*(1+(({_chainbuff}/100)*{chainreaction::%player%})))
										set {_damage} to {_damage} * (1+{_chainbuff})
									set {czaschain::%player%} to 10 seconds
									if {chainreac::%player%} is not set:
										set {chainreac::%player%} to true
									set {_frozen} to true
									if tag "Constellation;Deep Shatter" of nbt of {karta::%player%} is set:
										if {wintersChill::%{_target}%} > 0:
											set {_damage} to {_damage}*1.1
									if {frozenfingers::%player%} = 0:
										if metadata value "BrainFreeze" of player is true:
											send title " " with subtitle "" to player for 1 minute with fade in 0.25 second and fade out 0 second
										else:
											send title " " with subtitle " " to player for 1 second with fade in 0.0 second and fade out 0.0 second
									if {frozenfingers::%player%} = 1:
										if metadata value "BrainFreeze" of player is true:
											send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
										else:
											send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
								if {wintersChill::%{_target}%} > 0:
									set {wintersChill::%{_target}%} to {wintersChill::%{_target}%} - 1
									if {wintersChill::%{_target}%} = 0:
										clear {wintersChill::%{_target}%}
									set {_frozen} to true
									if tag "Talents;Row 2" of nbt of {karta::%player%} = "Thermal Void":
										add 1 second to {extraSecondsIcyVeins::%player%}
								if {_frozen} is true:
									set {_damage} to {_damage}*2
									add 50 to {_crit}
									if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
										set {_damage} to {_damage}*1.05
								icelancehurlSound(player)
								set {_l} to location 0.3 blocks below player's head
								set {_l} to location 0.4 blocks left of {_l}
								#set {_pid} to random 8 char string from charset `0-9`
								#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
								set {_vec} to vector between player and {_target}'s head
								loop round(distance between {_l} and {_target}) / 0.5 times:
									set {_vec} to vector between {_l} and {_target}'s head
									set vector length of {_vec} to loop-value * 0.5
									draw 1 of dust using dustOption((rgb 156, 255, 252), 1) at {_l} ~ {_vec}
									make 1 of block particle using packed ice at {_l} ~ {_vec}
								#drawLine particle redstone, RGB 156, 255, 252, center location of {_l}, target location of {_target}'s head, id "%{_pid}%", rainbowMode false, solid true, density 25, length 0, zigZag count 5, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 3
								if {_r} > 10:
									set {_r} to distance between player and {_target}
									set {_sek} to "%{_r} - 10% ticks" parsed as timespan
								if {icicles::%player%} > 0:
									if {iciclelaunch::%player%} is not set:
										set {iciclelaunch::%player%} to true
								if distance between player and {_target} < 5:
									wait 0.3 seconds
								else:
									wait 0.5 seconds
								chance of {_crit}%:
									if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
										set {_damage} to {_damage}*2.2
									else:
										set {_damage} to {_damage}*2
									if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
										if metadata value "Icy Veins" of player is true:
											remove 0.75 seconds from cooldown "Icy Veins%player%"
								set {_target}'s last damage cause to sweep attack
								set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Ice Lance"
								set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Lodowa Lanca"
								set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
								set metadata value "LastDamageCauseLore" of {_target} to {_lore}
								set metadata value "Element" of player to "Ice"
								make player damage {_target} by {_damage}*2
								DamageDisplay({_target}, "&l<##4bbfe2>%{_damage}% DMG", player)
								icelanceHitSound({_target})
								if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
									set {lastDamagedTarget::%player%} to {_target}
								if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
									loop all entities in radius 5 around {_target}:
										if tag "custom;ECMob" of nbt of loop-entity is set:
											set loop-entity's last damage cause to sweep attack
											set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Ice Lance"
											set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Lodowa Lanca"
											set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
											set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
											set metadata value "Element" of player to "Ice"
											make player damage loop-entity by 0.2*({_damage}*2)
											DamageDisplay(loop-entity, "&l<##4bbfe2>%{_damage}% DMG", player)
								ChainReaction(player)
								if tag "Talents;Row 5" of nbt of {karta::%player%} != "Glacial Spike":
									if {_sek} is set:
										wait {_sek}
									#stopEffect "%{_pid}%"
									if {icicles::%player%} > 0:
										if {iciclelaunch::%player%} is not false:
											set {iciclelaunch::%player%} to false
											wait 5 ticks
											#if {icicles::%player%} > 6:
											#	set {_l5} to location 0.4 blocks above player's head
											#	set {_l5} to location 0.9 blocks right of {_l5}
											#if {icicles::%player%} > 5:
											#	set {_l5} to location 0.4 blocks above player's head
											#	set {_l5} to location 0.9 blocks left of {_l5}
											#if {icicles::%player%} > 4:
											#	set {_l5} to location 0.4 blocks above player's head
											#	set {_l5} to location 0.6 blocks right of {_l5}
											#if {icicles::%player%} > 3:
											#	set {_l4} to location 0.5 blocks above player's head
											#	set {_l4} to location 0.3 blocks right of {_l4}
											#if {icicles::%player%} > 2:
											#	set {_l3} to location 0.6 blocks above player's head
											#if {icicles::%player%} > 1:
											#	set {_l2} to location 0.5 blocks above player's head
											#	set {_l2} to location 0.3 blocks left of {_l2}
											#if {icicles::%player%} > 0:
											#	set {_l} to location 0.4 blocks above player's head
											#	set {_l} to location 0.6 blocks left of {_l}
											#set {_n} to {_iciclesCap}
											loop {icicles::%player%} times:
												set {_damageicicles} to 0.4 + {mastery::%player%}/57
												if {_frozen} is true:
													if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
														set {_damageicicles} to {_damageicicles}*1.05
												if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
													if metadata value "Icy Veins" of player is true:
														set {_damageicicles} to {_damageicicles}*1.2
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
													set {_damageicicles} to {_damageicicles}*1.05
												if tag "Talents;Row 2" of nbt of {karta::%player%} = "Ice Nine":
													add 1 to {icicleCount::%player%}
												set {_rgb} to (rgb 106, 184, 230)
												if tag "Talents;Row 3" of nbt of {karta::%player%} = "Black Ice":
													chance of 20%:
														set {_damageicicles} to {_damageicicles}*1.6
														set {_rgb} to (rgb 28, 28, 28)
												set {_rgb::%loop-number%} to {_rgb}
												#if {_n} = 1:
													#set {_pid1} to random 8 char string from charset `0-9`
													#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#	set {_vec} to vector between player and {_target}'s head
												#	loop round(distance between {_l} and {_target}) / 0.5 times:
												#		set {_vec} to vector between {_l} and {_target}'s head
												#		set vector length of {_vec} to loop-value-2 * 0.5
												#		draw 1 of dust using dustOption({_rgb}, 1) at {_l} ~ {_vec}
													#drawLine particle redstone, RGB 106, 184, 230, center location of {_l}, target location of {_target}'s head, id "%{_pid1}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#if {_n} = 2:
													#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#	set {_vec} to vector between player and {_target}'s head
												#	loop round(distance between {_l2} and {_target}) / 0.5 times:
												#		set {_vec} to vector between {_l2} and {_target}'s head
												#		set vector length of {_vec} to loop-value-2 * 0.5
												#		draw 1 of dust using dustOption({_rgb}, 1) at {_l2} ~ {_vec}
													#set {_pid2} to random 8 char string from charset `0-9`
													#drawLine particle redstone, RGB 106, 184, 230, center location of {_l2}, target location of {_target}'s head, id "%{_pid2}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#if {_n} = 3:
													#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#	set {_vec} to vector between player and {_target}'s head
												#	loop round(distance between {_l3} and {_target}) / 0.5 times:
												#		set {_vec} to vector between {_l3} and {_target}'s head
												#		set vector length of {_vec} to loop-value-2 * 0.5
												#		draw 1 of dust using dustOption({_rgb}, 1) at {_l3} ~ {_vec}
													#set {_pid3} to random 8 char string from charset `0-9`
													#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%{_pid3}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#if {_n} = 4:
													#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#	set {_vec} to vector between player and {_target}'s head
												#	loop round(distance between {_l4} and {_target}) / 0.5 times:
												#		set {_vec} to vector between {_l4} and {_target}'s head
												#		set vector length of {_vec} to loop-value-2 * 0.5
												#		draw 1 of dust using dustOption({_rgb}, 1) at {_l4} ~ {_vec}
													#set {_pid4} to random 8 char string from charset `0-9`
													#drawLine particle redstone, RGB 106, 184, 230, center location of {_l4}, target location of {_target}'s head, id "%{_pid4}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#if {_n} = 5:
													#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#	set {_vec} to vector between player and {_target}'s head
												#	loop round(distance between {_l5} and {_target}) / 0.5 times:
												#		set {_vec} to vector between {_l5} and {_target}'s head
												#		set vector length of {_vec} to loop-value-2 * 0.5
												#		draw 1 of dust using dustOption({_rgb}, 1) at {_l5} ~ {_vec}
													#set {_pid5} to random 8 char string from charset `0-9`
													#drawLine particle redstone, RGB 106, 184, 230, center location of {_l5}, target location of {_target}'s head, id "%{_pid5}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#remove 1 from {_n}
												if {_rgb} = (rgb 28, 28, 28):
													play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 0.7 at player
												else:
													play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1.5 at player
												#FLASH FREEZE
												loop {_loreheart::*}:
													loop-value-2 contains "Flash Freeze":
														add (0.2*{trait::Glaceon::Flash Freeze::%player%}) to {_damageicicles}
														add (1*{trait::Glaceon::Flash Freeze::%player%}) to {_chanceicicles}
												if {icicleCount::%player%} = 9:
													set {_damageicicles} to {_damageicicles}*1.9
													set {icicleCount::%player%} to 0
												chance of {_crit}%:
													if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
														set {_damageicicles} to {_damageicicles}*2.2
													else:
														set {_damageicicles} to {_damageicicles}*2
													if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
														if metadata value "Icy Veins" of player is true:
															remove 0.75 seconds from cooldown "Icy Veins%player%"
												set {_target}'s last damage cause to sweep attack
												set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Icicles"
												set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Sopelki"
												set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
												set metadata value "LastDamageCauseLore" of {_target} to {_lore}
												set metadata value "Element" of player to "Ice"
												make player damage {_target} by ({_damageicicles}*2)
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
													set {lastDamagedTarget::%player%} to {_target}
												chance of {_chanceicicles}%:
													if {frozenfingers::%player%} < 2:
														add 1 to {frozenfingers::%player%}
													if {frozenfingers::%player%} = 1:
														if metadata value "BrainFreeze" of player is true:
															send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
														else:
															send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
													if {frozenfingers::%player%} = 2:
														if metadata value "BrainFreeze" of player is true:
															send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
														else:
															send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
												add {_damageicicles} to {_totaldmgicicles}
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
													loop all entities in radius 5 around {_target}:
														if tag "custom;ECMob" of nbt of loop-entity is set:
															set loop-entity's last damage cause to sweep attack
															set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Icicles"
															set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Sopelki"
															set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
															set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
															set metadata value "Element" of player to "Ice"
															make player damage loop-entity by 0.2*({_damageicicles}*2)
															add {_damageicicles}*0.2 to {_totaldamageiciclesSplittingIce}
												clear {_damageicicles}
												wait 2 ticks
										#clear metadata value "Icicles" of player
										clear {iciclelaunch::%player%}
										loop {icicles::%player%} times:
											if tag "Talents;Row 1" of nbt of {karta::%player%} = "Ice Cycle":
												chance of 5%:
													set {_iceCycle} to true
											if {_iceCycle} is not set:
												set {_icicleVisual} to {icicle%{icicles::%player%}%::%player%}
												clear {icicle%{icicles::%player%}%::%player%}
												set {icicles::%player%} to {icicles::%player%} - 1
												#kill {_icicleVisual}
												IcicleHurl(player, {_icicleVisual}, {_target}, {_rgb::%loop-number%})
											clear {_iceCycle}
										send action bar " Icicles: %{icicles::%player%}%" to player
										if {_totaldmgicicles} >= 0:
											DamageDisplay({_target}, "&l<##4bbfe2>%{_totaldmgicicles}% DMG", player)
										if {_totaldamageiciclesSplittingIce} >= 0:
											DamageDisplay({_target}, "&l<##4bbfe2>%{_totaldamageiciclesSplittingIce}% DMG", player)
										#if {icicles::%{_p}%} > 0:
											#if metadata value "Icicles" of player is not set:
												#Icicles(player)
								wait 1 tick
								if tag "Constellation;Hailstones" of nbt of {karta::%player%} is set:
									if {_frozen} is true:
										add 1 to {icicles::%player%}
										#if metadata value "Icicles" of player is not set:
											#Icicles(player)
										if {icicles::%player%} > {_iciclesCap}:

											set {_extraamount} to {icicles::%player%} - {_iciclesCap}
											loop {_extraamount} times:
												set {icicles::%player%} to {icicles::%player%} - 1
												set {_randomIcicle} to a random integer between 1 and {_iciclesCap}
												set {_icicleVisual} to {icicle%{_randomIcicle}%::%player%}
												clear {icicle%{_randomIcicle}%::%player%}
												set {_damageicicles} to 0.4 + {mastery::%player%}/57
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damageicicles} to {_damageicicles}*1.05
												if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
													if metadata value "Icy Veins" of player is true:
														set {_damageicicles} to {_damageicicles}*1.2
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
													set {_damageicicles} to {_damageicicles}*1.05
												if tag "Talents;Row 2" of nbt of {karta::%player%} = "Ice Nine":
													add 1 to {icicleCount::%player%}
												set {_rgb} to (rgb 106, 184, 230)
												if tag "Talents;Row 3" of nbt of {karta::%player%} = "Black Ice":
													chance of 20%:
														set {_damageicicles} to {_damageicicles}*1.6
														set {_rgb} to (rgb 28, 28, 28)
												#set {_randomici} to a random integer between 1 and 5
												#if {_randomici} = 1:
												#	set {_l} to location 0.4 blocks above player's head
												#	set {_l} to location 0.6 blocks left of {_l}
												#	set {_locice} to {_l}
												#if {_randomici} = 2:
												#	set {_l2} to location 0.5 blocks above player's head
												#	set {_l2} to location 0.3 blocks left of {_l2}
												#	set {_locice} to {_l2}
												#if {_randomici} = 3:
												#	set {_l3} to location 0.6 blocks above player's head
												#	set {_locice} to {_l3}
												#if {_randomici} = 4:
												#	set {_l4} to location 0.5 blocks above player's head
												#	set {_l4} to location 0.3 blocks right of {_l4}
												#	set {_locice} to {_l4}
												#if {_randomici} = 5:
												#	set {_l5} to location 0.4 blocks above player's head
												#	set {_l5} to location 0.6 blocks right of {_l5}
												#	set {_locice} to {_l5}
												#set {_l3} to location 0.6 blocks above player's head
												if {_rgb} = (rgb 28, 28, 28):
													play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 0.7 at player
												else:
													play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1.5 at player
												set {_locIce} to location of {_icicleVisual}
												set {_yaw} to yaw of player
												set {_pitch} to pitch of player
												set yaw of {_locIce} to {_yaw}
												set pitch of {_locIce} to {_pitch}
												set {_targetLoc} to location 0.5 below {_target}
												set {_loop} to round((distance between {_locIce} and {_targetLoc}) / 1)
												loop {_loop} times:
													set {_targetLoc} to location 0.5 below {_target}
													set {_vec} to vector between {_locIce} and {_targetLoc}
													set vector length of {_vec} to loop-value-2 * 2
													teleport {_icicleVisual} to {_locIce} ~ {_vec}
													set {_icicleLoc} to location of {_icicleVisual}
													increase y-coordinate of {_icicleLoc} by 2 
													draw 1 of dust using dustOption({_rgb}, 1) at {_icicleLoc}
													wait 1 tick
												kill {_icicleVisual}
												#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
												#set {_vec} to vector between player and {_target}'s head
												#loop round(distance between {_locice} and {_target}) / 0.5 times:
												#	set {_vec} to vector between {_locice} and {_target}'s head
												#	set vector length of {_vec} to loop-value-2 * 0.5
												#	draw 1 of dust using dustOption({_rgb}, 1) at {_locice} ~ {_vec}
												#set {_pid} to random 8 char string from charset `0-9`
												#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%{_pid}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
												#IcicleHurl(player, {_icicleVisual}, {_target}, {_rgb})
												IcicleForm(player, {_randomIcicle})
												#FLASH FREEZE
												loop {_loreheart::*}:
													loop-value-2 contains "Flash Freeze":
														add (0.2*{trait::Glaceon::Flash Freeze::%player%}) to {_damageicicles}
														add (1*{trait::Glaceon::Flash Freeze::%player%}) to {_chanceicicles}
												if {icicleCount::%player%} = 9:
													set {_damageicicles} to {_damageicicles}*1.9
													set {icicleCount::%player%} to 0
												chance of {_crit}%:
													if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
														set {_damageicicles} to {_damageicicles}*2.2
													else:
														set {_damageicicles} to {_damageicicles}*2
													if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
														if metadata value "Icy Veins" of player is true:
															remove 0.75 seconds from cooldown "Icy Veins%player%"
												set {_target}'s last damage cause to sweep attack
												set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Icicles"
												set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Sopelki"
												set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
												set metadata value "LastDamageCauseLore" of {_target} to {_lore}
												set metadata value "Element" of player to "Ice"
												make player damage {_target} by ({_damageicicles}*2)
												DamageDisplay({_target}, "&l<##4bbfe2>%{_damageicicles}% DMG", player)
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
													set {lastDamagedTarget::%player%} to {_target}
												if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
													loop all entities in radius 5 around {_target}:
														if tag "custom;ECMob" of nbt of loop-entity is set:
															set loop-entity's last damage cause to sweep attack
															set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Icicles"
															set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Sopelki"
															set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
															set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
															set metadata value "Element" of player to "Ice"
															make player damage loop-entity by 0.2*({_damageicicles}*2)
															DamageDisplay(loop-entity, "&l<##4bbfe2>%{_damageicicles}*0.2% DMG", player)
												chance of {_chanceicicles}%:
													if {frozenfingers::%player%} < 2:
														add 1 to {frozenfingers::%player%}
													if {frozenfingers::%player%} = 1:
														if metadata value "BrainFreeze" of player is true:
															send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
														else:
															send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
													if {frozenfingers::%player%} = 2:
														if metadata value "BrainFreeze" of player is true:
															send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
														else:
															send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
												clear {_damageicicles}
												if {_extraamount} > 1:
													wait 2 ticks
												#stopEffect "%{_pid}%"
										else:
											IcicleForm(player, {icicles::%player%})
										send action bar " Icicles: %{icicles::%player%}%" to player	
							else: 
								cancel event
								if {tekstcd::%player%} = true:
									set {_cdd} to cooldown "Ice Lance%player%"
									set the cooldown of player's tool for player to {_cdd}
									if {language::%player%} = "English":
										send "<##4bbfe2>You must wait &f%{_cdd}%<##4bbfe2> to use this ability." to player
									else:
										send "<##4bbfe2>Musisz odczekać &f%{_cdd}%<##4bbfe2>, aby użyć tej umiejętności." to player
								stop
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if player's tool is blue dye:
		if name of player's tool = "<##4bbfe2>Frostbolt" or "<##4bbfe2>Mroźny Pocisk":
			cancel event
			if {kartaname::%player%} = "Glaceon":
				if CanUseAbility(player) != false:
					set {_target} to Target(player, 100, false)
					if {_target} is set:
						set {_id} to line 19 of lore of {karta::%player%}
						if player's chestplate is golden nugget:
							if name of player's chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
								if line 30 of lore of player's chestplate contains player's name:
									set {_loreheart::*} to lore of player's chestplate
						set {_pospiech} to 1 + ({haste::%player%}/4)/100
						set {_casttime} to "%round((2/{_pospiech}), 1)% seconds" parsed as timespan
						#FROZEN TOUCH
						loop {_loreheart::*}:
							loop-value contains "Frozen Touch":
								add (3*{trait::Glaceon::Frozen Touch::%player%}) to {_chcf}
						if {_target} is set:
							if {_target} is alive:
								set {_crit} to 25 + {criticalhit::%player%}/10
								set {_damage} to 2 + {damage::%player%}/40 + {versatility::%player%}/120 + {primarystat::%player%}/20
								set {_damageicicles} to 0.4 + {mastery::%player%}/57

								if tag "Talents;Row 2" of nbt of {karta::%player%} = "Lonely Winter":
									set {_damage} to {_damage}*1.25
								
								if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
									if metadata value "Icy Veins" of player is true:
										set {_damage} to {_damage}*1.2
										set {_damageicicles} to {_damageicicles}*1.2
								if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
									set {_damage} to {_damage}*1.05
									set {_damageicicles} to {_damageicicles}*1.05
								
								if tag "Talents;Row 4" of nbt of {karta::%player%} = "Slick Ice":
									if metadata value "Icy Veins" of player is true:
										if {slickIce::%player%} > 1:
											set {_slickIceReduction} to (1 - (0.04*{slickIce::%player%}))
											set {_casttime} to "%round(((2/{_pospiech})*{_slickIceReduction}), 1)% seconds" parsed as timespan
									set {_baseCd} to 2/(1 + (0.04*{slickIce::%player%}))
								else:
									set {_baseCd} to 2	

								if tag "Constellation;Deep Shatter" of nbt of {karta::%player%} is set:
									set {_damage} to {_damage}*1.05

								if tag "Constellation;Eternal Winter" of nbt of {karta::%player%} is set:
									set {_iciclesCap} to 7
								else:
									set {_iciclesCap} to 5

								set {_cd} to {_baseCd}/{_pospiech}
								#set line 5 of lore of player's tool to "<##4bbfe2>Strzela w cel mroźnym pociskiem, zadajac &f%{_damage}%"
								#set line 6 of lore of player's tool to "<##4bbfe2>obrażeń, oraz spowalniajac%nl%<##4bbfe2>o &f%{_slow}%%% <##4bbfe2>na &f%{_slowtime}% sekund. Frostbolt ma"
								#set line 7 of lore of player's tool to "&f%15 +{_chcf}% <##4bbfe2>szans na przyznanie <##aedafc>Palców Mrozu."
								set {_slowtime} to "%2 + ({crowdcontrol::%player%}/50)% seconds" parsed as timespan
								set {_slow} to 40
								set {_loreEN} to "&8Ability%nl%&f%round(({_baseCd}/{_pospiech}), 1)% second cast%nl%&7Cooldown: &fnone%nl%&7Use: &fRMB%nl%<##4bbfe2>Launches a bolt of frost at the enemy,%nl%<##4bbfe2>dealing &f%{_damage}% <##add8e6>Ice <##4bbfe2>damage and slowing by &f%{_slow}%%%%nl%<##4bbfe2>for &f%{_slowtime}% seconds<##4bbfe2>.%nl% %nl%<##4bbfe2>Frostbolt has a &f%15 +{_chcf}%%% <##4bbfe2>chance%nl%<##4bbfe2>to grant <##aedafc>Fingers of Frost <##4bbfe2>and a &f%30 + {_chbf}%%%%nl%<##4bbfe2>chance to grant <##aedafc>Brain Freeze<##4bbfe2>.%nl% %nl%<##aedafc>Fingers of Frost<##4bbfe2>: Your next Ice Lance will%nl%<##4bbfe2>deal damage as if the target were%nl%<##4bbfe2>Frozen and will not trigger cooldown.%nl% %nl%<##aedafc>Brain Freeze<##4bbfe2>: Empowers your next Flurry to%nl%<##4bbfe2>be instant cast, deal &f50%% <##4bbfe2>increased damage%nl%<##4bbfe2>and apply <##aedafc>Winter's Chill <##4bbfe2>to the target.%nl% %nl%<##aedafc>Winter's Chill<##4bbfe2>: Causes the target to take%nl%<##4bbfe2>damage from your spells as if it were Frozen."
								set {_loreiciclesEN} to "&7Casting <##4bbfe2>Frostbolt &7grants you an <##4bbfe2>Icicle&7.%nl%&7Casting <##4bbfe2>Ice Lance &7hurls all stored <##4bbfe2>Icicles%nl%&7at your target, each dealing &f%{_damageicicles}% <##add8e6>Ice &7damage.%nl% %nl%&7Up to %{_iciclesCap}% <##4bbfe2>Icicles &7can be stored.%nl%&7Any excess <##4bbfe2>Icicles &7gained will be%nl%&7automatically launched."
								set {_lore} to "&8Umiejętność%nl%&f%round(({_baseCd}/{_pospiech}), 1)% sekundowy cast%nl%&7Cooldown: &fbrak%nl%&7Użycie: &fPPM%nl%<##4bbfe2>Strzela w cel mroźnym pociskiem, zadając &f%{_damage}%%nl%<##4bbfe2>obrażeń <##add8e6>Lodu<##4bbfe2>, oraz spowalniajac <##4bbfe2>o &f%{_slow}%%% <##4bbfe2>na%nl%&f%{_slowtime}% &fsekund<##4bbfe2>.%nl% %nl%<##4bbfe2>Frostbolt ma &f%15 +{_chcf}%%% <##4bbfe2>szans na <##4bbfe2>przyznanie%nl%<##aedafc>Palców Mrozu <##4bbfe2>i &f%30 + {_chbf}%%% <##4bbfe2>szans na przyznanie%nl%<##aedafc>Zamrożenia Mózgu<##4bbfe2>.%nl% %nl%<##aedafc>Palce Mrozu<##4bbfe2>: Twoja następna Lodowa Lanca%nl%<##4bbfe2>zada obrażenia celowi jakby był Zamrożony,%nl%<##4bbfe2>oraz nie będzie miała cooldownu. %nl% %nl%<##aedafc>Zamrożenie Mózgu<##4bbfe2>: Wzmacnia kolejną użytą Śnieżycę,%nl%<##4bbfe2>zmieniając ją w natychmiastowy cast, zwiększając%nl%<##4bbfe2>jej obrażenia o &f50%%<##4bbfe2>, oraz powodując, że nałoży%nl%<##aedafc>Chłód <##aedafc>Zimy <##4bbfe2>na cel.%nl% %nl%<##aedafc>Chłód Zimy<##4bbfe2>: sprawia, że cel otrzymuje obrażenia%nl%<##4bbfe2>od twoich zaklęć tak, jakby był Zamrożony."
								set {_loreicicles} to "&7Użycie <##4bbfe2>Frostbolt &7przyzna ci <##4bbfe2>Sopelek&7. Użycie%nl%&7<##4bbfe2>Lodowej Lancy &7wystrzeli wszystkie przechowane%nl%<##4bbfe2>Sopelki &7w cel, każdy zadając &f%{_damageicicles}% &7obrażeń <##add8e6>Lodu&7.%nl% %nl%&7Maksymalnie %{_iciclesCap}% <##4bbfe2>Sopelków &7może być przechowane,%nl%&7a każdy wygenerowany <##4bbfe2>Sopelek &7w nadmiarze%nl%&7zostanie natychmiastowo wystrzelony."
								if {language::%player%} = "English":
									if name of player's tool does not contain "Frostbolt":
										replace all "Mroźny Pocisk" in player's tool's name with "Frostbolt"
									set lore of player's tool to {_loreEN}
								else:
									if name of player's tool does not contain "Mroźny Pocisk":
										replace all "Frostbolt" in player's tool's name with "Mroźny Pocisk"
									set lore of player's tool to {_lore}
								set {_lorefrostbolt::*} to lore of player's tool
								set {_lorefrostbolt} to join {_lorefrostbolt::*} by nl
								if cooldown "Frostbolt%player%" is finished:
									if metadata value "cast" of player is not set:
										set the cooldown of player's held item for player to "%{_cd}% seconds" parsed as timespan
										frostboltSound(player)
										set metadata value "casting" of player to true
										set metadata value "cast" of player to {_casttime}
										while metadata value "casting" of player = true:
											if metadata value "cast" of player is not set:
												clear metadata value "casting" of player
												stop
											if {_casttime} > 0 seconds:
												set {_cst} to "%{_casttime}%"
												replace all "seconds" and "second" in {_cst} with "sekund"
												if {language::%player%} = "English":
													send action bar "Casting... %{_cst}%" to player
												else:
													replace all "seconds" and "second" in {_cst} with "sekund"
													send action bar "Rzucanie Zaklęcia..." to player
												wait 0.1 seconds
												remove 0.1 seconds from {_casttime}
											else:
												clear metadata value "casting" of player
												if {language::%player%} = "English":
													send action bar "" to player
												else:
													send action bar "" to player
												stop loop
									else:
										stop
									clear metadata value "casting" of player
									clear metadata value "cast" of player
									stopSoundGlaceon(player)
									if {_casttime} > 0 seconds:
										if {language::%player%} = "English":
											send action bar "&cInterrupted" to player
										else:
											send action bar "&cPrzerwano" to player
										stop
									AbilityUse(player, "Frostbolt")
									frostbolthurlSound(player)
									set {_chancefrozen} to 15
									if tag "Talents;Row 1" of nbt of {karta::%player%} = "Clarity of Thought":
										set {_brainFreezeChance} to 35
									else:
										set {_brainFreezeChance} to 30
									if tag "Talents;Row 3" of nbt of {karta::%player%} = "Frozen Touch":
										set {_chancefrozen} to {_chancefrozen}*1.25
										set {_brainFreezeChance} to {_brainFreezeChance}*1.2
									if tag "Talents;Row 4" of nbt of {karta::%player%} = "Slick Ice":
										if metadata value "Icy Veins" of player is true:
											if 6 > {slickIce::%player%}:
												set {slickIce::%player%} to {slickIce::%player%} + 1
												if {slickIce::%player%} > 1:
													set {_damage} to {_damage}*(1 + (0.04*{slickIce::%player%}))
											else if {slickIce::%player%} is not set:
												set {slickIce::%player%} to 1
									#FROZEN TOUCH
									loop {_loreheart::*}:
										loop-value contains "Frozen Touch":
											add (3*{trait::Glaceon::Frozen Touch::%player%}) to {_chancefrozen}
									chance of {_brainFreezeChance}%:
										set metadata value "BrainFreeze" of player to true
										if {frozenfingers::%player%} < 1:
											send title " " with subtitle "" to player for 1 minute with fade in 0.25 second and fade out 0 second
									chance of {_chancefrozen}%:
										if {frozenfingers::%player%} < 2:
											add 1 to {frozenfingers::%player%}
										if {frozenfingers::%player%} = 1:
											if metadata value "BrainFreeze" of player is true:
												send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
											else:
												send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
										else if {frozenfingers::%player%} = 2:
											if metadata value "BrainFreeze" of player is true:
												send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
									#SPLINTERING COLD
									loop {_loreheart::*}:
										loop-value contains "Splintering Cold":
											add (5*{trait::Glaceon::Splintering Cold::%player%}) to {_extraicicles}
									set {_iciclesBefore} to {icicles::%player%}
									add 1 to {icicles::%player%}
									chance of {_extraicicles}%:
										set {_extra} to 2
										add 2 to {icicles::%player%}
									#if metadata value "Icicles" of player is not set:
										#Icicles(player)
									Frostbolt(player, {_target}, {_crit}, {_damage}, {_slowtime})
									wait 1 tick
									if {icicles::%player%} > {_iciclesCap}:
										set {_extraamount} to {icicles::%player%} - {_iciclesCap}
										loop {_extraamount} times:
											set {icicles::%player%} to {icicles::%player%} - 1
											set {_randomIcicle} to a random integer between 1 and {_iciclesCap}
											set {_icicleVisual} to {icicle%{_randomIcicle}%::%player%}
											clear {icicle%{_randomIcicle}%::%player%}
											set {_damageicicles} to 0.4 + {mastery::%player%}/57
											if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
												if metadata value "Icy Veins" of player is true:
													set {_damageicicles} to {_damageicicles}*1.2
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
												set {_damageicicles} to {_damageicicles}*1.05
											if tag "Talents;Row 2" of nbt of {karta::%player%} = "Ice Nine":
												add 1 to {icicleCount::%player%}
											set {_rgb} to (rgb 106, 184, 230)
											if tag "Talents;Row 3" of nbt of {karta::%player%} = "Black Ice":
												chance of 20%:
													set {_damageicicles} to {_damageicicles}*1.6
													set {_rgb} to (rgb 28, 28, 28)
											if {wintersChill::%{_target}%} > 0:
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damageicicles} to {_damageicicles}*1.05
											#set {_randomici} to a random integer between 1 and 5
											#if {_randomici} = 1:
											#	set {_l} to location 0.4 blocks above player's head
											#	set {_l} to location 0.6 blocks left of {_l}
											#	set {_locice} to {_l}
											#if {_randomici} = 2:
											#	set {_l2} to location 0.5 blocks above player's head
											#	set {_l2} to location 0.3 blocks left of {_l2}
											#	set {_locice} to {_l2}
											#if {_randomici} = 3:
											#	set {_l3} to location 0.6 blocks above player's head
											#	set {_locice} to {_l3}
											#if {_randomici} = 4:
											#	set {_l4} to location 0.5 blocks above player's head
											#	set {_l4} to location 0.3 blocks right of {_l4}
											#	set {_locice} to {_l4}
											#if {_randomici} = 5:
											#	set {_l5} to location 0.4 blocks above player's head
											#	set {_l5} to location 0.6 blocks right of {_l5}
											#	set {_locice} to {_l5}
											#set {_l3} to location 0.6 blocks above player's head
											if {_rgb} = (rgb 28, 28, 28):
												play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 0.7 at player
											else:
												play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1.5 at player
											set {_locIce} to location of {_icicleVisual}
											set {_yaw} to yaw of player
											set {_pitch} to pitch of player
											set yaw of {_locIce} to {_yaw}
											set pitch of {_locIce} to {_pitch}
											set {_targetLoc} to location 0.5 below {_target}
											set {_loop} to round((distance between {_locIce} and {_targetLoc}) / 1)
											loop {_loop} times:
												set {_targetLoc} to location 0.5 below {_target}
												set {_vec} to vector between {_locIce} and {_targetLoc}
												set vector length of {_vec} to loop-value-2 * 2
												teleport {_icicleVisual} to {_locIce} ~ {_vec}
												set {_icicleLoc} to location of {_icicleVisual}
												increase y-coordinate of {_icicleLoc} by 2 
												draw 1 of dust using dustOption({_rgb}, 1) at {_icicleLoc}
												wait 1 tick
											kill {_icicleVisual}
											#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
											#set {_vec} to vector between player and {_target}'s head
											#loop round(distance between {_locice} and {_target}) / 0.5 times:
											#	set {_vec} to vector between {_locice} and {_target}'s head
											#	set vector length of {_vec} to loop-value-2 * 0.5
											#	draw 1 of dust using dustOption({_rgb}, 1) at {_locice} ~ {_vec}
											#set {_pid} to random 8 char string from charset `0-9`
											#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%{_pid}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
											#IcicleHurl(player, {_icicleVisual}, {_target}, {_rgb})
											IcicleForm(player, {_randomIcicle})
											#FLASH FREEZE
											loop {_loreheart::*}:
												loop-value-2 contains "Flash Freeze":
													add (0.2*{trait::Glaceon::Flash Freeze::%player%}) to {_damageicicles}
													add (1*{trait::Glaceon::Flash Freeze::%player%}) to {_chanceicicles}
											if {icicleCount::%player%} = 9:
												set {_damageicicles} to {_damageicicles}*1.9
												set {icicleCount::%player%} to 0
											chance of {_crit}%:
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damageicicles} to {_damageicicles}*2.2
												else:
													set {_damageicicles} to {_damageicicles}*2
												if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
													if metadata value "Icy Veins" of player is true:
														remove 0.75 seconds from cooldown "Icy Veins%player%"
											set {_target}'s last damage cause to sweep attack
											set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Icicles"
											set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Sopelki"
											set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
											set metadata value "LastDamageCauseLore" of {_target} to {_lore}
											set metadata value "Element" of player to "Ice"
											make player damage {_target} by ({_damageicicles}*2)
											DamageDisplay({_target}, "&l<##4bbfe2>%{_damageicicles}% DMG", player)
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
												set {lastDamagedTarget::%player%} to {_target}
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
												loop all entities in radius 5 around {_target}:
													if tag "custom;ECMob" of nbt of loop-entity is set:
														set loop-entity's last damage cause to sweep attack
														set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Icicles"
														set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Sopelki"
														set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
														set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
														set metadata value "Element" of player to "Ice"
														make player damage loop-entity by 0.2*({_damageicicles}*2)
														DamageDisplay(loop-entity, "&l<##4bbfe2>%{_damageicicles}*0.2% DMG", player)
											chance of {_chanceicicles}%:
												if {frozenfingers::%player%} < 2:
													add 1 to {frozenfingers::%player%}
												if {frozenfingers::%player%} = 1:
													if metadata value "BrainFreeze" of player is true:
														send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
													else:
														send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
												if {frozenfingers::%player%} = 2:
													if metadata value "BrainFreeze" of player is true:
														send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
													else:
														send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
											clear {_damageicicles}
											if {_extraamount} > 1:
												wait 2 ticks
											#stopEffect "%{_pid}%"
									else:
										if {_extra} is not set:
											set {_extra} to 0
										loop 1 + {_extra} times:
											IcicleForm(player, ({_iciclesBefore} + loop-number))
									send action bar " Icicles: %{icicles::%player%}%" to player
							else:
								cancel event
								if {tekstcd::%player%} = true:
									set {_cdd} to cooldown "Frostbolt%player%"
									set the cooldown of player's tool for player to {_cdd}
									if {language::%player%} = "English":
										send "<##4bbfe2>You must wait &f%{_cdd}%<##4bbfe2> to use this ability." to player
									else:
										send "<##4bbfe2>Musisz odczekać &f%{_cdd}%<##4bbfe2>, aby użyć tej umiejętności." to player
								stop
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if player's tool is prismarine shard:
		if name of player's tool = "<##4bbfe2>Flurry" or "<##4bbfe2>Śnieżyca":
			cancel event
			if {kartaname::%player%} = "Glaceon":
				if CanUseAbility(player) != false:
					set {_target} to Target(player, 100, false)
					if {_target} is set:
						set {_id} to line 19 of lore of {karta::%player%}
						if player's chestplate is golden nugget:
							if name of player's chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
								if line 30 of lore of player's chestplate contains player's name:
									set {_loreheart::*} to lore of player's chestplate
						set {_pospiech} to 1 + ({haste::%player%}/4)/100
						set {_casttime} to "%round((3/{_pospiech}), 1)% seconds" parsed as timespan
						#FROZEN TOUCH
						loop {_loreheart::*}:
							loop-value contains "Frozen Touch":
								add (3*{trait::Glaceon::Frozen Touch::%player%}) to {_chcf}
						if {_target} is set:
							if {_target} is alive:
								set {_crit} to 25 + ({criticalhit::%player%}/10)
								set {_damage} to (2 + (({damage::%player%}/36) + ({versatility::%player%}/108) + ({primarystat::%player%}/18)))/3
								set {_damageicicles} to 0.4 + {mastery::%player%}/57

								if tag "Talents;Row 2" of nbt of {karta::%player%} = "Lonely Winter":
									set {_damage} to {_damage}*1.25
								if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
									if metadata value "Icy Veins" of player is true:
										set {_damage} to {_damage}*1.2
										set {_damageicicles} to {_damageicicles}*1.2
								if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
									set {_damage} to {_damage}*1.05
									set {_damageicicles} to {_damageicicles}*1.05

								if tag "Constellation;Eternal Winter" of nbt of {karta::%player%} is set:
									set {_iciclesCap} to 7
								else:
									set {_iciclesCap} to 5

								set {_cd} to 3/{_pospiech}
								#set line 5 of lore of player's tool to "<##4bbfe2>Strzela w cel mroźnym pociskiem, zadajac &f%{_damage}%"
								#set line 6 of lore of player's tool to "<##4bbfe2>obrażeń, oraz spowalniajac%nl%<##4bbfe2>o &f%{_slow}%%% <##4bbfe2>na &f%{_slowtime}% sekund. Frostbolt ma"
								#set line 7 of lore of player's tool to "&f%15 +{_chcf}% <##4bbfe2>szans na przyznanie <##aedafc>Palców Mrozu."
								set {_slowtime} to "%1 + ({crowdcontrol::%player%}/100)% seconds" parsed as timespan
								set {_slow} to 70
								set {_loreEN} to "&8Ability%nl%&f%round((3/{_pospiech}), 1)% second cast%nl%&7No cooldown%nl%&7Use: &fRMB%nl%<##4bbfe2>Unleash a flurry of ice shards, striking the%nl%<##4bbfe2>target 3 times for a total of &f%{_damage}*3% <##add8e6>Ice <##4bbfe2>damage.%nl%<##4bbfe2>Each hit reduces the target's movement speed%nl%<##4bbfe2>by &f%{_slow}%%% <##4bbfe2>for &f%{_slowtime}% sec<##4bbfe2>."
								set {_loreiciclesEN} to "&7Casting <##4bbfe2>Frostbolt &7grants you an <##4bbfe2>Icicle&7.%nl%&7Casting <##4bbfe2>Ice Lance &7hurls all stored <##4bbfe2>Icicles%nl%&7at your target, each dealing &f%{_damageicicles}% <##add8e6>Ice &7damage.%nl% %nl%&7Up to %{_iciclesCap}% <##4bbfe2>Icicles &7can be stored.%nl%&7Any excess <##4bbfe2>Icicles &7gained will be%nl%&7automatically launched."
								set {_lore} to "&8Umiejętność%nl%&f%round((3/{_pospiech}), 1)% sekundowy cast%nl%&7Brak cooldownu%nl%&7Użycie: &fPPM%nl%<##4bbfe2>Uwolnij grad odłamków lodu, uderzając cel%nl%<##4bbfe2>3 razy, zadając łącznie &f%{_damage}*3% <##4bbfe2>obrażeń <##add8e6>Lodu.%nl%<##4bbfe2>Każde trafienie zmniejsza prędkość ruchu celu%nl%<##4bbfe2>o &f%{_slow}%%% <##4bbfe2>na &f%{_slowtime}% sekundę<##4bbfe2>."
								set {_loreicicles} to "&7Użycie <##4bbfe2>Frostbolt &7przyzna ci <##4bbfe2>Sopelek&7. Użycie%nl%&7<##4bbfe2>Lodowej Lancy &7wystrzeli wszystkie przechowane%nl%<##4bbfe2>Sopelki &7w cel, każdy zadając &f%{_damageicicles}% &7obrażeń <##add8e6>Lodu&7.%nl% %nl%&7Maksymalnie %{_iciclesCap}% <##4bbfe2>Sopelków &7może być przechowane,%nl%&7a każdy wygenerowany <##4bbfe2>Sopelek &7w nadmiarze%nl%&7zostanie natychmiastowo wystrzelony."
								if {language::%player%} = "English":
									if name of player's tool does not contain "Flurry":
										replace all "Śnieżyca" in player's tool's name with "Flurry"
									set lore of player's tool to {_loreEN}
								else:
									if name of player's tool does not contain "Śnieżyca":
										replace all "Flurry" in player's tool's name with "Śnieżyca"
									set lore of player's tool to {_lore}
								set {_loreflurry::*} to lore of player's tool
								set {_loreflurry} to join {_loreflurry::*} by nl
								if cooldown "Flurry%player%" is finished:
									if metadata value "BrainFreeze" of player is not true:
										if cooldown "FlurryAvoidOverlapCombo%player%" is finished:
											if metadata value "cast" of player is not set:
												set the cooldown of player's held item for player to "%{_cd}% seconds" parsed as timespan
												play sound "skill.glaceon.flurry_precast" with volume 2 and pitch 1 to player
												set metadata value "casting" of player to true
												set metadata value "cast" of player to {_casttime}
												while metadata value "casting" of player = true:
													if metadata value "cast" of player is not set:
														clear metadata value "casting" of player
														stop
													if {_casttime} > 0 seconds:
														set {_cst} to "%{_casttime}%"
														replace all "seconds" and "second" in {_cst} with "sekund"
														if {language::%player%} = "English":
															send action bar "Casting... %{_cst}%" to player
														else:
															replace all "seconds" and "second" in {_cst} with "sekund"
															send action bar "Rzucanie Zaklęcia..." to player
														wait 0.1 seconds
														remove 0.1 seconds from {_casttime}
													else:
														clear metadata value "casting" of player
														if {language::%player%} = "English":
															send action bar "" to player
														else:
															send action bar "" to player
														stop loop
											else:
												stop
											clear metadata value "casting" of player
											clear metadata value "cast" of player
											stopSoundGlaceon(player)
											if {_casttime} > 0 seconds:
												if {language::%player%} = "English":
													send action bar "&cInterrupted" to player
												else:
													send action bar "&cPrzerwano" to player
												stop
										else:
											stop
									else:
										stop if metadata value "cast" of player is set
										set {_brainFreeze} to true
										set {_damage} to {_damage}*1.5
										clear metadata value "BrainFreeze" of player
										set cooldown "FlurryAvoidOverlapCombo%player%" to 1 second
										if {frozenfingers::%player%} <= 2:
											if {frozenfingers::%player%} = 1:
												send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
											else if {frozenfingers::%player%} = 2:
												send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
											else:
												send title " " with subtitle " " to player for 1 second with fade in 0.0 second and fade out 0.0 second
									AbilityUse(player, "Flurry")
									play sound "skill.glaceon.flurry_cast" with volume 3 and pitch 1 at player
									#SPLINTERING COLD
									loop {_loreheart::*}:
										loop-value contains "Splintering Cold":
											add (5*{trait::Glaceon::Splintering Cold::%player%}) to {_extraicicles}
									chance of {_extraicicles}%:
										set {_iciclesBefore} to {icicles::%player%}
										add 2 to {icicles::%player%}
									#if metadata value "Icicles" of player is not set:
										#Icicles(player)
									if {icicles::%player%} > {_iciclesCap}:
										set {_extraamount} to {icicles::%player%} - {_iciclesCap}
										loop {_extraamount} times:
											set {icicles::%player%} to {icicles::%player%} - 1
											set {_randomIcicle} to a random integer between 1 and {_iciclesCap}
											set {_icicleVisual} to {icicle%{_randomIcicle}%::%player%}
											clear {icicle%{_randomIcicle}%::%player%}
											set {_damageicicles} to 0.4 + {mastery::%player%}/57
											if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
												if metadata value "Icy Veins" of player is true:
													set {_damageicicles} to {_damageicicles}*1.2
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
												set {_damageicicles} to {_damageicicles}*1.05
											if tag "Talents;Row 2" of nbt of {karta::%player%} = "Ice Nine":
												add 1 to {icicleCount::%player%}
												set {_rgb} to (rgb 106, 184, 230)
											if tag "Talents;Row 3" of nbt of {karta::%player%} = "Black Ice":
												chance of 20%:
													set {_damageicicles} to {_damageicicles}*1.6
													set {_rgb} to (rgb 28, 28, 28)
											if {wintersChill::%{_target}%} > 0:
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damageicicles} to {_damageicicles}*1.05
											set {_locIce} to location of {_icicleVisual}
											set {_yaw} to yaw of player
											set {_pitch} to pitch of player
											set yaw of {_locIce} to {_yaw}
											set pitch of {_locIce} to {_pitch}
											set {_targetLoc} to location 0.5 below {_target}
											set {_loop} to round((distance between {_locIce} and {_targetLoc}) / 1)
											loop {_loop} times:
												set {_targetLoc} to location 0.5 below {_target}
												set {_vec} to vector between {_locIce} and {_targetLoc}
												set vector length of {_vec} to loop-value-2 * 2
												teleport {_icicleVisual} to {_locIce} ~ {_vec}
												set {_icicleLoc} to location of {_icicleVisual}
												increase y-coordinate of {_icicleLoc} by 2 
												draw 1 of dust using dustOption({_rgb}, 1) at {_icicleLoc}
												wait 1 tick
											kill {_icicleVisual}
											#set {_randomici} to a random integer between 1 and 5
											#if {_randomici} = 1:
											#	set {_l} to location 0.4 blocks above player's head
											#	set {_l} to location 0.6 blocks left of {_l}
											#	set {_locice} to {_l}
											#if {_randomici} = 2:
											#	set {_l2} to location 0.5 blocks above player's head
											#	set {_l2} to location 0.3 blocks left of {_l2}
											#	set {_locice} to {_l2}
											#if {_randomici} = 3:
											#	set {_l3} to location 0.6 blocks above player's head
											#	set {_locice} to {_l3}
											#if {_randomici} = 4:
											#	set {_l4} to location 0.5 blocks above player's head
											#	set {_l4} to location 0.3 blocks right of {_l4}
											#	set {_locice} to {_l4}
											#if {_randomici} = 5:
											#	set {_l5} to location 0.4 blocks above player's head
											#	set {_l5} to location 0.6 blocks right of {_l5}
											#	set {_locice} to {_l5}
											#set {_l3} to location 0.6 blocks above player's head
											#if {_rgb} = (rgb 28, 28, 28):
											#	play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 0.7 at player
											#else:
											#	play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1.5 at player
											#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
											#set {_vec} to vector between player and {_target}'s head
											#loop round(distance between {_locice} and {_target}) / 0.5 times:
											#	set {_vec} to vector between {_locice} and {_target}'s head
											#	set vector length of {_vec} to loop-value-2 * 0.5
											#	draw 1 of dust using dustOption({_rgb}, 1) at {_locice} ~ {_vec}
											#set {_pid} to random 8 char string from charset `0-9`
											#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%{_pid}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
											#IcicleHurl(player, {_icicleVisual}, {_target}, {_rgb})
											IcicleForm(player, {_randomIcicle})
											#FLASH FREEZE
											loop {_loreheart::*}:
												loop-value-2 contains "Flash Freeze":
													add (0.2*{trait::Glaceon::Flash Freeze::%player%}) to {_damageicicles}
													add (1*{trait::Glaceon::Flash Freeze::%player%}) to {_chanceicicles}
											if {icicleCount::%player%} = 9:
												set {_damageicicles} to {_damageicicles}*1.9
												set {icicleCount::%player%} to 0
											chance of {_crit}%:
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damageicicles} to {_damageicicles}*2.2
												else:
													set {_damageicicles} to {_damageicicles}*2
												if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
													if metadata value "Icy Veins" of player is true:
														remove 0.75 seconds from cooldown "Icy Veins%player%"
											set {_target}'s last damage cause to sweep attack
											set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Icicles"
											set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Sopelki"
											set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
											set metadata value "LastDamageCauseLore" of {_target} to {_lore}
											set metadata value "Element" of player to "Ice"
											make player damage {_target} by ({_damageicicles}*2)
											DamageDisplay({_target}, "&l<##4bbfe2>%{_damageicicles}% DMG", player)
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
												set {lastDamagedTarget::%player%} to {_target}
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
												loop all entities in radius 5 around {_target}:
													if tag "custom;ECMob" of nbt of loop-entity is set:
														set loop-entity's last damage cause to sweep attack
														set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Icicles"
														set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Sopelki"
														set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
														set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
														set metadata value "Element" of player to "Ice"
														make player damage loop-entity by 0.2*({_damageicicles}*2)
														DamageDisplay(loop-entity, "&l<##4bbfe2>%{_damageicicles}*0.2% DMG", player)
											chance of {_chanceicicles}%:
												if {frozenfingers::%player%} < 2:
													add 1 to {frozenfingers::%player%}
												if {frozenfingers::%player%} = 1:
													if metadata value "BrainFreeze" of player is true:
														send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
													else:
														send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
												else if {frozenfingers::%player%} = 2:
													if metadata value "BrainFreeze" of player is true:
														send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
													else:
														send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
											clear {_damageicicles}
											if {_extraamount} > 1:
												wait 2 ticks
											#stopEffect "%{_pid}%"
									else:
										if {_iciclesBefore} is set:
											loop 2 times:
												IcicleForm(player, ({_iciclesBefore} + loop-number))
									send action bar " Icicles: %{icicles::%player%}%" to player
									wait 1 tick
									loop 3 times:
										if {_target} is alive:
											set {_l} to location 0.3 blocks below player's head
											set {_l} to location 0.4 blocks right of {_l}
											set {_v} to vector between {_l} and {_target}'s head
											loop round(distance between {_l} and {_target}) / 1 times:
												set {_v} to vector between {_l} and {_target}'s head
												set vector length of {_v} to loop-value-2 * 1
												draw 1 of dust using dustOption((rgb 63, 188, 242), 1) at {_l} ~ {_v}
												make 1 of block particle using ice at {_l} ~ {_v}
											chance of {_crit}%:
												if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
													set {_damage} to {_damage}*2.2
												else:
													set {_damage} to {_damage}*2
												if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
													if metadata value "Icy Veins" of player is true:
														remove 0.75 seconds from cooldown "Icy Veins%player%"
											set metadata value "Element" of player to "Ice"
											set {_target}'s last damage cause to sweep attack
											set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Flurry"
											set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Śnieżyca"
											set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
											set metadata value "LastDamageCauseLore" of {_target} to {_lore}
											make player damage {_target} by {_damage}*2
											if {_brainFreeze} is true:
												if loop-number <= 2:
													if {wintersChill::%{_target}%} is not set:
														set {wintersChill::%{_target}%} to 1
													else if {wintersChill::%{_target}%} < 2:
														add 1 to {wintersChill::%{_target}%}
													if metadata value "WintersChillEffect%player%" of {_target} is not set:
														set metadata value "WintersChillEffect%player%" of {_target} to true
													set metadata value "WintersChill%player%Duration" of {_target} to 6 seconds
													WintersChillDebuff(player, {_target})
											DamageDisplay({_target}, "&l<##4bbfe2>%{_damage}% DMG", player)
											if canBeCCed({_target}) = true:
												apply slowness of tier 4.67 without particles to {_target} for {_slowtime}
											play sound "skill.glaceon.flurry_impact" with volume 3 and pitch 1 at {_target}
											if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
												set {lastDamagedTarget::%player%} to {_target}
											wait 6 ticks
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if player's tool is lapis lazuli:
		if name of player's tool = "<##4bbfe2>Icy Veins" or "<##4bbfe2>Lodowe Żyły":
			cancel event
			if {kartaname::%player%} = "Glaceon":
				if CanUseAbility(player) != false:
					set {_cd} to 180
					set {_seconds} to 20
					set {_haste} to 120
					#set {_haste} to ({_haste}/4)
					set {cdicyveins::%player%} to "%{_cd}% seconds" parsed as timespan
					set {_id} to line 19 of lore of {karta::%player%}
					if tag "Talents;Row 2" of nbt of {karta::%player%} = "Thermal Void":
						add 10 to {_seconds}
					if {language::%player%} = "English":
						if name of player's tool does not contain "Icy Veins":
							replace all "Lodowe Żyły" in player's tool's name with "Icy Veins"
						set lore of player's tool to "&8Ability" and "&fInstant cast" and "&7Cooldown: &f%{_cd}/60% minutes" and "&7Use: &fRMB" and "<##4bbfe2>Accelerates your spellcasting for &f%{_seconds}% seconds<##4bbfe2>,%nl%<##4bbfe2>granting <##19943e> %{_haste}% Haste<##4bbfe2>."
					else:
						if name of player's tool does not contain "Lodowe Żyły":
							replace all "Icy Veins" in player's tool's name with "Lodowe Żyły"
						set lore of player's tool to "&8Umiejętność" and "&fInstant cast" and "&7Cooldown: &f%{_cd}/60% minuty" and "&7Użycie: &fPPM" and "<##4bbfe2>Przyspiesza rzucanie zaklęć na &f%{_seconds}% sekund<##4bbfe2>,%nl%<##4bbfe2>przyznając <##19943e> %{_haste}% Pośpiechu<##4bbfe2>."
					if player's chestplate is golden nugget:
						if name of player's chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
							if line 30 of lore of player's chestplate contains player's name:
								set {_loreheart::*} to lore of player's chestplate
					if cooldown "Icy Veins%player%" is finished:
						set cooldown "Icy Veins%player%" to "%{_cd}% seconds" parsed as timespan
						AbilityUse(player, "Icy Veins")
						if metadata value "Icy Veins" of player is true:
							set metadata value "IcyVeinsReapply" of player to true
						else:
							add 120 to {haste::%player%}
						set {_czas} to 20 seconds
						if tag "Talents;Row 2" of nbt of {karta::%player%} = "Thermal Void":
							add 10 seconds to {_czas}
						set metadata value "Icy Veins" of player to true
						#THERMAL VOID
						loop {_loreheart::*}:
							loop-value contains "Thermal Void":
								add ("%(4*{trait::Glaceon::Thermal Void::%player%})% seconds" parsed as timespan) to {_czas}
						#FRIGID GRASP
						loop {_loreheart::*}:
							loop-value contains "Frigid Grasp":
								add (35*{trait::Glaceon::Frigid Grasp::%player%}) to {frigiddmg::%player%}
								add (35*{trait::Glaceon::Frigid Grasp::%player%}) to {damage::%player%}
						if {frigiddmg::%player%} is set:
							FrigidGrasp(player)
							if {frozenfingers::%player%} < 2:
								add 1 to {frozenfingers::%player%}
							if {frozenfingers::%player%} = 1:
								if metadata value "BrainFreeze" of player is true:
									send title " " with subtitle "           " to player for 1 minute with fade in 0.25 second and fade out 0 second
								else:
									send title " " with subtitle "                     " to player for 1 minute with fade in 0.25 second and fade out 0 second
							if {frozenfingers::%player%} = 2:
								if metadata value "BrainFreeze" of player is true:
									send title " " with subtitle "    " to player for 1 minute with fade in 0.25 second and fade out 0 second
								else:
									send title " " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
						play sound "skill.glaceon.icy_veins_cast" with volume 3 and pitch 1 at player
						loop all blocks in radius 2.5 around the player:
							draw 1 of dust using dustOption((rgb 106, 184, 230), 1) at loop-block
							make 1 of block particle using blue ice at loop-block
							make 1 of block particle using blue glass at loop-block
						play sound "skill.glaceon.icy_veins_active" with volume 3 and pitch 1 at player
						if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
							set {_target} to {lastDamagedTarget::%player%}
							if {_target} is not set:
								set {_target} to Target(player, 100, false)
							IcicleStorm(player, {_target})
						if tag "Talents;Row 5" of nbt of {karta::%player%} = "Freezing Winds":
							FreezingWinds(player)
						while metadata value "Icy Veins" of player is true:
							if metadata value "cast" of player is not set:
								send action bar ": %{_czas}%" to player
							if {_czas} >= 1 second:
								wait 1 second
							else:
								wait {_czas}
							if {extraSecondsIcyVeins::%player%} > 0 seconds:
								add {extraSecondsIcyVeins::%player%} to {_czas}
								clear {extraSecondsIcyVeins::%player%}
							remove 1 second from {_czas}
							if 0 seconds >= {_czas}:
								stop loop
							else if metadata value "IcyVeinsReapply" of player is set:
								clear metadata value "IcyVeinsReapply" of player
								stop
						set metadata value "Icy Veins" of player to false
						remove 120 from {haste::%player%}
					else:
						cancel event
						if {tekstcd::%player%} = true:
							set {_cdd} to cooldown "Icy Veins%player%"
							set the cooldown of player's tool for player to {_cdd}
							if {language::%player%} = "English":
								send "<##4bbfe2>You must wait &f%{_cdd}%<##4bbfe2> to use this ability." to player
							else:
								send "<##4bbfe2>Musisz odczekać &f%{_cdd}%<##4bbfe2>, aby użyć tej umiejętności." to player
						stop
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if player's tool is prismarine crystals:
		if name of player's tool = "<##4bbfe2>Glacial Spike" or "<##4bbfe2>Lodowcowy Kolec":
			cancel event
			if {kartaname::%player%} = "Glaceon":
				if CanUseAbility(player) != false:
					if tag "Talents;Row 5" of nbt of {karta::%player%} = "Glacial Spike":
						if tag "Constellation;Eternal Winter" of nbt of {karta::%player%} is set:
							set {_iciclesCap} to 7
						else:
							set {_iciclesCap} to 5
						if {icicles::%player%} = {_iciclesCap}:
							set {_target} to Target(player, 100, false)
							if {_target} is set:
								set {_id} to line 19 of lore of {karta::%player%}
								if player's chestplate is golden nugget:
									if name of player's chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
										if line 30 of lore of player's chestplate contains player's name:
											set {_loreheart::*} to lore of player's chestplate
								if metadata value "cast" of player is not set:
									set {_crit} to 25 + ({criticalhit::%player%}/10)
									set {_pospiech} to 1 + ({haste::%player%}/4)/100
									set {_damage} to 5 + {damage::%player%}/32 + {versatility::%player%}/96 + {intellect::%player%}/16
									set {_casttime} to "%round((2.75/{_pospiech}), 1)% seconds" parsed as timespan

									if tag "Talents;Row 5" of nbt of {karta::%player%} = "Chilled to the Core":
										if metadata value "Icy Veins" of player is true:
											set {_damage} to {_damage}*1.2
											set {_damageicicles} to {_damageicicles}*1.2
									if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
										set {_damage} to {_damage}*1.05
										set {_damageicicles} to {_damageicicles}*1.05

									set line 5 of lore of player's tool to "<##4bbfe2>Strzela lodową lancą w cel, zadajac &f%{_damage}% <##4bbfe2>obrażeń."
									set {_loreicicles} to "&7Użycie <##4bbfe2>Frostbolt &7przyzna ci <##4bbfe2>Sopelek&7. Użycie%nl%&7<##4bbfe2>Lodowej Lancy &7wystrzeli wszystkie przechowane%nl%<##4bbfe2>Sopelki &7w cel, każdy zadając &f%{_damageicicles}% &7obrażeń <##add8e6>Lodu&7.%nl% %nl%&7Maksymalnie %{_iciclesCap}% <##4bbfe2>Sopelków &7może być przechowane,%nl%&7a każdy wygenerowany <##4bbfe2>Sopelek &7w nadmiarze%nl%&7zostanie natychmiastowo wystrzelony."
									set {_lore} to "&8Umiejętność Talentu%nl%&f%{_casttime}% cast%nl%&7Brak cooldownu%nl%&7Użycie: &fPPM%nl%<##4bbfe2>Tworzy ogromny kolec lodu i łączy z nim%nl%<##4bbfe2>wszystkie twoje posiadane Sopelki. Lodowcowy Kolec%nl%<##4bbfe2>nadziewa twój cel, zadając &f%{_damage}% <##4bbfe2>obrażeń <##add8e6>Lodu<##4bbfe2>,plus%nl%<##4bbfe2>wszystkie obrażenia przechowane w Sopelkach.%nl% %nl%<##4bbfe2>Wymaga %{_iciclesCap}% Sopelków do użycia.%nl% %nl%<##4bbfe2>Pasywnie: Lodowa Lanca nie wystrzela już Sopelków."
									set {_loreEN} to "&8Talent Ability%nl%&f%{_casttime}% cast%nl%&7No cooldown%nl%&7Use: &fRMB%nl%<##4bbfe2>Conjures a massive spike of ice, and merges%nl%<##4bbfe2>your current Icicles into it. It impales your%nl%<##4bbfe2>target, dealing &f%{_damage}% <##add8e6>Ice <##4bbfe2>damage plus all of the%nl%<##4bbfe2>damage stored in your Icicles.%nl% %nl%<##4bbfe2>Requires %{_iciclesCap}% Icicles to cast.%nl% %nl%<##4bbfe2>Passive: Ice Lance no longer launches Icicles."
									set {_loreiciclesEN} to "&7Casting <##4bbfe2>Frostbolt &7grants you an <##4bbfe2>Icicle&7.%nl%&7Casting <##4bbfe2>Ice Lance &7hurls all stored <##4bbfe2>Icicles%nl%&7at your target, each dealing &f%{_damageicicles}% <##add8e6>Ice &7damage.%nl% %nl%&7Up to %{_iciclesCap}% <##4bbfe2>Icicles &7can be stored.%nl%&7Any excess <##4bbfe2>Icicles &7gained will be%nl%&7automatically launched."
									if {language::%player%} = "English":
										if name of player's tool does not contain "Glacial Spike":
											replace all "Lodowcowy Kolec" in player's tool's name with "Glacial Spike"
										set lore of player's tool to {_loreEN}
									else:
										if name of player's tool does not contain "Lodowcowy Kolec":
											replace all "Glacial Spike" in player's tool's name with "Lodowcowy Kolec"
										set lore of player's tool to {_lore}
									if cooldown "Glacial Spike%player%" is finished:
										if metadata value "cast" of player is not set:
											play sound "skill.glaceon.glacial_spike_precast" with volume 3 and pitch 1 to player
											set metadata value "casting" of player to true
											set metadata value "cast" of player to {_casttime}
											GlacialSpikeForm(player, {_crit}, {_target})
											set {_totaldmgicicles} to metadata value "IciclesTotalDmg" of player
											clear metadata value "IciclesTotalDmg" of player
											while metadata value "casting" of player = true:
												if metadata value "cast" of player is not set:
													clear metadata value "casting" of player
													stop
												if {_casttime} > 0 seconds:
													set {_cst} to "%{_casttime}%"
													replace all "seconds" and "second" in {_cst} with "sekund"
													if {language::%player%} = "English":
														send action bar "Casting... %{_cst}%" to player
													else:
														replace all "seconds" and "second" in {_cst} with "sekund"
														send action bar "Rzucanie Zaklęcia..." to player
													wait 0.1 seconds
													remove 0.1 seconds from {_casttime}
												else:
													clear metadata value "casting" of player
													if {language::%player%} = "English":
														send action bar "" to player
													else:
														send action bar "" to player
													stop loop
										else:
											stop
										clear metadata value "casting" of player
										clear metadata value "cast" of player
										stop sound "skill.glaceon.glacial_spike_precast" for player
										if {_casttime} > 0 seconds:
											if {language::%player%} = "English":
												send action bar "&cInterrupted" to player
											else:
												send action bar "&cPrzerwano" to player
											stop						
										AbilityUse(player, "Glacial Spike")
										if {wintersChill::%{_target}%} > 0:
											set {wintersChill::%{_target}%} to {wintersChill::%{_target}%} - 1
											if {wintersChill::%{_target}%} = 0:
												clear {wintersChill::%{_target}%}
											set {_frozen} to true
										if {_frozen} is true:
											add 50 to {_crit}
											if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
												set {_damage} to {_damage}*1.05
										play sound "skill.glaceon.glacial_spike_cast" with volume 3 and pitch 1 at player
										set {_glacialspike} to metadata value "GlacialSpike" of player
										clear metadata value "GlacialSpike" of player
										set {_l} to location of {_glacialspike}
										set {_yaw} to yaw of player
										set {_pitch} to pitch of player
										set yaw of {_l} to {_yaw}
										set pitch of {_l} to {_pitch}
										set {_targetLoc} to location 0.5 below {_target}
										loop round(distance between {_l} and {_targetLoc}) / 1 times:
											set {_targetLoc} to location 0.5 below {_target}
											set {_vec} to vector between {_l} and {_targetLoc}
											set vector length of {_vec} to loop-value * 2
											teleport {_glacialspike} to {_l} ~ {_vec}
											set {_glacialspikeLoc} to location of {_glacialspike}
											increase y-coordinate of {_glacialspikeLoc} by 2 
											draw 1 of dust using dustOption((rgb 106, 184, 230), 1) at {_glacialspikeLoc}
											wait 1 tick
										kill {_glacialspike}
										#set {_l} to location 0.6 blocks above player's head
										#set {_vec} to vector between player and {_target}'s head
										#loop round(distance between {_l} and {_target}) / 0.5 times:
										#	set {_vec} to vector between {_l} and {_target}'s head
										#	set vector length of {_vec} to loop-value * 0.5
										#	draw 1 of dust using dustOption((rgb 156, 255, 252), 2) at {_l} ~ {_vec}
										if distance between player and {_target} < 5:
											wait 0.3 seconds
										else:
											wait 0.5 seconds
										chance of {_crit}%:
											if tag "Constellation;Subzero" of nbt of {karta::%player%} is set:
												set {_damage} to {_damage}*2.2
											else:
												set {_damage} to {_damage}*2
											if tag "Constellation;Icy Propulsion" of nbt of {karta::%player%} is set:
												if metadata value "Icy Veins" of player is true:
													remove 0.75 seconds from cooldown "Icy Veins%player%"
										add {_totaldmgicicles} to {_damage}
										set {_target}'s last damage cause to sweep attack
										set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Glacial Spike"
										set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Lodowcowy Kolec"
										set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
										set metadata value "LastDamageCauseLore" of {_target} to {_lore}
										set metadata value "Element" of player to "Ice"
										make player damage {_target} by {_damage}*2
										DamageDisplay({_target}, "&l<##4bbfe2>%{_damage}% DMG", player)
										play sound "skill.glaceon.glacial_spike_impact" with volume 3 and pitch 1 at player
										play sound "skill.glaceon.glacial_spike_hit" with volume 3 and pitch 1 at player
										if tag "Talents;Row 4" of nbt of {karta::%player%} = "Icicle Storm":
											set {lastDamagedTarget::%player%} to {_target}
										if tag "Talents;Row 4" of nbt of {karta::%player%} = "Splitting Ice":
											loop all entities in radius 5 around {_target}:
												if tag "custom;ECMob" of nbt of loop-entity is set:
													set loop-entity's last damage cause to sweep attack
													set metadata value "LastDamageCauseEN" of loop-entity to "<##4bbfe2>Glacial Spike"
													set metadata value "LastDamageCause" of loop-entity to "<##4bbfe2>Lodowcowy Kolec"
													set metadata value "LastDamageCauseLoreEN" of loop-entity to {_loreEN}
													set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
													set metadata value "Element" of player to "Ice"
													make player damage loop-entity by 0.2*({_damage}*2)
													DamageDisplay(loop-entity, "&l<##4bbfe2>%{_damage}% DMG", player)
									else: 
										cancel event
										if {tekstcd::%player%} = true:
											set {_cdd} to cooldown "Ice Lance%player%"
											set the cooldown of player's tool for player to {_cdd}
											if {language::%player%} = "English":
												send "<##4bbfe2>You must wait &f%{_cdd}%<##4bbfe2> to use this ability." to player
											else:
												send "<##4bbfe2>Musisz odczekać &f%{_cdd}%<##4bbfe2>, aby użyć tej umiejętności." to player
										stop
						else:
							if {language::%player%} = "English":
								send action bar "&fYou must have %{_iciclesCap}% Icicles." to player
							else:
								send "&fMusisz mieć %{_iciclesCap}% Sopelków." to player
							if metadata value "cast" of player is not set:
								play sound "block.glass.break" with volume 3 and pitch 1.65 to player
					else:
						if {language::%player%} = "English":
							send "&8[&6Earthcraft&8] &6You don't have the required talent to use this ability." to player
						else:
							send "&8[&6Earthcraft&8] &6Nie masz wymaganego talentu, by móc użyć tej umiejętności." to player
						play sound "block.glass.break" with volume 3 and pitch 0 to player
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player

function WintersChillDebuff(p: player, target: entity):
	set metadata value "WintersChill%{_p}%Duration" of {_target} to 6 seconds
	if metadata value "WintersChillEffect%{_p}%" of {_target} is true:
		set metadata value "WintersChillEffect%{_p}%" of {_target} to false
		while {wintersChill::%{_target}%} > 0:
			set {_duration} to metadata value "WintersChill%{_p}%Duration" of {_target}
			remove 1 second from {_duration}
			set metadata value "WintersChill%{_p}%Duration" of {_target} to {_duration}
			wait 1 second
			if 0 seconds >= {_duration}:
				clear {wintersChill::%{_target}%}
				clear metadata value "WintersChillEffect%{_p}%" of {_target}
				stop loop
function Frostbolt(p: player, target: entity, crit: number, damage: number, slowtime: timespan):
	if {_p} is alive:
		if {_p}'s chestplate is golden nugget:
			if name of {_p}'s chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
				if line 30 of lore of {_p}'s chestplate contains {_p}'s name:
					set {_loreheart::*} to lore of {_p}'s chestplate
		set {_l} to location 0.3 blocks below {_p}'s head
		set {_l} to location 0.4 blocks right of {_l}
		set {_v} to vector between {_l} and {_target}'s head
		loop round(distance between {_l} and {_target}) / 0.9 times:
			set {_v} to vector between {_l} and {_target}'s head
			set vector length of {_v} to loop-value * 0.9
			if vector length of {_v} < 6:
				#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
				draw 1 of dust using dustOption((rgb 52, 119, 235), 1) at {_l} ~ {_v}
				#drawDot count 1, particle "redstone", RGB 52, 119, 235, center {_l} ~ {_v}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 5 ticks
			if vector length of {_v} > 4:
				#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
				draw 1 of dust using dustOption((rgb 119, 164, 242), 1) at {_l} ~ {_v}
				#drawDot count 1, particle "redstone", RGB 119, 164, 242, center {_l} ~ {_v}, rainbowMode false, visibleRange 32, pulseDelay 0, keepFor 5 ticks
			make 1 of block particle using light blue glass at {_l} ~ {_v}
			make 1 of block particle using ice at {_l} ~ {_v}
			wait 1 tick
		#WINTERTIDE
		loop {_loreheart::*}:
			loop-value contains "Wintertide":
				add (0.5*{trait::Glaceon::Wintertide::%{_p}%}) to {_damage}
				add (1*{trait::Glaceon::Wintertide::%{_p}%}) to {_crit}
		#TUNNEL OF ICE
		loop {_loreheart::*}:
			loop-value contains "Tunnel of Ice":
				add (0.5*{trait::Glaceon::Tunnel of Ice::%{_p}%}) to {_Ranktunnel}
		if {tunnelofice::%{_p}%} is not uuid of {_target}:
			set {tunnelofice::%{_p}%} to uuid of {_target}
			set {tunnelofice::count::%{_p}%} to 0
		if {tunnelofice::count::%{_p}%} < 3:
			add 1 to {tunnelofice::count::%{_p}%}
		add {tunnelofice::count::%{_p}%}*{_Ranktunnel} to {_damage}
		if {wintersChill::%{_target}%} > 0:
			set {wintersChill::%{_target}%} to {wintersChill::%{_target}%} - 1
			if {wintersChill::%{_target}%} = 0:
				clear {wintersChill::%{_target}%}
			set {_frozen} to true
		if {_frozen} is true:
			add 50 to {_crit}
			if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
				set {_damage} to {_damage}*1.05
		chance of {_crit}%:
			if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
				set {_damage} to {_damage}*2.2
			else:
				set {_damage} to {_damage}*2
			if tag "Constellation;Icy Propulsion" of nbt of {karta::%{_p}%} is set:
				if metadata value "Icy Veins" of {_p} is true:
					remove 0.75 seconds from cooldown "Icy Veins%{_p}%"
		set {_target}'s last damage cause to sweep attack
		set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Frostbolt"
		set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Mroźny Pocisk"
		set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
		set metadata value "LastDamageCauseLore" of {_target} to {_lore}
		set metadata value "Element" of {_p} to "Ice"
		make {_p} damage {_target} by {_damage}*2
		DamageDisplay({_target}, "&l<##4bbfe2>%{_damage}% DMG", {_p})
		if canBeCCed({_target}) = true:
			apply slowness of tier 2.67 without particles to {_target} for {_slowtime}
		frostboltHitSound({_target})
		if tag "Talents;Row 4" of nbt of {karta::%{_p}%} = "Icicle Storm":
			set {lastDamagedTarget::%{_p}%} to {_target}
function GlacialSpikeForm(p: player, crit: number, target: entity):
	if {_p} is alive:
		if {_p}'s chestplate is golden nugget:
			if name of {_p}'s chestplate contains "Serce Earthcrafta" or "Heart of Earthcraft":
				if line 30 of lore of {_p}'s chestplate contains {_p}'s name:
					set {_loreheart::*} to lore of {_p}'s chestplate
		if {wintersChill::%{_target}%} > 0:
			set {_crit} to {_crit} + 50
		loop {icicles::%{_p}%} times:
			set {_damageicicles} to 0.4 + {mastery::%{_p}%}/57
			if tag "Talents;Row 5" of nbt of {karta::%{_p}%} = "Chilled to the Core":
				if metadata value "Icy Veins" of {_p} is true:
					set {_damageicicles} to {_damageicicles}*1.2
			if tag "Talents;Row 4" of nbt of {karta::%{_p}%} = "Splitting Ice":
				set {_damageicicles} to {_damageicicles}*1.05
			if tag "Talents;Row 2" of nbt of {karta::%{_p}%} = "Ice Nine":
				add 1 to {icicleCount::%{_p}%}
			set {_rgb} to (rgb 106, 184, 230)
			if tag "Talents;Row 3" of nbt of {karta::%{_p}%} = "Black Ice":
				chance of 20%:
					set {_damageicicles} to {_damageicicles}*1.6
			if {wintersChill::%{_target}%} > 0:
				if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
					set {_damageicicles} to {_damageicicles}*1.05
			#FLASH FREEZE
			loop {_loreheart::*}:
				loop-value-2 contains "Flash Freeze":
					add (0.2*{trait::Glaceon::Flash Freeze::%{_p}%}) to {_damageicicles}
					add (1*{trait::Glaceon::Flash Freeze::%{_p}%}) to {_chanceicicles}
			if {icicleCount::%{_p}%} = 9:
				set {_damageicicles} to {_damageicicles}*1.9
				set {icicleCount::%{_p}%} to 0
			chance of {_crit}%:
				if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
					set {_damageicicles} to {_damageicicles}*2.2
				else:
					set {_damageicicles} to {_damageicicles}*2
				if tag "Constellation;Icy Propulsion" of nbt of {karta::%{_p}%} is set:
					if metadata value "Icy Veins" of {_p} is true:
						remove 0.75 seconds from cooldown "Icy Veins%{_p}%"
			if {_chanceicicles} is set:
				chance of {_chanceicicles}%:
					if {frozenfingers::%{_p}%} < 2:
						add 1 to {frozenfingers::%{_p}%}
					if {frozenfingers::%{_p}%} = 1:
						if metadata value "BrainFreeze" of {_p} is true:
							send title " " with subtitle "           " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
						else:
							send title " " with subtitle "                     " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
					if {frozenfingers::%{_p}%} = 2:
						if metadata value "BrainFreeze" of {_p} is true:
							send title " " with subtitle "    " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
						else:
							send title " " with subtitle "                    " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
			add {_damageicicles} to {_totaldmgicicles}
			clear {_damageicicles}
			set {_speed} to 0.15 / (1 + ({haste::%{_p}%}/4)/100)
			set {_wait} to "%0.1 / (1 + ({haste::%{_p}%}/4)/100)% seconds" parsed as timespan
			if tag "Talents;Row 1" of nbt of {karta::%{_p}%} = "Ice Cycle":
				chance of 8%:
					set {_iceCycle} to true
			if {_iceCycle} is not set:
				set {_icicleVisual} to {icicle%{icicles::%{_p}%}%::%{_p}%}
				clear {icicle%{icicles::%{_p}%}%::%{_p}%}
				set {icicles::%{_p}%} to {icicles::%{_p}%} - 1
				GlacialSpikeFormAnimation({_p}, {_icicleVisual})
			clear {_iceCycle}
		#clear metadata value "Icicles" of {_p}
		set metadata value "GlacialSpike" of {_p} to GlacialSpike({_p})
		GlacialSpikeMove({_p}, metadata value "GlacialSpike" of {_p})
		#if {icicles::%{_p}%} > 0:
			#if metadata value "Icicles" of {_p} is not set:
				#Icicles({_p})
		set metadata value "IciclesTotalDmg" of {_p} to {_totaldmgicicles}

function GlacialSpikeFormAnimation(p: player, icicleVisual: entity):
	set {_loc} to {_p}'s location
	increase {_loc}'s y-coordinate by 0.2
	set {_speed} to 0.15 / (1 + ({haste::%{_p}%}/4)/100)
	set {_wait} to "%0.1 / (1 + ({haste::%{_p}%}/4)/100)% seconds" parsed as timespan
	set {_l} to location of {_icicleVisual}
	set yaw of {_l} to 90
	set yaw of {_l} to {_yaw}
	set pitch of {_l} to {_pitch}
	loop round(distance between {_l} and {_loc}) / {_speed} times:
		set {_loc} to {_p}'s location
		increase {_loc}'s y-coordinate by 0.2
		set yaw of {_loc} to 90
		set {_vec} to vector between {_l} and {_loc}
		set vector length of {_vec} to loop-value * {_speed}
		teleport {_icicleVisual} to {_l} ~ {_vec}
		wait {_wait}
	kill {_icicleVisual}
function FrigidGrasp(p: player):
	wait 15 seconds
	remove {frigiddmg::%{_p}%} from {obrazenia::%{_p}%}
	clear {frigiddmg::%{_p}%}

function FreezingWinds(p: player):
	wait 1 tick
	while metadata value "Icy Veins" of {_p} is true:
		wait 3 seconds
		if {frozenfingers::%{_p}%} < 2:
			add 1 to {frozenfingers::%{_p}%}
		if {frozenfingers::%{_p}%} = 1:
			if metadata value "BrainFreeze" of {_p} is true:
				send title " " with subtitle "           " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
			else:
				send title " " with subtitle "                     " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
		else if {frozenfingers::%{_p}%} = 2:
			if metadata value "BrainFreeze" of {_p} is true:
				send title " " with subtitle "    " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second

function IcicleStorm(p: player, target: entity):
	set {_damageicicles} to 0.4*(0.4 + {mastery::%{_p}%}/57)
	if tag "Constellation;Eternal Winter" of nbt of {karta::%{_p}%} is set:
		set {_iciclesCap} to 7
	else:
		set {_iciclesCap} to 5
	set {_loreicicles} to "&7Użycie <##4bbfe2>Frostbolt &7przyzna ci <##4bbfe2>Sopelek&7. Użycie%nl%&7<##4bbfe2>Lodowej Lancy &7wystrzeli wszystkie przechowane%nl%<##4bbfe2>Sopelki &7w cel, każdy zadając &f%{_damageicicles}% &7obrażeń <##add8e6>Lodu&7.%nl% %nl%&7Maksymalnie %{_iciclesCap}% <##4bbfe2>Sopelków &7może być przechowane,%nl%&7a każdy wygenerowany <##4bbfe2>Sopelek &7w nadmiarze%nl%&7zostanie natychmiastowo wystrzelony."
	set {_loreiciclesEN} to "&7Casting <##4bbfe2>Frostbolt &7grants you an <##4bbfe2>Icicle&7.%nl%&7Casting <##4bbfe2>Ice Lance &7hurls all stored <##4bbfe2>Icicles%nl%&7at your target, each dealing &f%{_damageicicles}% <##add8e6>Ice &7damage.%nl% %nl%&7Up to %{_iciclesCap}% <##4bbfe2>Icicles &7can be stored.%nl%&7Any excess <##4bbfe2>Icicles &7gained will be%nl%&7automatically launched."
	loop 5 times:
		set {_damageicicles} to 0.4*(0.4 + {mastery::%{_p}%}/57)
		set {_randomIcicle} to a random integer between 1 and 5
		set {_icicle} to IcicleFormIcicleStorm({_p}, {_randomIcicle})
		if tag "Talents;Row 5" of nbt of {karta::%{_p}%} = "Chilled to the Core":
			if metadata value "Icy Veins" of {_p} is true:
				set {_damageicicles} to {_damageicicles}*1.2
		if tag "Talents;Row 4" of nbt of {karta::%{_p}%} = "Splitting Ice":
			set {_damageicicles} to {_damageicicles}*1.05
		if tag "Talents;Row 2" of nbt of {karta::%{_p}%} = "Ice Nine":
			add 1 to {icicleCount::%{_p}%}
		set {_rgb} to (rgb 106, 184, 230)
		if tag "Talents;Row 3" of nbt of {karta::%{_p}%} = "Black Ice":
			chance of 20%:
				set {_damageicicles} to {_damageicicles}*1.6
				set {_rgb} to (rgb 28, 28, 28)
		if {wintersChill::%{_target}%} > 0:
			if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
				set {_damageicicles} to {_damageicicles}*1.05
		#set {_randomici} to a random integer between 1 and 5
		#if {_randomici} = 1:
		#	set {_l} to location 0.4 blocks above {_p}'s head
		#	set {_l} to location 0.6 blocks left of {_l}
		#	set {_locice} to {_l}
		#if {_randomici} = 2:
		#	set {_l2} to location 0.5 blocks above {_p}'s head
		#	set {_l2} to location 0.3 blocks left of {_l2}
		#	set {_locice} to {_l2}
		#if {_randomici} = 3:
		#	set {_l3} to location 0.6 blocks above {_p}'s head
		#	set {_locice} to {_l3}
		#if {_randomici} = 4:
		#	set {_l4} to location 0.5 blocks above {_p}'s head
		#	set {_l4} to location 0.3 blocks right of {_l4}
		#	set {_locice} to {_l4}
		#if {_randomici} = 5:
		#	set {_l5} to location 0.4 blocks above {_p}'s head
		#	set {_l5} to location 0.6 blocks right of {_l5}
		#	set {_locice} to {_l5}
		#set {_l3} to location 0.6 blocks above {_p}'s head
		if {_rgb} = (rgb 28, 28, 28):
			play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 0.7 at {_p}
		else:
			play sound "skill.glaceon.icelance_hurl" with volume 3 and pitch 1.5 at {_p}
		IcicleHurl({_p}, {_icicle}, {_target}, {_rgb})
		#ZAMIENIĆ PARTICLE JAK BĘDZIE SKDRAGON
		#set {_vec} to vector between {_p} and {_target}'s head
		#loop round(distance between {_locice} and {_target}) / 0.5 times:
		#	set {_vec} to vector between {_locice} and {_target}'s head
		#	set vector length of {_vec} to loop-value-2 * 0.5
		#	draw 1 of dust using dustOption({_rgb}, 1) at {_locice} ~ {_vec}
		#set {_pid} to random 8 char string from charset `0-9`
		#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%{_pid}%", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
		#FLASH FREEZE
		loop {_loreheart::*}:
			loop-value-2 contains "Flash Freeze":
				add (0.2*{trait::Glaceon::Flash Freeze::%{_p}%}) to {_damageicicles}
				add (1*{trait::Glaceon::Flash Freeze::%{_p}%}) to {_chanceicicles}
		if {icicleCount::%{_p}%} = 9:
			set {_damageicicles} to {_damageicicles}*1.9
			set {icicleCount::%{_p}%} to 0
		chance of {_crit}%:
			if tag "Constellation;Subzero" of nbt of {karta::%{_p}%} is set:
				set {_damageicicles} to {_damageicicles}*2.2
			else:
				set {_damageicicles} to {_damageicicles}*2
			if tag "Constellation;Icy Propulsion" of nbt of {karta::%{_p}%} is set:
				if metadata value "Icy Veins" of {_p} is true:
					remove 0.75 seconds from cooldown "Icy Veins%{_p}%"
		set {_target}'s last damage cause to sweep attack
		set metadata value "LastDamageCauseEN" of {_target} to "<##4bbfe2>Icicles"
		set metadata value "LastDamageCause" of {_target} to "<##4bbfe2>Sopelki"
		set metadata value "LastDamageCauseLoreEN" of {_target} to {_loreEN}
		set metadata value "LastDamageCauseLore" of {_target} to {_lore}
		set metadata value "Element" of {_p} to "Ice"
		make {_p} damage {_target} by ({_damageicicles}*2)
		DamageDisplay({_target}, "&l<##4bbfe2>%{_damageicicles}% DMG", {_p})
		chance of {_chanceicicles}%:
			if {frozenfingers::%{_p}%} < 2:
				add 1 to {frozenfingers::%{_p}%}
			if {frozenfingers::%{_p}%} = 1:
				if metadata value "BrainFreeze" of {_p} is true:
					send title " " with subtitle "           " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
				else:
					send title " " with subtitle "                     " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
			if {frozenfingers::%{_p}%} = 2:
				if metadata value "BrainFreeze" of {_p} is true:
					send title " " with subtitle "    " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
				else:
					send title " " with subtitle "                    " to {_p} for 1 minute with fade in 0.25 second and fade out 0 second
		clear {_damageicicles}
		wait 15 ticks

function ChainReaction(p: player):
	if {chainreac::%{_p}%} is true:
		set {chainreac::%{_p}%} to false
		while {czaschain::%{_p}%} > 0 seconds:
			remove 1 second from {czaschain::%{_p}%}
			wait 1 second
			if 0 seconds >= {czaschain::%{_p}%}:
				set {chainreaction::%{_p}%} to 0
				clear {czaschain::%{_p}%}
				clear {chainreac::%{_p}%}
				stop loop
on disconnect:
	clear metadata value "cast" of player
	wait 60 seconds
	if player is offline:
		if metadata value "Icy Veins" of player is true:
			clear metadata value "Icy Veins" of player
		if {frigiddmg::%player%} is set:
			clear {frigiddmg::%player%}
		clear {czaschain::%player%}
		clear {chainreaction::%player%}
		clear {chainreac::%player%}
		clear {extraSecondsIcyVeins::%player%}
		clear {icicleCount::%player%}
		clear {slickIce::%player%}
		clear {lastDamagedTarget::%player%}
		loop 7 times:
			clear {icicle%loop-number%::%player%}
		clear {iciclehave::%player%}

on skript stop:
	loop all offline players:
		if {tunnelofice::count::%loop-offline player%} is set:
			clear {tunnelofice::count::%loop-offline player%}
		if {tunnelofice::%loop-offline player%} is set:
			clear {tunnelofice::%loop-offline player%}
		if {lastspell::%loop-offline player%} is set:
			clear {lastspell::%loop-offline player%}
		if {frigiddmg::%loop-offline player%} is set:
			clear {frigiddmg::%loop-offline player%}
		clear {czaschain::%loop-offline player%}
		clear {chainreaction::%loop-offline player%}
		clear {chainreac::%loop-offline player%}
		clear {thermalVoidSeconds::%loop-offline player%}
		clear {icicleCount::%loop-offline player%}
		clear {slickIce::%loop-offline player%}
		clear {lastDamagedTarget::%loop-offline player%}
#on rightclick:
#	if player's tool is bone:
#		if target of player is zombie:
#			set {_f} to target of player
#			loop 50 times:
#				set invulnerability ticks of {_f} to 1
#				make player damage {_f} by 20
#				broadcast "%{_f}'s health%"
#				set {lastdamagecause::%{_f}%} to "ice lance"
#				wait 2 ticks

#JEŚLI CHCEMY, BY TOOLTIP AKTUALIZOWAŁ SIĘ WRAZ Z TRAITAMI (np. dmg buff z chain reaction lub whiteout)
#set {_dmgtooltip} to {_damage}
#if {chainreaction::%player%} > 0:
#	loop {_loreheart::*}:
#		if loop-value contains "Chain Reaction":
#			add (0.6*{trait::Glaceon::Chain Reaction::%player%}) to {_chainbuff}
#		if loop-value contains "Whiteout":
#			add (0.7*{trait::Glaceon::Whiteout::%player%}) to {_dmgtooltip}
#		if loop-value contains "Packed Ice":
#			if metadata value "lastspell" of player contains "Frostbolt":
#				add (0.9*{trait::Glaceon::Packed Ice::%player%}) to {_dmgtooltip}
#	add ({_chainbuff}*{chainreaction::%player%}) to {_dmgtooltip}

#Hologram do frigid grasp
#if {language::%player%} = "English":
#StatyHologram(player, "<##ff0000>+%{-frigiddmg::%player%}% Damage")
#else:
#StatyHologram(player, "<##ff0000>+%{-frigiddmg::%player%}% Obrażenia")

#JEŚLI CHCEMY, BY FROSTBOLT WYSTRZELAŁ ICICLE W NADMIARZE, TO WKLEIĆ TO DO FROSTBOLT
#if {icicles::%player%} > {_iciclesCap}:
	#remove 1 from {icicles::%player%}
	#set {_l3} to location 0.6 blocks above player's head
	#drawLine particle redstone, RGB 106, 184, 230, center location of {_l3}, target location of {_target}'s head, id "%player%2", rainbowMode false, solid true, density 25, length 0, zigZag count 3, height 0, visibleRange 32, displacementXYZ 0, 1, 0, pulseDelay 5
	#add 0.6 to {_damage}
	
#JEŚLI CHCEMY, BY WYŚWIETLAŁO ICICLE NA DOLE EKRANU
#if {icicles::%player%} > 0:
	#send title "                           " with subtitle "                    " to player for 1 minute with fade in 0.25 second and fade out 0 second
#else: