#buckshot
import:
	org.bukkit.event.entity.EntityShootBowEvent
	org.bukkit.entity.AbstractArrow
on EntityShootBowEvent:
	set {_shooter} to event.getEntity()
	if {_shooter} is a player:
		if event.getBow() = bow:
			if name of {_shooter}'s tool = "<##866da4>Starbolt":
				if {kartaname::%{_shooter}%} = "Buckshot":
					#if {-vortex::%{_shooter}%} is true:
					if {_shooter} is alive:
						if CanUseAbility({_shooter}) != false:
							cancel event
							if event.getForce() = 1:
								play sound "entity.skeleton.shoot" with volume 3 and pitch 1 at {_shooter}
								play sound "entity.firework_rocket.launch" with volume 3 and pitch 0.8  at {_shooter}
								play sound "entity.puffer_fish.blow_up" with volume 3 and pitch 1.1 at {_shooter}
								loop 5 times:
									if loop-number = 1:
										set {_x} to location 0 in front of {_shooter}
										set {_x} to location 1 above {_x}
										set {_loc} to {_x}
									else if loop-number = 2:
										set {_loc} to location 1.2 blocks left of {_x}
									else if loop-number = 3:
										set {_loc} to location 0.6 blocks left of {_x}
									else if loop-number = 4:
										set {_loc} to location 0.6 blocks right of {_x}
									else if loop-number = 5:
										set {_loc} to location 1.2 blocks right of {_x}
									SpreadShotArrow({_shooter}, {_loc}, false, "Multi")
							else if event.getForce() > 0.5 && event.getForce() < 1:
								play sound "entity.skeleton.shoot" with volume 3 and pitch 1 at {_shooter}
								play sound "entity.puffer_fish.blow_out" with volume 3 and pitch 1.1 at {_shooter}
								set {_x} to location 0 in front of {_shooter}
								set {_x} to location 1 above {_x}
								set {_loc} to {_x}
								SpreadShotArrow({_shooter}, {_loc}, false, "Single")
							else:
								if {-goat::%{_shooter}%} is true:
									play sound "entity.skeleton.shoot" with volume 3 and pitch 1 at {_shooter}
									play sound "entity.firework_rocket.launch" with volume 3 and pitch 0.8  at {_shooter}
									play sound "entity.puffer_fish.blow_up" with volume 3 and pitch 1.3 at {_shooter}
									loop 5 times:
										if loop-number = 1:
											set {_x} to location 0 in front of {_shooter}
											set {_x} to location 1 above {_x}
											set {_loc} to {_x}
										else if loop-number = 2:
											set {_loc} to location 1.2 blocks left of {_x}
										else if loop-number = 3:
											set {_loc} to location 0.6 blocks left of {_x}
										else if loop-number = 4:
											set {_loc} to location 0.6 blocks right of {_x}
										else if loop-number = 5:
											set {_loc} to location 1.2 blocks right of {_x}
										SpreadShotArrow({_shooter}, {_loc}, false, "Multi")
				else:
					if {language::%{_shooter}%} = "English":
						send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to {_shooter}
					else:
						send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to {_shooter}
					play sound "block.glass.break" with volume 3 and pitch 0 to {_shooter}
function SpreadShotArrow(p: player, x: location, nocharge: boolean, type: string, originalType: string = ""):
	if {_nocharge} is true:
		spawn 1 arrow at {_x}
		set {_custom} to tag "custom" of nbt compound of last spawned arrow
		if {_type} = "Multi":
			set tag "ProjectileType" of {_custom} to "Spread Shot"
		else if {_type} = "Single":
			set tag "ProjectileType" of {_custom} to "Single Shot"
		else:
			set tag "ProjectileType" of {_custom} to "Portal Shot"
			if {_originalType} is set:
				set tag "ProjectileTypeOriginal" of {_custom} to {_originalType}
		set metadata value "ProjectileShooter" of last spawned arrow to {_p}
		set tag "BuckshotArrow" of {_custom} to true
		TrailPurple(last spawned arrow)
		KillArrow(last shot projectile)
	else:
		shoot an arrow from {_x} with speed 2.75
		set {_custom} to tag "custom" of nbt compound of last shot arrow
		if {_type} = "Multi":
			set tag "ProjectileType" of {_custom} to "Spread Shot"
		else if {_type} = "Single":
			set tag "ProjectileType" of {_custom} to "Single Shot"
		else:
			set tag "ProjectileType" of {_custom} to "Portal Shot"
			set tag "PortalArrow" of {_custom} to true
			if {_originalType} is set:
				set tag "ProjectileTypeOriginal" of {_custom} to {_originalType}
		set gravity of last shot projectile to false
		set vector length of last shot projectile's velocity to 0.7
		set metadata value "ProjectileShooter" of last shot arrow to {_p}
		set tag "BuckshotArrow" of {_custom} to true
		TrailPurple(last shot projectile)
		KillArrow(last shot projectile)
function KillArrow(e: projectile):
	wait 20 seconds
	clear metadata value "ProjectileType" of {_e}
	clear metadata value "ProjectileShooter" of {_e}
	kill {_e}
function TrailPurple(e: projectile):
	while block at {_e} is air:
		if {_e} is alive:
			draw 1 of electric spark at {_e}
			wait 1 tick
		else:
			stop loop
function BuckshotPortalCreate(p: player, portals: boolean, eventblock: location):
	set {_block} to block above {_eventblock}
	if {_eventblock} is not solid:
		set {_blocksabove} to 1.3
	else:
		set {_blocksabove} to 2.3
	spawn 1 armor stand at location {_blocksabove} above {_eventblock} with nbt from "{Invulnerable:1b,Invisible:1b}"
	set {_custom} to tag "custom" of nbt compound of last spawned armor stand
	set tag "BuckshotPortal" of {_custom} to true
	set tag "PortalCount" of {_custom} to 0
	set {_portal} to last spawned armor stand
	set gravity of {_portal} to false
	add {_portal} to {buckshotportals::%{_p}%::*}
	set {_uuid} to uuid of {_portal}
	execute console command "/disguuid %{_uuid}% Iron_Golem"

	set {_shapes::outer-circle} to a circle of radius 1.225
	set {_shapes::inner-circle} to a circle of radius 1
	set {_shapes::tiny-circle} to a circle of radius 0.675

	set {_shapes::triangle-1} to a triangle with radius 1
	set {_shapes::triangle-2} to a triangle with radius 1
	rotate shapes {_shapes::triangle-2} around y axis by 60 degrees

	set particle of {_shapes::*} to dragon breath particle
	
	set {_eye} to location {_blocksabove} above {_eventblock}
	if {_portals} is not true:
		set {_view} to vector from yaw {_p}'s yaw and pitch {_p}'s pitch
	else:
		set {_yawrandom} to a random number between -180 and 180
		set {_view} to vector from yaw {_yawrandom} and pitch {_p}'s pitch
	set {_yaw} to yaw of {_view}
	set {_rotation} to rotation from vector(0, 1, 0) to {_view}
	set {_loc} to location of {_portal}
	set yaw of {_loc} to {_yaw}
	if {_p}'s pitch is between 60 and 90:
		set pitch of {_loc} to pitch of {_p}
	increase y-coordinate of {_loc} by -2
	teleport {_portal} to {_loc}
	BuckshotPortalDelete({_p}, {_portal}, 20 seconds)
	while {buckshotportals::%{_p}%::*} contains {_portal}:
		loop 40 times:
			draw {_shapes::*} at {_eye} ~ {_view}:
				rotate shape drawn shape by {_rotation}
				rotate shape drawn shape around relative y axis by -1 * {_yaw}

			wait 1 tick
function BuckshotPortalDelete(p: player, portal: entity, t: timespan):
	wait {_t}
	remove {_portal} from {buckshotportals::%{_p}%::*}
	kill {_portal}


on rightclick:
	if player's tool is purple dye:
		if name of player's tool = "<##866da4>Magic Portals":
			if {kartaname::%player%} = "Buckshot":
				if CanUseAbility(player) != false:
					if cooldown "Magic Portals%player%" is finished:
						set {_cd} to 10
						set {_pospiech} to 1 + ({haste::%player%}/4)/100
						set {_cd} to {_cd}/{_pospiech}
						set {_cdd} to {_cd}
						set {_cd} to "%{_cd}% seconds" parsed as timespan
						create cooldown "Magic Portals%player%" for {_cd}
						set the cooldown of player's held item for player to {_cd}
						set {_lore} to "&8Ability%nl%&fInstant cast%nl%&7Cooldown: &f%{_cdd}% seconds%nl%&7Use: &fRMB%nl%<##866da4>Creates a Magic Portal at the target location%nl%<##866da4>for &f25 seconds<##866da4>. Arrows passing through a portal%nl%<##866da4>will vanish and fire from all other active portals.%nl%<##866da4>Direction in which the arrows will be shot depends%nl%<##866da4>on the facing of the portal.%nl%<##866da4>Pressing Shift will cause the portal to be created%nl%<##866da4>a block higher.%nl% %nl%<##866da4>Arrows can bounce between portals a maximum of 3 times."
						set {_loreEN} to "&8Ability%nl%&fInstant cast%nl%&7Cooldown: &f%{_cdd}% seconds%nl%&7Use: &fRMB%nl%<##866da4>Creates a Magic Portal at the target location%nl%<##866da4>for &f25 seconds<##866da4>. Arrows passing through a portal%nl%<##866da4>will vanish and fire from all other active portals.%nl%<##866da4>Direction in which the arrows will be shot depends%nl%<##866da4>on the facing of the portal.%nl%<##866da4>Pressing Shift will cause the portal to be created%nl%<##866da4>a block higher.%nl% %nl%<##866da4>Arrows can bounce between portals a maximum of 3 times."
						LoreUpdate(player, {_lore}, {_loreEN}, "<##866da4>Magiczne Portale", "<##866da4>Magic Portals")
						#give player bow with lore "&70.1s-0.9s charge time: Fire off a Single ShotYour shots have special properties, that%nl%&7change depending on the charge time.%nl%&7Your shots do not consume any arrows.%nl%&7Arrows float in the air, pierce through enemies and move slower than usual.%nl%&7Your arrows move in a straight line.%nl%&7Your arrows disappear when they hit terrain or%nl%&7spend enough time in the air.%nl%&70.1s-0.9s: Fire off a precise single shot.%nl%&71s+ Fire off a Multi Shot, firing a total of 5 arrows."
						if player is sneaking:
							BuckshotPortalCreate(player, false, block above target block of player)
						else:
							BuckshotPortalCreate(player, false, target block of player)
						play sound "skill.buckshot.magic_portal_create" with volume 3 and pitch 0 at target block of player
						play sound "entity.enderman.teleport" with volume 3 and pitch 1.5 at target block of player
					else: 
						cancel event
						if {tekstcd::%player%} = true:
							if cooldown "CdTextOverlap%player%" is finished:
								create cooldown "CdTextOverlap%player%" for 2 ticks
								set {_cdd} to cooldown "Magic Portals%player%"
								if {language::%player%} = "English":
									send "<##866da4>You must wait &f%{_cdd}%<##866da4> to use this ability." to player
								else:
									send "<##866da4>Musisz odczekać &f%{_cdd}%<##866da4>, aby użyć tej umiejętności." to player
						stop
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player

	if player's tool is pink dye:
		if name of player's tool = "<##866da4>G.O.A.T":
			if {kartaname::%player%} = "Buckshot":
				if CanUseAbility(player) != false:
					if cooldown "G.O.A.T%player%" is finished:
						set {_cd} to 240
						set {_pospiech} to 1 + ({haste::%player%}/4)/100
						set {_cd} to {_cd}/{_pospiech}
						set {_cdd} to {_cd}
						set {_cd} to "%{_cd}% seconds" parsed as timespan
						create cooldown "G.O.A.T%player%" for {_cd}
						set the cooldown of player's held item for player to {_cd}
						set {_lore} to "&8Ultimate Ability%nl%&fInstant cast%nl%&7Cooldown: &f%{_cdd}/60% minutes%nl%&7Use: &fRMB%nl%<##866da4>Creates &f12 <##866da4>Magic Portals at random locations%nl%<##866da4>within &f15 <##866da4>blocks. Portals created with%nl%<##866da4>this ability act the same way as portals%nl%<##866da4>created with the Magic Portals ability."
						set {_loreEN} to "&8Ultimate Ability%nl%&fInstant cast%nl%&7Cooldown: &f%{_cdd}/60% minutes%nl%&7Use: &fRMB%nl%<##866da4>Creates &f12 <##866da4>Magic Portals at random locations%nl%<##866da4>within &f15 <##866da4>blocks. Portals created with%nl%<##866da4>this ability act the same way as portals%nl%<##866da4>created with the Magic Portals ability."
						LoreUpdate(player, {_lore}, {_loreEN}, "<##866da4>G.O.A.T", "<##866da4>G.O.A.T")
						set {-goat::%player%} to true
						play sound "skill.buckshot.goat" with volume 4 and pitch 1.4 at player
						play sound "block.end_portal.spawn" with volume 4 and pitch 2 at player
						loop blocks in radius 15 around the player:
							if (rounded down y-coordinate of loop-block) = (rounded down y-coordinate of player):
								add loop-block to {_blocks::*}
							else if (rounded down y-coordinate of loop-block) = (rounded down y-coordinate of player + 1):
								add loop-block to {_blocks::*}
						loop 12 times:
							set {_block} to a random element of {_blocks::*}
							remove {_block} from {_blocks::*}
							BuckshotPortalCreate(player, true, {_block})
						wait 10 seconds
						clear {-goat::%player%}
					else: 
						cancel event
						if {tekstcd::%player%} = true:
							if cooldown "CdTextOverlap%player%" is finished:
								create cooldown "CdTextOverlap%player%" for 2 ticks
								set {_cdd} to cooldown "G.O.A.T%player%"
								if {language::%player%} = "English":
									send "<##866da4>You must wait &f%{_cdd}%<##866da4> to use this ability." to player
								else:
									send "<##866da4>Musisz odczekać &f%{_cdd}%<##866da4>, aby użyć tej umiejętności." to player
						stop
			else:
				if {language::%player%} = "English":
					send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				else:
					send "&8[&6Earthcraft&8] &6Nie masz wybranej wymaganej karty, by móc użyć tej umiejętności." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	if clicked entity is armor stand:
		set {_custom} to tag "custom" of nbt compound of clicked entity
		if tag "BuckshotPortal" of {_custom} is set:
			cancel event
on projectile collide:
	set {_custom} to tag "custom" of nbt compound of event-projectile
	if tag "BuckshotArrow" of {_custom} is set:
		set {_entityhit} to tag "custom" of nbt compound of event-entity
		set {_shooter} to metadata value "ProjectileShooter" of event-projectile
		if tag "BuckshotPortal" of {_entityhit} is not set:
			if event-entity is not {_shooter}:
				if event-entity is not a player:
					if cooldown "AlreadyDamagedBuckshot%uuid of event-entity%%event-projectile%" is finished:
						create cooldown "AlreadyDamagedBuckshot%uuid of event-entity%%event-projectile%" for 0.15 seconds
						if tag "ProjectileType" of {_custom} is "Single Shot":
							set {_crit} to 0 + ({criticalhit::%{_shooter}%}/10)
							set {_damage} to 3 + ({damage::%{_shooter}%}/27) + ({versatility::%{_shooter}%}/81) + ({primarystat::%{_shooter}%}/13.5)
							chance of {_crit}%:
								set {_damage} to {_damage}*2
							set event-entity's last damage cause to sweep attack
							set metadata value "LastDamageCauseEN" of event-entity to "<##866da4>Single Shot"
							set metadata value "LastDamageCause" of event-entity to "<##866da4>Single Shot"
							set metadata value "Element" of {_shooter} to "Magic"
							set metadata value "LastDamageCauseLore" of event-entity to {_lore}
							set metadata value "LastDamageCauseLoreEN" of event-entity to {_loreEN}
							make {_shooter} damage event-entity by {_damage}*2
						else if tag "ProjectileType" of {_custom} is "Spread Shot":
							set {_crit} to 0 + ({criticalhit::%{_shooter}%}/10)
							set {_damage} to 0.8*(3 + ({damage::%{_shooter}%}/27) + ({versatility::%{_shooter}%}/81) + ({primarystat::%{_shooter}%}/13.5))
							chance of {_crit}%:
								set {_damage} to {_damage}*2
							set event-entity's last damage cause to sweep attack
							set metadata value "LastDamageCauseEN" of event-entity to "<##866da4>Spread Shot"
							set metadata value "LastDamageCause" of event-entity to "<##866da4>Spread Shot"
							set metadata value "Element" of {_shooter} to "Magic"
							set metadata value "LastDamageCauseLore" of event-entity to {_lore}
							set metadata value "LastDamageCauseLoreEN" of event-entity to {_loreEN}
							make {_shooter} damage event-entity by {_damage}*2
						else if tag "ProjectileType" of {_custom} is "Portal Shot":
							set {_mastery} to 1 + (30 + ({mastery::%{_shooter}%}/10))/100
							set {_crit} to 0 + ({criticalhit::%{_shooter}%}/10)
							set {_damage} to 3 + ({damage::%{_shooter}%}/27) + ({versatility::%{_shooter}%}/81) + ({primarystat::%{_shooter}%}/13.5)
							if tag "ProjectileTypeOriginal" of {_custom} = "Single Shot":
								set {_damage} to {_damage}*1
							else if tag "ProjectileTypeOriginal" of {_custom} = "Spread Shot":
								set {_damage} to {_damage}*0.8
							set {_damage} to {_damage}*{_mastery}
							chance of {_crit}%:
								set {_damage} to {_damage}*2
							wait 1 tick
							set event-entity's last damage cause to sweep attack
							set metadata value "LastDamageCauseEN" of event-entity to "<##866da4>Portal Shot"
							set metadata value "LastDamageCause" of event-entity to "<##866da4>Portal Shot"
							set metadata value "Element" of {_shooter} to "Magic"
							set metadata value "LastDamageCauseLore" of event-entity to {_lore}
							set metadata value "LastDamageCauseLoreEN" of event-entity to {_loreEN}
							make {_shooter} damage event-entity by {_damage}*2
			#if tag "ProjectileType" of {_custom} is "Single Shot":
			#	if {1ent} is not set:
			#		set {1ent} to event-entity
			#	else:
			#		if {2ent} is not set:
			#			if event-entity is not {1ent}:
			#				set {2ent} to event-entity
			#if {1ent} is set:
			#	if {2ent} is set:
			#		set {_x1} to x-coordinate of {1ent}
			#		set {_y1} to y-coordinate of {1ent}
			#		set {_z1} to z-coordinate of {1ent}
			#		set {_x2} to x-coordinate of {2ent}
			#		set {_y2} to y-coordinate of {2ent}
			#		set {_z2} to z-coordinate of {2ent}
			#		set {_x} to ({_x1} + {_x2})/2
			#		set {_y} to ({_y1} + {_y2})/2
			#		set {_z} to ({_z1} + {_z2})/2
			#		set {_loc1} to location({_x}, {_y}, {_z}, world "world")
			#		set {_loc2} to location({_x}, {_y}, {_z}, world "world")
			#		push {1ent} (vector from {1ent} to {_loc1}) with speed 2
			#		push {2ent} (vector from {2ent} to {_loc2}) with speed 2
			#		clear {1ent}
			#		clear {2ent}
		else:
			set {_projectileType} to tag "ProjectileType" of {_custom}
			delete event-projectile
			if tag "PortalArrow" of {_custom} is set:
				set {_portalcount} to tag "PortalCount" of {_entityhit}
				if {_portalcount} < 3:
					add 1 to {_portalcount}
					set tag "PortalCount" of {_entityhit} to {_portalcount}
				else:
					set {_PortalShotLimit} to true
			loop {buckshotportals::%{_shooter}%::*}:
				if loop-value is not event-entity:
					if chunk at loop-value is loaded:
						if distance between {_shooter} and loop-value < 100:
							if {_PortalShotLimit} is not set:
								SpreadShotArrow({_shooter}, loop-value's eye, false, "Portal", {_projectileType})
								play sound "entity.enderman.teleport" with volume 2 and pitch 2 at loop-value
		cancel event
	if tag "custom;Invisible" of nbt of event-projectile is set:
		cancel event
on projectile hit:
	set {_custom} to tag "custom" of nbt compound of event-projectile
	set {_shooter} to metadata value "ProjectileShooter" of event-projectile
	if tag "ProjectileType" of {_custom} is "Spread Shot" or "Single Shot" or "Portal Shot":
		if event-block is a block:
			clear metadata value "ProjectileType" of event-projectile
			clear metadata value "ProjectileShooter" of event-projectile
			kill event-projectile

	if tag "BuckshotArrowBalthazar" of {_custom} is set:
		set {_p} to (tag "BuckshotArrowBalthazar" of {_custom}) parsed as entity
		BuckshotSpawn({_p}, event-location)
			
#buckshot = spreadshot
#flameslinger = rain of arrows inferno
#jakas karta co czas odmierza strzal w powietrzu
#karta co wbija igły w cel (set arrows stuck in shooter to 600) i ult A Thousand Needles albo umka co wyrywa igły jedna po jednej 


#Buckshot's attacks have unique properties:
# Arrows pierce through targets
#Arrows move in a straight line, are slower and have no gravity
#Charged attack 1: Single Shot Arrow
#Charged attack 2 80% of single Spread Shot
#Ult Buckshot creates many portals blah blah w losowym ulozeniu (skaluej sie z kontrola tlumu? ilosc portali)
#Czas trwania portali z kontrola tlumu skal