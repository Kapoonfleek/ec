
import:
    java.io.File
    com.sk89q.worldedit.math.BlockVector3
    com.sk89q.worldedit.extent.clipboard.io.ClipboardFormats
    com.sk89q.worldedit.bukkit.BukkitWorld
    org.mvplugins.multiverse.core.world.WorldManager
    org.mvplugins.multiverse.core.MultiverseCore
    org.mvplugins.multiverse.core.MultiverseCoreApi
    org.mvplugins.multiverse.core.world.options.CloneWorldOptions
    org.mvplugins.multiverse.core.world.options.DeleteWorldOptions
    org.mvplugins.multiverse.core.world.LoadedMultiverseWorld
    org.bukkit.event.world.TimeSkipEvent
    org.mvplugins.multiverse.core.world.MultiverseWorld
    org.bukkit.Bukkit
    org.bukkit.World
    org.bukkit.Chunk
    org.bukkit.plugin.Plugin


effect paste schematic %string% at %location% [(1Â¦(with|including) air)]:
    trigger:
        set {_file} to new File(expr-1)

        set {_air} to true if parse mark = 1, else false
        set {_world} to new BukkitWorld(expr-2.getWorld())

        set {_loc} to BlockVector3.at(expr-2.getBlockX(), expr-2.getBlockY(), expr-2.getBlockZ())

        ClipboardFormats.findByFile({_file}).load({_file}).paste({_world}, {_loc}, false, {_air}, false, null)

effect prepare world %string% as %string%:
    trigger:
        set {_api} to MultiverseCoreApi.get()
        set {_manager} to {_api}.getWorldManager()
        
        set {_world} to {_manager}.getLoadedWorld(expr-1).getOrNull()
        set {_options} to CloneWorldOptions.fromTo({_world}, expr-2)

        {_manager}.cloneWorld({_options})

effect deleteworld %string%:
    trigger:
        set {_api} to MultiverseCoreApi.get()
        set {_manager} to {_api}.getWorldManager()

        set {_world} to {_manager}.getWorld(expr-1).getOrNull()
        set {_options} to DeleteWorldOptions.world({_world})

        {_manager}.deleteWorld({_options})

function doesWorldExist(w: string) :: boolean:
    set {_api} to MultiverseCoreApi.get()
    set {_manager} to {_api}.getWorldManager()
    return {_manager}.isWorld({_w})

function getNewInstance(w: string) :: integer:
    set {_bool} to true
    set {_index} to 0
    while {_bool} is true:
        add 1 to {_index}
        set {_bool} to false if doesWorldExist("%{_w}%%{_index}%") = false
    return {_index}

function createNewInstance(w: string):
    set {_instance} to getNewInstance({_w})
    set {_newInstance} to "%{_w}%%{_instance}%"
    prepare world {_w} as {_newInstance}

function isWorldIsland(w: world) :: boolean:
    set {_worldList::*} to getIslandWorlds()
    set {_world} to "%{_w}%"
    replace all "0", "1", "2", "3", "4", "5", "6", "7", "8" and "9" in {_world} with ""
    if {_worldList::*} contains {_world}:
        set {_return} to true
    return {_return}

function getIslandWorlds() :: strings:
    load yaml "plugins/Skript/islandexpeditions/IslandList" as "IslandList"
    set {_islandList::*} to yaml list "Islands" in "IslandList"
    unload yaml "IslandList"

    return {_islandList::*}

on rightclick:
    if player's tool is bamboo:
        if player's name = "Pehrek":
            set {_islandList::*} to getIslandWorlds()
            set {_island} to a random element of {_islandList::*}

            set {_difficulty} to "<##ae38ff>Mythic"

            set {_direction} to a random element of "Longitude" and "Latitude"
            set {_enemyDirection} to a random element of "Longitude" and "Latitude"
            set {_directionsLongitude::*} to "North" and "South"
            set {_directionsLatitude::*} to "East" and "West"
            
            if {_direction} = "Longitude":
                set {_rotation} to a random element of "North" and "South"
                remove {_rotation} from {_directionsLongitude::*}
                
            else:
                set {_rotation} to a random element of "East" and "West"
                remove {_rotation} from {_directionsLatitude::*}

            if {_enemyDirection} = "Longitude":
                set {_enemyRotation} to a random element of {_directionsLongitude::*}
            else:
                set {_enemyRotation} to a random element of {_directionsLatitude::*}

            broadcast "%{_enemyRotation}% DIRECTION IN WHICH SHIP IS SPAWNED"

            createNewInstance({_island})
            set {_instance} to getNewInstance({_island})-1
            set {_newInstance} to "%{_island}%%{_instance}%"

            if player is in a party:
                set {_partyMembers::*} to party members of party of player
            else:
                add player to {_partyMembers::*}

            load yaml "plugins/Skript/islandexpeditions/%{_island}%/Locations.yml" as "%{_island}%Locations"
            set {_total} to yaml value "TotalLocations.ShipAlly.%{_direction}%" in "%{_island}%Locations"

            loop yaml node keys "Locations.ShipAlly.%{_direction}%.%{_rotation}%" in "%{_island}%Locations":
                set {_integer} to (loop-value parsed as integer)
                set {_allyLocations::*} to {_allyLocations::*} and {_integer}

            loop yaml node keys "Locations.ShipAlly.%{_enemyDirection}%.%{_enemyRotation}%" in "%{_island}%Locations":
                set {_integer} to (loop-value parsed as integer)
                set {_enemyLocations::*} to {_enemyLocations::*} and {_integer}

            set {_lowestAlly} to min({_allyLocations::*})
            set {_highestAlly} to max({_allyLocations::*})

            set {_lowestEnemy} to min({_enemyLocations::*})
            set {_highestEnemy} to max({_enemyLocations::*})

            set {_borderRadius} to yaml value "WorldBorderRadius" in "%{_island}%Locations"
            set {_borderMin} to {_borderRadius}-200
            set {_borderMax} to ({_borderRadius}*-1) + 200

            set {_chunkBorder1} to location({_borderMin}, 0, {_borderMin}, world {_newInstance})
            set {_chunkBorder2} to location({_borderMax}, 0, {_borderMax}, world {_newInstance})
            set {_plugin} to instance of plugin "Skript"
            
            loop all chunks within {_chunkBorder1} and {_chunkBorder2}:
                loop-value.addPluginChunkTicket({_plugin})
                loop-value.load()

            set worldborder of world {_newInstance} to a worldborder:
                set worldborder radius of event-worldborder to {_borderRadius}
                set worldborder center of event-worldborder to location(0, 500, 0)
                set worldborder warning distance of event-worldborder to 10

            set {_shipStart} to a random integer between {_lowestAlly} and {_highestAlly}
            set {_enemyShipStart} to a random integer between {_lowestEnemy} and {_highestEnemy}

    
            set {_x} to yaml value "Locations.ShipAlly.%{_direction}%.%{_rotation}%.%{_shipStart}%.x" in "%{_island}%Locations"
            set {_y} to yaml value "Locations.ShipAlly.%{_direction}%.%{_rotation}%.%{_shipStart}%.y" in "%{_island}%Locations"
            set {_z} to yaml value "Locations.ShipAlly.%{_direction}%.%{_rotation}%.%{_shipStart}%.z" in "%{_island}%Locations"

            set {_xEnemy} to yaml value "Locations.ShipAlly.%{_enemyDirection}%.%{_enemyRotation}%.%{_enemyShipStart}%.x" in "%{_island}%Locations"
            set {_yEnemy} to yaml value "Locations.ShipAlly.%{_enemyDirection}%.%{_enemyRotation}%.%{_enemyShipStart}%.y" in "%{_island}%Locations"
            set {_zEnemy} to yaml value "Locations.ShipAlly.%{_enemyDirection}%.%{_enemyRotation}%.%{_enemyShipStart}%.z" in "%{_island}%Locations"

            unload yaml "%{_island}%Locations"
            
            set {_locShip} to location({_x}, {_y}, {_z}, world {_newInstance})
            set {_locEnemyShip} to location({_xEnemy}, {_yEnemy}, {_zEnemy}, world {_newInstance})
            
            if {_direction} = "Longitude":
                set {_rotationShip} to a random element of "North" and "South"
                
            else:
                set {_rotationShip} to a random element of "East" and "West"

            if {_enemyDirection} = "Longitude":
                set {_rotationShipEnemy} to a random element of "North" and "South"
                
            else:
                set {_rotationShipEnemy} to a random element of "East" and "West"

            broadcast "%{_rotationShip}% SHIP ORIENTATION + %{_shipStart}% SHIP START NUMBER  HIGHEST:%{_total}%"
                
            paste schematic "plugins/FastAsyncWorldEdit/schematics/IslandExpeditionsShip%{_rotationShip}%.schem" at {_locShip}
            paste schematic "plugins/FastAsyncWorldEdit/schematics/IslandExpeditionsEnemyShip%{_rotationShipEnemy}%.schem" at {_locEnemyShip}

            if {_rotationShip} = "North" or "South":
                if {_rotationShip} = "South":
                    set {_z} to z-coordinate of {_locShip} + 5.85
                    set {_x} to x-coordinate of {_locShip}
                    set {_yaw} to 0
                else:
                    set {_z} to z-coordinate of {_locShip} - 5.85
                    set {_x} to x-coordinate of {_locShip}
                    set {_yaw} to 180
            else:
                if {_rotationShip} = "West":
                    set {_x} to x-coordinate of {_locShip} - 5.85
                    set {_z} to z-coordinate of {_locShip}
                    set {_yaw} to 90
                else:
                    set {_x} to x-coordinate of {_locShip} + 5.85
                    set {_z} to z-coordinate of {_locShip}
                    set {_yaw} to -90

            set {_locFlynn} to location({_x}, y-coordinate of {_locShip} + 13.5, {_z}, world {_newInstance}, {_yaw}, -5)
            spawn an adult zombie at {_locFlynn} with nbt from "{Silent:1b,NoAI:1b}"
            set {_flynnFairwind} to last spawned zombie
            set display name of {_flynnFairwind} to "Flynn Fairwind"
            set scale attribute of {_flynnFairwind} to 0.9
            set {_flynnFairwind}'s tool to air

            entityTitle({_flynnFairwind}, "Captain")
            flynnFairwindIdleSounds({_flynnFairwind})

            teleport {_partyMembers::*} to {_locFlynn}
            islandExpeditionInit({_instance}, {_locFlynn}, {_island}, {_difficulty}, {_partyMembers::*})

            load yaml "plugins/Skript/islandexpeditions/DialoguesIslands.yml" as "IslandsDialogues"
            set {_totalDialogues} to size of (yaml node keys "Dialogues.Arrive" in "IslandsDialogues")
            set {_arriveDialogue} to a random integer between 1 and {_totalDialogues}

            if {_arriveDialogue} = 4:
                while {_arriveDialogue} = 4:
                    set {_arriveDialogue} to a random integer between 1 and {_totalDialogues}
            else if {_arriveDialogue} = 3:
                set {_arriveSoundFollowup} to yaml value "Dialogues.Arrive.4.Sound" in "IslandsDialogues"
                set {_arriveQuoteFollowup} to yaml value "Dialogues.Arrive.4.Quote" in "IslandsDialogues"
                flynnFairwindFollowupDialogue({_flynnFairwind}, {_locFlynn}, 10 seconds, {_arriveSoundFollowup}, {_arriveQuoteFollowup}, {_partymembers::*})

            set {_arriveSound} to yaml value "Dialogues.Arrive.%{_arriveDialogue}%.Sound" in "IslandsDialogues"
            set {_arriveQuote} to yaml value "Dialogues.Arrive.%{_arriveDialogue}%.Quote" in "IslandsDialogues"

            unload yaml "IslandsDialogues"

            play sound {_arriveSound} with volume 2 and pitch 1 at {_locFlynn}
            send "&eFlynn Fairwind says: %{_arriveQuote}%" to {_partymembers::*}
            dialogue({_arriveQuote}, {_locFlynn}, 3 seconds, 0 seconds, {_partymembers::*})

            #Enemies
            #       Undead:
            #           fdsf
            #       Fire Elementals

            #Azerite
function flynnFairwindIdleSounds(e: entity):
    while {_e} is alive:
        if metadata value "Speaking" of {_e} != true:
            play sound "npc.flynnfairwind.idle" with volume 0.9 and pitch 1 at location of {_e}
        set {_randomWait} to a random number between 10 and 20
        set {_wait} to "%{_randomWait}% seconds" parsed as timespan
        wait {_wait}

function flynnFairwindFollowupDialogue(e: entity, loc: location, wait: timespan, sound: string, quote: string, partymembers: players):
    set metadata value "Speaking" of {_e} to true
    wait {_wait}
    play sound {_sound} with volume 2 and pitch 1 at {_loc}
    send "&eFlynn Fairwind says: %{_quote}%" to {_partymembers::*}
    clear metadata value "Speaking" of {_e}

function islandExpeditionInit(instance: integer, spawnLoc: location, islandName: string, difficulty: string, partymembers: players):
    loop {_partymembers::*}:
        if metadata value "InsideInstance" of loop-value is not set:
            set metadata value "InsideInstance" of loop-value to true
            set metadata value "IslandExpeditionInstance" of loop-value to {_instance}
            set metadata value "SpawnpointIslandExpedition" of loop-value to {_spawnLoc}
            set metadata value "IslandName" of loop-value to {_islandName}
            set metadata value "IslandExpeditionTime" of loop-value to 0 seconds

            clear loop-value's fastboard
            set title of loop-value's fastboard to "    &b&lIsland Expedition   "
            set line 1 of loop-value's fastboard to " "
            set line 2 of loop-value's fastboard to "&fIsland: &bPlunder Cove"
            set line 3 of loop-value's fastboard to "&fTime on Island: &e00:00"
            set line 4 of loop-value's fastboard to "&fDifficulty: %{_difficulty}%"
            set line 5 of loop-value's fastboard to " "
            set line 6 of loop-value's fastboard to "&fî  Azerite collected:"
            set line 7 of loop-value's fastboard to "<##3aff17>Ally: &f0/12000"
            set line 8 of loop-value's fastboard to "<##ff1742>Enemy: &f0/12000"
            set line 9 of loop-value's fastboard to " "
            set line 10 of loop-value's fastboard to "&fWorth &b0 &fî  Azerite."

            set {_player} to Bukkit.getPluginManager().getPlugin("Essentials").getUser(loop-value)
            if {_player}.isGodModeEnabled() = true:
                {_player}.setGodModeEnabled(false)

            if loop-value can fly:
                disable flight for loop-value

            heal loop-value
        else:
            set {_players::*} to {_partymembers::*} where [input != loop-value]
            send "&c&o%loop-value% is already in an instance. The Island Expedition will start without the player." to {_players::*}
        
command /islandleave:
    trigger:
        islandExpeditionLeave(player)

command /islandinit:
    trigger:
        islandExpeditionInit(3, player's location, "PlunderCove", "<##ae38ff>Mythic", player)

function islandExpeditionStart():
    broadcast "This is when the start timer ends. Initialize timer here."

function islandExpeditionLeave(p: player):
    clear metadata value "InsideInstance" of {_p}
    clear metadata value "IslandExpeditionInstance" of {_p}
    clear metadata value "SpawnpointIslandExpedition" of {_p}
    clear metadata value "IslandName" of {_p}
    clear metadata value "IslandExpeditionTime" of {_p}
    clear {_p}'s fastboard
    if metadata value "ECEngaged" of {_p} is not set:
        if metadata value "DungeonInstance" of {_p} is not set:
            UpdateScoreboard({_p})

function islandExpeditionTimer(p: player):
    while metadata value "IslandExpeditionInstance" of {_p} is set:
        wait 1 second
        add 1 second to metadata value "IslandExpeditionTime" of {_p}

function enemyShipSpawnIsland():
    broadcast "Spawn"

function seagullsAmbientSounds(p: player):
    while "%regions at {_p}%" contains "SpawnArea":
        set {_random} to a random integer between 1 and 14
        set {_sound} to yaml value "Sounds.Ambient.Seagulls.%{_random}%.Sound" in "IslandsSounds"
        set {_duration} to yaml value "Sounds.Ambient.Seagulls.%{_random}%.Duration" in "IslandsSounds"
        play sound {_sound} with volume 1 and pitch 1 to {_p}
        set {_w} to a random number between 1 and 6
        set {_wait} to "%{_w}% seconds" parsed as timespan
        wait {_duration} + {_wait}
        stop loop if metadata value "AtDocks" of {_p} is not set
    stop sound {_sound} for {_p}

function shoreAmbientSounds(p: player):
    while "%regions at {_p}%" contains "SpawnArea":
        set {_random} to a random integer between 1 and 4
        set {_sound} to yaml value "Sounds.Ambient.Shore.%{_random}%.Sound" in "IslandsSounds"
        set {_duration} to yaml value "Sounds.Ambient.Shore.%{_random}%.Duration" in "IslandsSounds"
        play sound {_sound} with volume 1 and pitch 1 to {_p}
        set {_w} to a random number between 1 and 6
        set {_wait} to "%{_w}% seconds" parsed as timespan
        wait {_duration} + {_wait}
        stop loop if metadata value "AtDocks" of {_p} is not set
    stop sound {_sound} for {_p}

function windAmbientSounds(p: player):
    if {wind} is set:
        while "%regions at {_p}%" contains "SpawnArea":
            set {_random} to a random integer between 1 and 4
            set {_sound} to yaml value "Sounds.Ambient.Wind.%{wind}%.%{_random}%.Sound" in "IslandsSounds"
            set {_duration} to yaml value "Sounds.Ambient.Wind.%{wind}%.%{_random}%.Duration" in "IslandsSounds"
            play sound {_sound} with volume 1 and pitch 1 to {_p}
            set {_w} to a random number between 1 and 6
            set {_wait} to "%{_w}% seconds" parsed as timespan
            wait {_duration} + {_wait}
            stop loop if metadata value "AtDocks" of {_p} is not set
        stop sound {_sound} for {_p}
    
    
command /diatest:
    trigger:
        set {_islandList::*} to getIslandWorlds()
        set {_island} to a random element of {_islandList::*}

        load yaml "plugins/Skript/islandexpeditions/DialoguesIslands.yml" as "IslandsDialogues"
        set yaml value "Dialogues.Arrive.1.Sound" in "IslandsDialogues" to "npc.flynnfairwind.island_start_arrive_anchorsaway"
        set yaml value "Dialogues.Arrive.1.Quote" in "IslandsDialogues" to "Anchor's away and planks are down! We'll get the Azerite detector online, you handle the bad guys."

        set yaml value "Dialogues.Arrive.2.Sound" in "IslandsDialogues" to "npc.flynnfairwind.island_start_arrive_lookslike"
        set yaml value "Dialogues.Arrive.2.Quote" in "IslandsDialogues" to "Looks like we've arrived! We'll get the detector up and running while you get acquainted with the island."

        set yaml value "Dialogues.Arrive.3.Sound" in "IslandsDialogues" to "npc.flynnfairwind.island_start_arrive_opensea"
        set yaml value "Dialogues.Arrive.3.Quote" in "IslandsDialogues" to "Ahh, the open sea. A shanty on your lips, the wind in your chest hair. Now that's freedom!"

        set yaml value "Dialogues.Arrive.4.Sound" in "IslandsDialogues" to "npc.flynnfairwind.island_start_arrive_opensea_wellunless"
        set yaml value "Dialogues.Arrive.4.Quote" in "IslandsDialogues" to "Well... unless you've been pressed into service with the Navy. Or captured by pirates. And then... captured by the Navy."

        set yaml value "Dialogues.Arrive.5.Sound" in "IslandsDialogues" to "npc.flynnfairwind.island_start_arrive_shipsdocked"
        set yaml value "Dialogues.Arrive.5.Quote" in "IslandsDialogues" to "Ship's docked! Enjoy your adventure while we spin up the ol' Azerite detector."
        
        save yaml "IslandsDialogues"
        unload yaml "IslandsDialogues"
        stop
        #Pet island dialogues
        load yaml "plugins/Skript/islandexpeditions/%{_island}%/Dialogues.yml" as "%{_island}%Dialogues"
        unload yaml "%{_island}%Dialogues"

on rightclick on an entity:
    if name of clicked entity = "Flynn Fairwind":
        if cooldown "Flynn Fairwind-Talk%player%" is finished:
            create cooldown "Flynn Fairwind-Talk%player%" for 2 seconds
            set {_greeting} to a random integer between 1 and 7
            if {_greeting} = 1:
                set {_sound} to "npc.flynnfairwind.greeting_ahoy"
            else if {_greeting} = 2:
                set {_sound} to "npc.flynnfairwind.greeting_ajobs"
            else if {_greeting} = 3:
                set {_sound} to "npc.flynnfairwind.greeting_areyou"
            else if {_greeting} = 4:
                set {_sound} to "npc.flynnfairwind.greeting_blood"
            else if {_greeting} = 5:
                set {_sound} to "npc.flynnfairwind.greeting_imall"
            else if {_greeting} = 6:
                set {_sound} to "npc.flynnfairwind.greeting_whatsthe"
            else if {_greeting} = 7:
                set {_sound} to "npc.flynnfairwind.greeting_whatsyour"
            play sound {_sound} with volume 3 and pitch 1 to player
  
        if clicked entity is a player:
            play sound "entity.experience_orb.pickup" with volume 3 and pitch 1 to player
            set metadata tag "islandExpeditions" of player to chest inventory with 3 rows named "Set sail for an Island Expedition!"
            set {_gui} to metadata tag "islandExpeditions" of player
            set {_azeriteCollect} to 36000

            set {_azerite} to 300000
            set {_barFill} to round(({_azerite}/{_azeriteCollect})*10, 0)*10
            
            if {_azerite} > {_azeriteCollect}:
                set {_azeriteTooltip} to {_azeriteCollect}
            else:
                set {_azeriteTooltip} to {_azerite}

            if {_azerite} >= 0.1*{_azeriteCollect}:
                if {_azerite} >= {_azeriteCollect}:
                    set {_tooltip} to "azeriteweekly_full"
                else:
                    set {_tooltip} to "azeriteweekly_%{_barFill}%"
            else:
                set {_tooltip} to "azeriteweekly"
            set slot 4 of {_gui} to book named " " with lore "%nl%%nl%%nl%     &fWeekly Quest%nl%     &7Collect Azerite on Island Expeditions.%nl% %nl% %nl%     <##fdd002>Azerite Gathered:     &f%{_azeriteTooltip}%/%{_azeriteCollect}%%nl% %nl% %nl% %nl%     <##fdd002>Reward:%nl%     &fî¨ <##a335ee>[Humming Azerite Heart]%nl%        î¦&f(3500 Azerite)"
            set slot 12 of {_gui} to diamond named "<##23fa02>Normal Difficulty" with lore "&7Click here to set sail for a <##00ff00>Normal%nl%&7difficulty Island Expedition.%nl% %nl%&7Enemies on this difficulty will have%nl%&fnormal &7amounts of health.%nl% %nl%&7Recommended Item Level: &f50%nl% %nl%&7Rewards:%nl%&8- &f600 Player EXP%nl%&8- &fî© <##00ff00>[Small Azerite Cluster]%nl%      &f(150 Azerite)" with nbt from "{""minecraft:custom_model_data"":{floats:[47.0f]}}"
            set slot 13 of {_gui} to diamond named "<##0382ff>Heroic Difficulty" with lore "&7Click here to set sail for a <##0070dd>Heroic%nl%&7difficulty Island Expedition.%nl% %nl%&7Enemies on this difficulty will have%nl%&fhigh &7amounts of health.%nl% %nl%&7Recommended Item Level: &f70%nl% %nl%&7Rewards:%nl%&8- &f1300 Player EXP%nl%&8- &fî± <##0070dd>[Glowing Azerite Crystal]%nl%      &f(300 Azerite)" with nbt from "{""minecraft:custom_model_data"":{floats:[48.0f]}}"
            set slot 14 of {_gui} to diamond named "<##ae38ff>Mythic Difficulty" with lore "&7Click here to set sail for a <##a335ee>Mythic%nl%&7difficulty Island Expedition.%nl% %nl%&7Choose this difficulty to face a%nl%&fchallenging &7Island Expedition.%nl% %nl%&7Recommended Item Level: &f100%nl% %nl%&7Rewards:%nl%&8- &f2000 Player EXP%nl%&8- &fî° <##0070dd>[Glowing Azerite Geode]%nl%      &f(450 Azerite)" with nbt from "{""minecraft:custom_model_data"":{floats:[49.0f]}}"
            set slot 16 of {_gui} to light blue stained glass pane named "&bPVP" with lore "&7Click here to set sail for a &fPVP%nl%&7Island Expedition and race against%nl%&7other players for Azerite.%nl% %nl%&7You can queue &fsolo &7or with a party%nl%&7of up to &ftwo &7players.%nl% %nl%&7Rewards:%nl%&8- &f1300 Player EXP%nl%&8- &fî± <##0070dd>[Glowing Azerite Crystal]%nl%      &f(300 Azerite)%nl% %nl%&7COMING IN 8.4.0:%nl%&7Tournament of Elements%nl% %nl%&câ Not Available"
            add "                                                        " to lore of slot 4 of {_gui}
            loop 6 times:
                add " " to lore of slot 4 of {_gui}
            set tooltip style of slot 4 of {_gui} to {_tooltip}
            set string tag "Difficulty" of custom nbt of slot 4 of {_gui} to "Normal"
            set string tag "Difficulty" of custom nbt of slot 5 of {_gui} to "Heroic"
            set string tag "Difficulty" of custom nbt of slot 6 of {_gui} to "Mythic"
            open {_gui} to player

on inventory close:
    if player's current inventory = metadata tag "islandExpeditions" of player:
        if cooldown "Flynn Fairwind-Farewell%player%" is finished:
            create cooldown "Flynn Fairwind-Farewell%player%" for 2 seconds
            set {_farewell} to a random integer between 1 and 7
            if {_farewell} = 1:
                set {_sound} to "npc.flynnfairwind.farewell_dontlookback"
            else if {_farewell} = 2:
                set {_sound} to "npc.flynnfairwind.farewell_eyesonthehorizon"
            else if {_farewell} = 3:
                set {_sound} to "npc.flynnfairwind.farewell_letsgetpaid"
            else if {_farewell} = 4:
                set {_sound} to "npc.flynnfairwind.farewell_nextround"
            else if {_farewell} = 5:
                set {_sound} to "npc.flynnfairwind.farewell_powderdry"
            else if {_farewell} = 6:
                set {_sound} to "npc.flynnfairwind.farewell_seeyouaround"
            else if {_farewell} = 7:
                set {_sound} to "npc.flynnfairwind.farewell_watchyourback"
            play sound {_sound} with volume 3 and pitch 1 to player
        clear metadata tag "islandExpeditions" of player

on inventory click:
    if player's current inventory = metadata tag "islandExpeditions" of player:
        cancel event
#To do:

#When difficulty is selected, play ship sail sound
#Send message: You are now queued for Island Expedition with (players from party)

on rightclick on gold block:
    if player's name = "Pehrek":
        AzeriteOreMine(player, event-block)

on place of gold block:
    set {_azeriteOreType::*} to "Shard", "Crystal" and "Chunk"
    set {_w} to a random element of {_azeriteOreType::*}
    set string tag "AzeriteVeinType" of custom nbt of event-block to {_w}

function AzeriteOreMine(p: player, ore: block):
    set {_typeOfOre} to string tag "AzeriteVeinType" of custom nbt of {_ore}

    if {_typeOfOre} = "crystal":
        set {_azerite} to 270
        set {_casttime} to 6 seconds
    else if {_typeOfOre} = "chunk":
        set {_azerite} to 190
        set {_casttime} to 4 seconds
    else if {_typeOfOre} = "shard":
        set {_azerite} to 110
        set {_casttime} to 2 seconds

    set {_distance} to 5
    set {_castTimeValue} to "%{_casttime}%"
    replace all " seconds" and " second" in {_castTimeValue} with ""
    set {_castTimeValue} to {_castTimeValue} parsed as number
    set {_originalCastTimeValue} to {_castTimeValue}
    
    if metadata value "cast" of {_p} is not set:
        set metadata value "casttimemax" of {_p} to {_casttime}
        set metadata value "mining" of {_p} to true
        set metadata value "cast" of {_p} to {_casttime}
        set {_break} to 0

        while metadata value "mining" of {_p} = true:
            if metadata value "channeling" of {_p} is set:
                clear metadata value "channeling" of {_p}
            if metadata value "cast" of {_p} is not set:
                clear metadata value "mining" of {_p}
                stop
            stop loop if distance between {_p} and {_ore} > {_distance}
            if {_casttime} > 0 seconds:
                set metadata value "casttimeleft" of {_p} to {_casttime}
                send action bar "Mining... %{_casttime}% " to {_p}
                if {_castTimeValue} is divisible by 1:
                    play sound "misc.mine_ore" with volume 2 and pitch 1 at {_p}
                    make {_p} swing their hand
                    add 1/{_originalCastTimeValue} to {_break}
                    make all players see damage of {_ore} as {_break}
                wait 0.1 seconds
                remove 0.1 seconds from {_casttime}
                remove 0.1 from {_castTimeValue}
            else:
                clear metadata value "mining" of {_p}
                send action bar "" to {_p}
    else:
        stop
    clear metadata value "mining" of {_p}
    clear metadata value "cast" of {_p}
    clear metadata value "casttime" of {_p}
    clear metadata value "casttimemax" of {_p}
    if {_casttime} > 0 seconds:
        send action bar "&cCancelled" to {_p}
        stop
    play sound "azerite.collect" with volume 2 and pitch 1 at {_p}
    send "<##fff200>+%{_azerite}% Azerite Collected <##e8ce81>from Azerite %{_typeOfOre}%" to {_p}
    set block at {_ore} to air

on damage:
    if metadata value "mining" of victim is set:
        clear metadata value "mining" of victim

#convert azerite variable to oldazerite

on TimeSkipEvent:
    set {_world} to event.getWorld()
    if isWorldIsland({_world}) = true:
        broadcast "ta"
        cancel event

on block break:
    if isWorldIsland(player's world) = true:
        cancel event

on block place:
    if isWorldIsland(player's world) = true:
        cancel event

on rightclick:
    if isWorldIsland(player's world) = true:
        cancel event
    if "%regions at player%" contains "IslandShipMap":
        cancel event

on leftclick:
    if "%regions at player%" contains "IslandShipMap":
        cancel event
on combust:
    if isWorldIsland(event-world) = true:
        cancel event

on region enter:
    if "%event-region%" contains "beachdocksship":
        if metadata value "AtDocks" of player is not set:
            set metadata value "AtDocks" of player to true
            seagullsAmbientSounds(player)

on region exit:
    wait 1 tick
    if "%regions at player%" does not contain "beachdocksship":
        clear metadata value "AtDocks" of player

on skript stop:
    load yaml "plugins/Skript/islandexpeditions/IslandList" as "IslandsClear"
    set {_islandList::*} to yaml list "Islands" in "IslandsClear"
    unload yaml "IslandsClear"

    loop {_islandList::*}:
        set {_instance} to loop-value
        set {_totalInstances} to getNewInstance(loop-value)

        if {_totalInstances} is set:
            loop {_totalInstances} times:
                deleteworld "%{_instance}%%loop-number%"

command /ieconfig [<string>] [<string>] [<string>] [<string>] [<integer>]:
    trigger:
        if player's name = "Pehrek":
            if arg-1 is set:
                if arg-2 is set:
                    if arg-3 is set:
                        if arg-4 is set:

                            set {_type} to arg-3
                            set {_island} to arg-1
                            set {_direction} to arg-4
                            load yaml "plugins/Skript/islandexpeditions/%arg-1%/Locations.yml" as "%arg-1%Locations-%player%"

                            if arg-2 = "addlocation":
                                set {_loc} to player's location
                                set yaml value "Locations.%{_type}%.%{_direction}%.%arg-5%.x" in "%arg-1%Locations-%player%" to x-coordinate of {_loc}
                                set yaml value "Locations.%{_type}%.%{_direction}%.%arg-5%.y" in "%arg-1%Locations-%player%" to y-coordinate of {_loc}
                                set yaml value "Locations.%{_type}%.%{_direction}%.%arg-5%.z" in "%arg-1%Locations-%player%" to z-coordinate of {_loc}
                                send "&aSet the location for &f%{_type}% &ain &f%{_direction}% &aIsland &f%arg-1% &ato &f%{_loc}%&a." to player
                            else if arg-2 = "addtotal":
                                set yaml value "TotalLocations.%{_type}%.%{_direction}%" in "%arg-1%Locations-%player%" to arg-5
                                send "&aSet the total locations for &f%{_type}% &ain &f%{_direction}% &aIsland &f%arg-1% &ato &f%arg-5%&a." to player
                            else if arg-2 = "border":
                                set yaml value "WorldBorderRadius" in "%arg-1%Locations-%player%" to arg-5
                                send "&aSet the border radius for Island &f%arg-1% &ato &f%arg-5%&a." to player
                            
                            save yaml "%arg-1%Locations-%player%"
                            unload yaml "%arg-1%Locations-%player%"

                        else:
                            send "&cArg-4 must be provided. (Longitude/Latitude)" to player
                    else:
                        send "&cArg-3 must be provided. (ShipAlly/ShipEnemy)" to player
                else:
                    send "&cArg-2 must be provided. (addlocation/addtotal/border)"
            else:
                send "&cArg-1 must be an Island Expedition map." to player
        else:
            send "&cYou cannot use this command." to player

command /addisland [<string>]:
    trigger:
        if player's name = "Pehrek":
            if arg-1 is set:
                load yaml "plugins/Skript/islandexpeditions/IslandList" as "IslandList"
                add arg-1 to yaml list "Islands" in "IslandList"
                save yaml "IslandList"
                unload yaml "IslandList"
                send "&aSuccessfully added &f%arg-1% &aas a new Island Expedition map."
            else:
                send "&cArg-1 must be an Island Expedition map." to player
        else:
            send "&cYou cannot use this command." to player

