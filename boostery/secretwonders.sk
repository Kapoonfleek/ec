on load:
	set {boostersecretwonders} to glass pane of unbreaking 10 named "&5Secret Wonders &9Booster" with lore "&9Booster%nl%&7Booster containing one or more cards.%nl%&7May contain exclusive cards from%nl%&7this set." with nbt from "{""minecraft:custom_data"":{""BoosterName"":""Secret Wonders"",""CardBooster"":1b}}"
	
	set {espeonkartasw} to magenta stained glass pane named "<##d48bc3>Espeon" with lore "&7Psychic" and "&7Level: &f0 &7| &7Exp: &f0%nl%&7Statistics:%nl%&7Intellect: &7■■■■■■■■■■ &7(<##59c1e3>0&7)%nl%&7Health: <##c0ff02>&7■■■■■■■■■■ &7(<##c0ff02>0&7)%nl%&7Damage: <##f74428>&7■■■■■■■■■■ &7(<##f74428>0&7)%nl%&7Resistance: <##ffef45>&7■■■■■■■■■■ &7(<##ffef45>0&7)%nl%&7Mobility: &f&7■■■■■■■■■■ &7(&f0&7)%nl%&7Utility: <##ae78d0>&7■■■■■■■■■■ &7(<##ae78d0>0&7)%nl%&7Crowd Control: <##58c3f5>&7■■■■■■■■■■ &7(<##58c3f5>0&7)%nl%&7Versatility: <##e3ebff>&7■■■■■■■■■■ &7(<##e3ebff>0&7)%nl%&7Mastery: <##f53b98>&7■■■■■■■■■■ &7(<##f53b98>0&7)%nl%&7Critical Hit: <##fca417>&7■■■■■■■■■■ &7(<##fca417>0&7)%nl%&7Element: <##d5ff57>&7■■■■■■■■■■ &7(<##d5ff57>0&7)%nl%&7Haste: <##19943e>&7■■■■■■■■■■ &7(<##19943e>0&7)%nl%&7Avoidance: <##2154ad>&7■■■■■■■■■■ &7(<##2154ad>0&7)" and "&7Element: <##d84af7>Psychic" and "&7Source: &fSecret Wonders" with nbt from "{""minecraft:custom_model_data"":{floats:[1.0f]},""minecraft:custom_data"":{""Id"":1,""Booster"":""Secret Wonders"",""Rarity"":""Common"",""Code"":""sw""}}"


# #5996f7 #f04f4f #f59c2f  #f759ba

on rightclick:
	set {_item} to 1 of player's held item
	if boolean tag "CardBooster" of custom nbt of {_item} = true:
		if string tag "BoosterName" of custom nbt of {_item} = "Secret Wonders":
			remove 1 of {_item} from player

			if {winterDelightPassLEVEL::%player%} >= 0:
				getMission(player, "Boostermania", "Boosteromania", 1)

			load yaml "plugins/Skript/playerdata/boosters/Secret Wonders/%uuid of player%.yml" as "Secret Wonders-%player%"
			set {_boostersOpened} to yaml value "Booster.Opened" in "Secret Wonders-%player%"
			add 1 to {_boostersOpened}
			set yaml value "Booster.Opened" in "Secret Wonders-%player%" to {_boostersOpened}

			add 1 to {otwboostery::%player%}
			boosterAchievements(player, "Secret Wonders")

			set {_cardLissandra} to cardItem(blue stained glass pane, "<##2a6fa1>Lissandra", 1, 1, "Secret Wonders", "sw", "Common", "Ice", 1)
			set lore of {_cardLissandra} to cardLore("Ice Witch", "<##add8e6>Ice", "Secret Wonders", "<##79f759>Common", 6, 4, 4, 2, 3, 10, 5, 7, 3, 9, 3, 1)

			set {_cardJetVac} to cardItem(white stained glass pane, "<##bbceef>Jet-Vac", 2, 2, "Secret Wonders", "sw", "Common", "Air", 2)
			set lore of {_cardJetVac} to cardLore("Sky Baron", "&fAir", "Secret Wonders", "<##79f759>Common", 4, 5, 6, 10, 1, 1, 8, 6, 7, 3, 8, 6)

			set {_cardCamo} to cardItem(green stained glass pane, "<##719b45>Camo", 3, 3, "Secret Wonders", "sw", "Common", "Nature", 1)
			set lore of {_cardCamo} to cardLore("Plant Dragon", "<##607c3c>Nature", "Secret Wonders", "<##79f759>Common", 9, 3, 4, 3, 4, 6, 9, 5, 4, 6, 10, 3)

			set {_cardTwistedFate} to cardItem(gray stained glass pane, "<##333549>Twisted Fate", 4, 4, "Secret Wonders", "sw", "Common", "Magic", 1)
			set lore of {_cardTwistedFate} to cardLore("Card Master", "<##512989>Magic", "Secret Wonders", "<##79f759>Common", 2, 6, 3, 7, 4, 7, 6, 10, 5, 4, 6, 9)

			set {_cardPopFizz} to cardItem(purple stained glass pane, "<##523186>Pop Fizz", 5, 5, "Secret Wonders", "sw", "Common", "Magic", 1)
			set lore of {_cardPopFizz} to cardLore("Mad Alchemist", "<##512989>Magic", "Secret Wonders", "<##79f759>Common", 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5)

			set {_cardSmeargle} to cardItem(white stained glass pane, "<##fff2d7>Smeargle", 6, 6, "Secret Wonders", "sw", "Common", "Fight", 6)
			set lore of {_cardSmeargle} to cardLore("Painter", "<##953301>Fight", "Secret Wonders", "<##79f759>Common", 5, 1, 3, 5, 10, 10, 7, 4, 1, 1, 8, 8)

			set {_cardTapuFini} to cardItem(cyan stained glass pane, "<##8d7aae>Tapu Fini", 7, 7, "Secret Wonders", "sw", "Common", "Water", 3)
			set lore of {_cardTapuFini} to cardLore("Land Spirit", "<##1ebbd7>Water", "Secret Wonders", "<##79f759>Common", 7, 2, 6, 2, 10, 1, 10, 6, 4, 6, 5, 1)

			set {_cardDelphox} to cardItem(red stained glass pane, "<##e53311>Delphox", 8, 8, "Secret Wonders", "sw", "Common", "Fire", 1)
			set lore of {_cardDelphox} to cardLore("Fire Fox", "<##ff4d00>Fire", "Secret Wonders", "<##79f759>Common", 3, 10, 6, 2, 3, 7, 4, 8, 10, 7, 5, 7)

			set {_cardUmbreon} to cardItem(black stained glass pane, "<##424744>Umbreon", 9, 9, "Secret Wonders", "sw", "Common", "Dark", 3)
			set lore of {_cardUmbreon} to cardLore("Night Huntress", "<##333333>Dark", "Secret Wonders", "<##79f759>Common", 3, 9, 3, 8, 1, 3, 4, 6, 10, 7, 8, 10)

			set {_cardPikachu} to cardItem(yellow stained glass pane, "<##f0d850>Pikachu", 10, 10, "Secret Wonders", "sw", "Rare", "Storm", 4)
			set lore of {_cardPikachu} to cardLore("Electric Mouse", "<##fffb05>Storm", "Secret Wonders", "<##5996f7>Rare", 3, 7, 2, 10, 1, 2, 5, 6, 7, 8, 10, 10)

			set {_cardSylveon} to cardItem(pink stained glass pane, "<##f6bec3>Sylveon", 11, 11, "Secret Wonders", "sw", "Super Rare", "Fairy", 1)
			set lore of {_cardSylveon} to cardLore("Weaves", "<##ff99bb>Fairy", "Secret Wonders", "<##f04f4f>Super Rare", 7, 5, 4, 3, 6, 9, 9, 5, 2, 6, 4, 4)

			set {_cardDiancie} to cardItem(pink stained glass pane, "<##e168c1>Diancie", 12, 12, "Secret Wonders", "sw", "Hyper Rare", "Fairy", 2)
			set lore of {_cardDiancie} to cardLore("Jewel Princess", "<##ff99bb>Fairy", "Secret Wonders", "<##f04f9d>Hyper Rare", 7, 7, 7, 2, 3, 6, 6, 8, 3, 6, 6, 1)

			set {_cardEcho} to cardItem(cyan stained glass pane, "<##074d73>Echo", 13, 13, "Secret Wonders", "sw", "Secret Rare", "Water", 6)
			set lore of {_cardEcho} to cardLore("Water Dragon", "<##1ebbd7>Water", "Secret Wonders", "<##bc5ae0>Secret Rare", 5, 8, 4, 4, 4, 8, 10, 9, 4, 8, 7, 2)

			set {_cardWolfgang} to cardItem(brown stained glass pane, "<##924b3a>Wolfgang", 14, 14, "Secret Wonders", "sw", "Secret Rare", "Water", 3)
			set lore of {_cardWolfgang} to cardLore("Werewolf Guitarist", "<##333333>Dark", "Secret Wonders", "<##bc5ae0>Secret Rare", 4, 8, 4, 9, 3, 3, 4, 6, 6, 6, 8, 4)

			chance of 10%:
				BoosterPackDrop(player, {_cardLissandra})
			chance of 10%:
				BoosterPackDrop(player, {_cardJetVac})
			chance of 10%:
				BoosterPackDrop(player, {_cardCamo})
			chance of 10%:
				BoosterPackDrop(player, {_cardTwistedFate})
			chance of 10%:
				BoosterPackDrop(player, {_cardPopFizz})
			chance of 10%:
				BoosterPackDrop(player, {_cardSmeargle})
			chance of 10%:
				BoosterPackDrop(player, {_cardTapuFini})
			chance of 10%:
				BoosterPackDrop(player, {_cardDelphox})
			chance of 10%:
				BoosterPackDrop(player, {_cardUmbreon})

			#RARE
			chance of 5%:
				set {_droppedRare} to true
				BoosterPackDrop(player, {_cardPikachu})

			#SUPER RARE
			chance of 3%:
				set {_droppedRare} to true
				BoosterPackDrop(player, {_cardSylveon})

			#HYPER RARE
			chance of 1%:
				set {_droppedRare} to true
				BoosterPackDrop(player, {_cardDiancie})

			#SECRET RARE
			chance of 0.5%:
				set {_droppedRare} to true
				BoosterPackDrop(player, {_cardEcho})
			chance of 0.5%:
				set {_droppedRare} to true
				BoosterPackDrop(player, {_cardWolfgang})
			
			
			if {_droppedRare} is not true:
				set {_pity} to yaml value "Booster.Pity" in "Secret Wonders-%player%"
				add 1 to {_pity}
				if {_pity} = 10:
					set {_pity} to 0
					set {_pityDrop} to true
				set yaml value "Booster.Pity" in "Secret Wonders-%player%" to {_pity}

				set {_x} to a random integer between 1 and 9
				if {_x} = 1:
					BoosterPackDrop(player, {_cardLissandra})
				else if {_x} = 2:
					BoosterPackDrop(player, {_cardJetVac})
				else if {_x} = 3:
					BoosterPackDrop(player, {_cardCamo})
				else if {_x} = 4:		
					BoosterPackDrop(player, {_cardTwistedFate})
				else if {_x} = 5:
					BoosterPackDrop(player, {_cardPopFizz})
				else if {_x} = 6:
					BoosterPackDrop(player, {_cardSmeargle})
				else if {_x} = 7:
					BoosterPackDrop(player, {_cardTapuFini})
				else if {_x} = 8:
					BoosterPackDrop(player, {_cardDelphox})
				else if {_x} = 9:
					BoosterPackDrop(player, {_cardUmbreon})
			else:
				set yaml value "Booster.Pity" in "Secret Wonders-%player%" to 0

			if {_pityDrop} is true:
				set {_randomRare} to a random integer between 1 and 100
				if {_randomRare} is between 1 and 50:
					set {_pityCard} to {_cardPikachu}
				else if {_randomRare} is between 51 and 80:
					set {_pityCard} to {_cardSylveon}
				else if {_randomRare} is between 81 and 90:
					set {_pityCard} to {_cardDiancie}
				else if {_randomRare} is between 91 and 95:
					set {_pityCard} to {_cardEcho}
				else if {_randomRare} is between 95 and 100:
					set {_pityCard} to {_cardWolfgang}
				BoosterPackDrop(player, {_pityCard})

				send formatted "&f[&2Booster&f] &aThis &awas your &510th booster &ain a row without at least a Rare rarity drop, meaning that %name of {_pityCard}% &ais a pity drop!" to player
				set {_pityDrops} to yaml value "Booster.Pity Drops" in "Secret Wonders-%player%"
				add 1 to {_pityDrops}
				set yaml value "Booster.Pity Drops" in "Secret Wonders-%player%" to {_pityDrops}

				add 1 to {pityDrops::%player%}

			save yaml "Secret Wonders-%player%"
			#<##1184e5>Riptide

function cardLore(title: string, element: string, booster: string, rarity: string, s1: integer, s2: integer, s3: integer, s4: integer, s5: integer, s6: integer, s7: integer, s8: integer, s9: integer, s10: integer, s11: integer, s12: integer) :: string:
	set {_squares} to "■■■■■■■■■■"
	set {_colourList::*} to "&7Health: <##c0ff02>", "&7Damage: <##f74428>", "&7Resistance: <##ffef45>", "&7Mobility: &f", "&7Utility: <##ae78d0>", "&7Crowd Control: <##58c3f5>", "&7Versatility: <##e3ebff>", "&7Mastery: <##f53b98>", "&7Critical Hit: <##fca417>", "&7Element: <##d5ff57>", "&7Haste: <##19943e>", "&7Avoidance: <##2154ad>"
	set {_lore} to "&7%{_title}%%nl%&7Statistics:"
	loop 12 times:
		set {_stat::*} to {_squares} split at ""
		if {_s%loop-number%} > 0:
			set {_stat::1} to "%{_colourList::%loop-number%}%%{_stat::1}%"
			set {_stat::%{_s%loop-number%}+1%} to "&7%{_stat::%{_s%loop-number%}+1%}%"
		else:
			set {_stat::1} to "&7%{_stat::1}%"
		set {_stat} to join {_stat::*} by ""
		set {_lore} to "%{_lore}%%nl%%{_stat}%"
	set {_lore} to "%{_lore}%%nl%&7Element: %{_element}%%nl%&7Source: &f%{_booster}%%nl%&7Rarity: %{_rarity}%"
	return {_lore}

function cardItem(base: item, name: string, id: integer, idGlobal: integer, booster: string, code: string, rarity: string, element: string, cmd: integer) :: item:
	set {_nbt} to "{""minecraft:custom_model_data"":{floats:[%{_cmd}%.0f]},""minecraft:custom_data"":{""Id"":%{_id}%,""Booster"":""%{_booster}%"",""Rarity"":""%{_rarity}%"",""Code"":""%{_code}%"",""Card"":""%unformatted {_name}%"",""Element"":""%{_element}%"",""IdGlobal"":%{_idGlobal}%}}"
	set {_card} to {_base} named {_name} with nbt from {_nbt}
	return {_card}

function BoosterPackDrop(p: player, card: item):
	set {_date} to data()
	
	set {_cardBoosterID} to string tag "Id" of custom nbt of {_card}
	set {_cardGlobalID} to string tag "IdGlobal" of custom nbt of {_card}
	set {_rarity} to string tag "Rarity" of custom nbt of {_card}
	set {_code} to string tag "Code" of custom nbt of {_card}
	set {_cardName} to string tag "Card" of custom nbt of {_card}
	set {_booster} to string tag "Booster" of custom nbt of {_card}

	if yaml "%{_booster}%-%{_p}%" is loaded:
		
		set {_cardDropped} to yaml value "Cards.%{_cardName}%" in "%{_booster}%-%{_p}%"
		add 1 to {_cardDropped}
		set yaml value "Cards.%{_cardName}%" in "%{_booster}%-%{_p}%" to {_cardDropped}

		if {_rarity} = "Common":
			if {_cardDropped} = 1:
				add "&8Dropped: %{_date}%" to lore of {_card}
				
		else:
			add "&8Dropped: %{_date}%" to lore of {_card}

	if {_p} can hold {_card}:
		give {_card} to {_p}
	else:
		drop {_card} at {_p}

	add 1 to {totalCardsDropped}

	if {_rarity} = "Common":
		send formatted "&f[&2Booster&f] &c%{_p}% &ajust dropped the <tooltip:%join lore of {_card} by nl%>%name of {_card}% &acard from the &5%{_booster}% &abooster!" to all players

		send "&f[&2Booster&f] &c%{_p}% &ajust dropped the %name of {_card}% &acard from the &5%{_booster}% &abooster!" to console
		log "%{_date}% [Booster] %{_p}% just dropped the %{_cardName}% card from the %{_booster}% booster!" to "logi/karty.log"

	else:
		send formatted "&f[&2Booster&f] &c%{_p}% &ajust dropped the %{_rarity} in lowercase% <tooltip:%join lore of {_card} by nl%>%name of {_card}% &acard from the &5%{_booster}% &abooster!" to all players
		
		if {_rarity} = "Rare":
			play sound "entity.dolphin.ambient" with volume 3 and pitch 1 to all players
		else if {_rarity} = "Super Rare":
			play sound "entity.blaze.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.dolphin.ambient" with volume 3 and pitch 1 to all players
		else if {_rarity} = "Hyper Rare":
			play sound "entity.wither.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.blaze.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.dolphin.ambient" with volume 3 and pitch 1 to all players
		else if {_rarity} = "Secret Rare":
			play sound "entity.wither.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.ender_dragon.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.blaze.ambient" with volume 3 and pitch 1 to all players
			play sound "entity.dolphin.ambient" with volume 3 and pitch 1 to all players

		send "&f[&2Booster&f] &c%{_p}% &ajust dropped the %{_rarity} in lowercase% %name of {_card}% &acard from the &5%{_booster}% &abooster!" to console
		log "%{_date}% [Booster] %{_p}% just dropped the %{_rarity} in lowercase% %{_cardName}% card from the %{_booster}% booster!" to "logi/karty.log"

	save yaml "%{_booster}%-%{_p}%"

function boosterAchievements(p: player, booster: string):
	achievement("otwboostery", {_p}, 50, "osiagniecie.50booster", "Otwórz 50 boosterów", "Karciarz", "Open 50 boosters", "Card Player")
	achievement("otwboostery", {_p}, 100, "osiagniecie.100booster", "Otwórz 100 boosterów", "Kolekcjoner Kart", "Open 100 boosters", "Card Collector")
	achievement("otwboostery", {_p}, 1000, "osiagniecie.1000booster", "Otwórz 1000 boosterów", "Boosteromaniak", "Open 1000 boosters", "Boostermaniac")
	achievement("otwboostery::sw", {_p}, 50, "osiagniecie.50boostersw", "Otwórz 50 boosterów %{_booster}%", "%{_booster}%: 50", "Open 50 %{_booster}% boosters", "%{_booster}%: 50")
	achievement("otwboostery::sw", {_p}, 100, "osiagniecie.100boostersw", "Otwórz 100 boosterów %{_booster}%", "%{_booster}%: 100", "Open 100 %{_booster}% boosters", "%{_booster}%: 100")
	achievement("otwboostery::sw", {_p}, 1000, "osiagniecie.1000boostersw", "Otwórz 1000 boosterów %{_booster}%", "%{_booster}%: 1000", "Open 1000 %{_booster}% boosters", "%{_booster}%: 1000")