import:
	kr.toxicity.model.api.BetterModel
	kr.toxicity.model.api.tracker.EntityTrackerRegistry
	kr.toxicity.model.api.tracker.Tracker
	kr.toxicity.model.api.tracker.TrackerModifier
	org.bukkit.Bukkit

#DEBUG
on rightclick:
	if player's tool is apple:
		set {_x} to player
		give {_x} gold nugget named "<##e8ce81>Heart of Earthcraft" with lore "<##fdd002>Item Level 280%nl%&fSoulbound to %player%%nl%&f+104 Health%nl%<##00ff00>+129 Critical Hit%nl%<##00ff00>+129 Haste%nl%<##00ff00>+129 Mastery%nl% %nl%<##00ff00>Equip: Harnesses the energy of raw%nl%<##00ff00>Azerite, awakening exceptional pieces%nl%<##00ff00>of armor that possess latent powers.%nl% %nl%<##fdd002>''A living symbol of hope, borne by the%nl%<##fdd002>champions of a dying planet. The fate%nl%<##fdd002>of Earthcraft will be shared by all its%nl%<##fdd002>children.''" with nbt from "{""minecraft:custom_model_data"":{floats:[10.0f]}}"
		play sound "azerite.cast" with volume 1 and pitch 1 at {_x}
		play sound "azerite.collect" with volume 1 and pitch 1 at {_x}
		send "<##e8ce81>[Heart of Earthcraft] <##fdd002>gains 88 Artifact Power." to {_x}
		send title "&f <##e8ce81>Heart of Earthcraft" with subtitle "     <##00ff00>Power Increased <##00ff00>to Level 1" to {_x} for 4 seconds with fade in 1.5 second and fade out 1.5 second
		send "<##00ff00>A new Heart of Earthcraft power is available." to {_x}

function AzeriteChannel(p: player, l: location):
	loop 40 times:
		set {_loc} to location of {_p}
		increase y-coordinate of {_loc} by 1.4
		set {_vec} to vector between {_loc} and {_l}
		loop round(distance between {_loc} and {_l}) / 0.5 times:
			set {_vec} to vector between {_loc} and {_l}
			set vector length of {_vec} to loop-value-2 * 0.5
			draw 1 of dust using dustOption((rgb 132, 175, 245), 1) at {_loc} ~ {_vec}
			draw 1 of dust using dustOption((rgb 242, 204, 121), 1) at {_loc} ~ {_vec}
		wait 2 ticks
		
function AzeriteBurst(p: player, l: location, l2: location):
	set {_vec} to vector between {_l} and {_l2}
	loop round(distance between {_l} and {_l2}) / 0.25 times:
		set {_vec} to vector between {_l} and {_l2}
		set vector length of {_vec} to loop-value * 0.25
		draw 1 of dust using dustOption((rgb 132, 175, 245), 1) at {_l} ~ {_vec}
		draw 1 of dust using dustOption((rgb 242, 204, 121), 1) at {_l} ~ {_vec}

function chamberOfHeartAmbience():
    set {_loc} to location(9112, -58, 1642, world "world")
    set {_locUp} to location(9112, -12, 1642, world "world")
    set {_locWide} to location(9112, -23.5, 1642, world "world")
    while online player count > 0:
        draw 90 end_rod particle at {_loc} with offset vector(5, 6, 5) with extra 0.01 with force
        draw 90 end_rod particle at {_locUp} with offset vector(6, 4, 6) with extra 0.01 with force
        draw 90 end_rod particle at {_locWide} with offset vector(24, 0, 24) with extra 0.01 with force
        draw 80 end_rod particle at location above {_locWide} with offset vector(19, 0, 19) with extra 0.01 with force
        draw 70 end_rod particle at location 2 above {_locWide} with offset vector(14, 0, 14) with extra 0.01 with force
        draw 60 end_rod particle at location 3 above {_locWide} with offset vector(11, 0, 11) with extra 0.01 with force
        wait 2 seconds

function HeartLevelup(p: player, n: number):
	stop
	add {_n} to {azerite::%{_p}%}
	if 50 >= {_n}:
		send " <##fdd002>You obtain: <##00ff00>[Tiny Azerite Splinter]<##fdd002>." to {_p}
	if {_n} > 50:
		if {_n} < 150:
			send " <##fdd002>You obtain: <##00ff00>[Small Azerite Shard]<##fdd002>." to {_p}
		else:
			if 200 >= {_n}:
				send " <##fdd002>You obtain: <##00ff00>[Small Azerite Cluster]<##fdd002>." to {_p}
			else:
				if {_n} <= 300:
					send " <##fdd002>You obtain: <##0070dd>[Glowing Azerite Crystal]<##fdd002>." to {_p}
				if {_n} > 300:
					if {_n} < 425:
						send " <##fdd002>You obtain: <##0070dd>[Glowing Azerite]<##fdd002>." to {_p}
					else:
						if {_n} < 500:
							send " <##fdd002>You obtain: <##0070dd>[Glowing Azerite Geode]<##fdd002>." to {_p}
						else:
							if {_n} < 651:
								send " <##fdd002>You obtain: <##a335ee>[Glowing Azerite Fragment]<##fdd002>." to {_p}
							else:
								if {_n} = 750:
									send " <##fdd002>You obtain: <##a335ee>[Radiant Azerite Core]<##fdd002>." to {_p}
								if {_n} = 3000:
									send " <##fdd002>You obtain: <##a335ee>[Humming Azerite Heart]<##fdd002>." to {_p}
	send "<##e8ce81>[Heart of Earthcraft] <##fdd002>gains %{_n}% Artifact Power." to {_p}
	play sound "azerite.collect" with volume 1 and pitch 1 to {_p}
	if 13 >= {heartlevel::%{_p}%}:
		if {heartlevel::%{_p}%} is between 0 and 7:
			set {_azerite} to 350 + {heartlevel::%{_p}%}*50
		else if {heartlevel::%{_p}%} = 8:
			set {_azerite} to 1050
		else if {heartlevel::%{_p}%} = 9:
			set {_azerite} to 1580
		else if {heartlevel::%{_p}%} = 10:
			set {_azerite} to 2370
		else if {heartlevel::%{_p}%} = 11:
			set {_azerite} to 3560
		else if {heartlevel::%{_p}%} = 12:
			set {_azerite} to 5350
		else if {heartlevel::%{_p}%} = 13:
			set {_azerite} to 8000			
	else:
		set {_azerite} to 10400
		loop ({heartlevel::%{_p}%}-14) times:
			set {_azerite} to ({_azerite}*1.3)/50
			set {_rawnumber} to rounded down {_azerite}
			set {_number} to {_azerite} - {_rawnumber}
			if {_number} > 0.45:
				set {_azerite} to (rounded up {_azerite})*50
			else:
				set {_azerite} to (rounded down {_azerite})*50
	if {azerite::%{_p}%} >= {_azerite}:
		if {heartlevel::%{_p}%} is not 0:
			remove {_azerite} from {azerite::%{_p}%}
			add 1 to {heartlevel::%{_p}%}
			play sound "azerite.cast" with volume 2 and pitch 1 at {_p}
			send title "&f <##e8ce81>Heart of Earthcraft" with subtitle "     <##00ff00>Power Increased <##00ff00>to Level %{heartlevel::%{_p}%}%" to {_p} for 4 seconds with fade in 1 second and fade out 1 second
			add 2 to {itemlevelheart::%{_p}%}
			set {_bonushealth} to 104 + (rounded down (1.2*({heartlevel::%{_p}%}-1)))
			set {_bonusstaty} to 129 + (rounded down (1.4*({heartlevel::%{_p}%}-1)))
			if boolean tag "HeartOfEarthcraft" of custom nbt of {_p}'s chestplate is true:
				if string tag "Soulbound" of custom nbt of {_p}'s chestplate = {_p}'s name:
					set line 1 of lore of {_p}'s chestplate to "<##fdd002>Item Level %{itemlevelheart::%{_p}%}%"
					set line 3 of lore of {_p}'s chestplate to "&f+%{_bonushealth}% Health"
					set line 4 of lore of {_p}'s chestplate to "<##00ff00>+%{_bonusstaty}% Critical Hit"
					set line 5 of lore of {_p}'s chestplate to "<##00ff00>+%{_bonusstaty}% Haste"
					set line 6 of lore of {_p}'s chestplate to "<##00ff00>+%{_bonusstaty}% Mastery"
					if {_newpower} = 6:
						set line 9 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 13:
						set line 10 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 21:
						set line 11 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 29:
						set line 12 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 36:
						set line 13 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 45:
						set line 14 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 54:
						set line 15 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 61:
						set line 16 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 70:
						set line 17 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 78:
						set line 18 of lore of {_p}'s chestplate to "&f- A new power is available."
					if {_newpower} = 86:
						set line 19 of lore of {_p}'s chestplate to "&f- A new power is available."		
			else:
				loop all items in the inventory of {_p}:
					if loop-item is a gold nugget:
						if name of loop-item = "<##e8ce81>Heart of Earthcraft" or "<##e8ce81>Serce Earthcrafta":
							if line 30 of lore of loop-value contains {_p}'s name:
								set line 1 of lore of loop-value to "<##fdd002>Item Level %{itemlevelheart::%{_p}%}%"
								set line 3 of lore of loop-value to "&f+%{_bonushealth}% Health"
								set line 4 of lore of loop-value to "<##00ff00>+%{_bonusstaty}% Critical Hit"
								set line 5 of lore of loop-value to "<##00ff00>+%{_bonusstaty}% Haste"
								set line 6 of lore of loop-value to "<##00ff00>+%{_bonusstaty}% Mastery"

#HEART LEVELUP SCREEN -> send player title "&f <##e8ce81>Heart of Earthcraft" with subtitle "     <##00ff00>Power Increased <##00ff00>to Level 95" for 4 seconds with 1 second fade in and 1 second fade out
on rightclick:
	if player's tool is redstone:
		if name of player = "Pehrek":
			send " " to player
			send " " to player
			send "&f&lAzerite" to player
			send "&7The blood of Earthcraft crystalizes into chunks of Azerite, an extremely potent and powerful material." to player
			send " " to player
			send "&7When you first acquire the &f<##e8ce81>Heart of Earthcraft&7, it begins at &fLevel 1 &7and &fItem Level 280&7." to player
			send "&7You are able to empower your &f&f<##e8ce81>Heart of Earthcraft &7by collecting &f&nAzerite&r&7, which will grant you Artifact Power. Artifact Power will &fautomatically be applied &7to your &f<##e8ce81>Heart of Earthcraft&7, so you won't have to worry about your inventory being full." to player
			send " " to player
			send "&7Upon reaching certain amounts of Artifact Power, your &f<##e8ce81>Heart of Earthcraft &7will level up and gain +2 item levels. Each level of your &f<##e8ce81>Heart of Earthcraft &7will require an increasing amount of Artifact Power:" to player
			send "   &7• The increase of AP needed from levels 1 to 10 on the &f<##e8ce81>Heart of Earthcraft &7is linear." to player
			send "   &7• After level 10, the AP needed to level up is 30%% higher than the previous level, which quickly%nl%&7   sets a soft-cap on how fast you can level up your &f<##e8ce81>Heart of Earthcraft&7." to player
			send " " to player
			send "&7There is much more to this complex system, please check out the following pages to learn more about the full system:" to player
			send " " to player
			send " " to player
#<##a0dffa>	
#1 - poziom 1
#2 - poziom 6
#3 - poziom 13
#4 - poziom 21
#5 - poziom 32
#6 - poziom 45
#7 - poziom 58
#8 - poziom 69
#9 - poziom 82
#10 - poziom 101
#11 - poziom 122
#12 - poziom 145

#1 - poziom 1
#2 - poziom 6
#3 - poziom 13
#4 - poziom 21
#5 - poziom 29
#6 - poziom 36
#7 - poziom 45
#8 - poziom 54
#9 - poziom 61
#10 - poziom 70
#11 - poziom 78
#12 - poziom 86

on rightclick:
	if player's tool's name contains "Heart of Earthcraft":
		if player's tool is a gold nugget:
			if clicked player does not exist:
				if metadata value "ECEngaged" of player is not set:
					if line 30 of lore of player's tool contains player's name:
						set {_id} to line 19 of lore of {karta::%player%}
						loop 12 times:
							if line (7 + loop-number) of lore of player's tool does not contain "Unlocked at" or "Odblokowuje się":
								if {trait::%{_id}%::%loop-number%} is set:
									if line (7 + loop-number) of lore of player's tool does not contain {trait::%{_id}%::%loop-number%}:
										set line (7 + loop-number) of lore of player's tool to "&f%{%uncolored {trait::%{_id}%::%loop-number%}%}% %{trait::%{_id}%::%loop-number%}%"
								else:
									if {language::%player%} = "English":
										set line (7 + loop-number) of lore of player's tool to "&f- A new power is available."
									else:
										set line (7 + loop-number) of lore of player's tool to "&f- Nowa moc jest dostępna."
						set {_heart} to player's tool
						if player's chestplate is not set:
							set player's chestplate to {_heart}
						else:
							if player can hold player's chestplate:
								give player's chestplate to player
							else:
								drop player's chestplate at player
							set player's chestplate to {_heart}
						set {_r} to a random integer between 1 and 3
						play sound "azerite.trait_select" with volume 5 and pitch 1 to player
						if {heartlvlupclaim::%player%} is true:
							clear {heartlvlupclaim::%player%}
							set line 1 of lore of player's tool to "<##fdd002>Item Level %{itemlevelheart::%player%}%"
							set line 3 of lore of player's tool to "&f+%{_bonushealth}% Health %{itemlevelheart::%player%}%"
							set line 4 of lore of player's tool to "<##00ff00>+%{_bonusstaty}% Critical Hit %{itemlevelheart::%player%}%"
							set line 5 of lore of player's tool to "<##00ff00>+%{_bonusstaty}% Haste %{itemlevelheart::%player%}%"
							set line 6 of lore of player's tool to "<##00ff00>+%{_bonusstaty}% Mastery %{itemlevelheart::%player%}%"
						set {_health::*} to (uncolored line 3 of lore of player's tool) split at " "
						replace all "+" in {_health::1} with ""
						set {_health} to {_health::1} parsed as number
						set {_staty::*} to (uncolored line 4 of lore of player's tool) split at " "
						replace all "+" in {_staty::1} with ""
						set {_staty::1} to {_staty::1} parsed as number
						set {healthheart::%player%} to {_health}
						set {statyheart::%player%} to {_staty::1}
						add {_health} to {health::%player%}
						add {_staty::1} to {criticalhit::%player%}
						add {_staty::1} to {haste::%player%}
						add {_staty::1} to {mastery::%player%}
						set max health of player to 25 + ({zdrowie::%{_id}%}/5) + ({health::%player%}/5)
						set scaled health of player to 20
						remove 1 of player's tool from player
					else:
						set {_r::*} to line 30 of lore of player's tool split at " "
						if {language::%player%} = "English":
							send "&cThis item is soulbound to &f%{_r::3}%&c." to player
							play sound "block.glass.break" with volume 1 and pitch 2 to player
						else:
							send "&cTen przedmiot należy do &f%{_r::3}%&c." to player
							play sound "block.glass.break" with volume 1 and pitch 2 to player
				else:
					if {language::%player%} = "English":
						send "&c&oYou cannot equip the Heart of Earthcraft in combat." to player
					else:
						send "&c&oNie możesz założyć Serca Earthcrafta w walce." to player
on armor change:
	if old armor item is a gold nugget:
		if new armor item is not a gold nugget:
			if name of old armor item contains "Heart of Earthcraft" or "Serce Earthcrafta":
				if metadata value "ECEngaged" of player is not set:
					remove {healthheart::%player%} from {health::%player%}
					remove {statyheart::%player%} from {criticalhit::%player%}
					remove {statyheart::%player%} from {haste::%player%}
					remove {statyheart::%player%} from {mastery::%player%}
					clear {healthheart::%player%}
					clear {statyheart::%player%}
					set max health of player to 25 + ({health::%player%}/5)
					set scaled health of player to 20		
on region exit:
	if "%region%" contains "ChamberofHeart":
		stop sound "ambient.chamber_of_heart" for player

on region enter:
	if "%region%" contains "Spawn":
		if {poziom::%player%} >= 50:
			if player's name = "Pehrek" or "nishikoru":
				magniDialogueVoiced(player, "ahthere", 1 second)
	if "%region%" contains "ChamberOfHeart":
		wait 1 tick
		play sound "ambient.chamber_of_heart" with volume 5 and pitch 1 to player
		if player's name = "Pehrek" or "nishikoru":
			magniDialogueVoiced(player, "introduction", 1 second)
		set {_loc} to location(9112.5, -41, 1643.5, world "world")
		load chunk at location(9105, -42, 1627, world "world")
		load chunk at location(9120, -42, 1660, world "world")
		load chunk at location(9105, -42, 1661, world "world")
		load chunk at location(9118, -42, 1628, world "world")
		loop all entities in radius 40 around {_loc} where [double tag "AzeriteScale" of custom nbt of input is set]:
			set {_model} to BetterModel.model("azeritecrystal").get().getOrCreate(loop-entity, TrackerModifier.builder().shadow(false).build())
			if {_model}.scaler().scale({_model}) != 3:
				set {_scale} to double tag "AzeriteScale" of custom nbt of loop-entity
				{_model}.scaler({_model}.scaler().multiply({_scale}))
			{_model}.registry().reload()
		while "%regions at player%" contains "ChamberofHeart":
			stop loop if "%regions at player%" does not contain "ChamberofHeart"
			wait 1 second
			add 1 to {_seconds}
			if {_seconds} is divisible by 143:
				play sound "ambient.chamber_of_heart" with volume 5 and pitch 1 to player
	else if "%region%" contains "MineLower":
		if {poziom::%player%} >= 50:
			if cooldown "MagniEntranceDialogue%player%" is finished:
				create cooldown "MagniEntranceDialogue%player%" for 1 minute
				spawn 1 pig at player with nbt from "{Silent:1b,Invulnerable:1b}"
				set {_magni} to last spawned pig
				disguise {_magni} as saved disguise "Magni"
				magniPathfind(player, {_magni})
				set generic movement speed attribute of {_magni} to 0.4
				set boolean tag "RemoveOnReset" of custom nbt of {_magni} to true
				if player's name = "Pehrek" or "nishikoru":
					magniDialogueVoiced(player, "entrance", 1 second)
				wait 1 tick
				entityTitle({_magni}, "the Speaker", -0.35)
				

function magniPathfind(p: player, magni: entity):
    while "%regions at {_p}%" contains "SpawnArea":
        if "%regions at {_p}%" contains "ChamberofHeart":
            stop loop
        stop loop if {_magni} is not alive
        stop loop if {_p} is not alive
        if distance between {_magni} and {_p} > 30:
            teleport {_magni} to {_p}
        make {_magni} pathfind to {_p}       
        wait 1 second
    kill {_magni} 

function magniDialogueVoiced(p: player, text: string, wait: timespan = 0 seconds):
	wait {_wait}
	if {_text} = "ahthere":
		set {_dialogue} to "Ah, there ye ar, %{_p}%. I must have words with ye! Meet me in the Chamber o' Heart."
		play sound "npc.magnibronzebeard.heart_ahthere" with volume 5 and pitch 1 to {_p}
		set {_extraSound} to true
	else if {_text} = "entrance":
		set {_dialogue} to "The entrance tae the chamber is this way. Come on!"
		play sound "npc.magnibronzebeard.heart_theentrance" with volume 5 and pitch 1 to {_p}
		set {_extraSound} to true
	else if {_text} = "introduction":
		set {_dialogue} to "No need tae panic! Though I suppose my entrance was a bit abrupt... The name's Magni Bronzebeard."
		set {_citizens} to Bukkit.getPluginManager().getPlugin("Citizens")
		set {_magni} to {_citizens}.getNPCRegistry().getById(6748).getEntity()
		play sound "npc.magnibronzebeard.heart_introduction" with volume 5 and pitch 1 on {_magni}
		dialogue({_dialogue}, (location at {_magni}), 0 seconds, 0 seconds, {_p})
		spawnQuestMarker({_p}, {_magni})
		set metadata value "MagniInteraction%{_p}%" of {_magni} to "QuestReady"
	else if {_text} = "theplanet":
		set {_dialogue} to "Earthcraft calls tae ye, champion. She offers a gift... one born of her own essence."
		play sound "npc.magnibronzebeard.heart_theplanet" with volume 5 and pitch 1 to {_p}
	else if {_text} = "thevery":
		set {_dialogue} to "The very Heart of Earthcraft!"
		play sound "npc.magnibronzebeard.heart_thevery" with volume 5 and pitch 1 to {_p}
	else if {_text} = "infuse":
		set {_dialogue} to "Infuse this amulet with power...it might be the only way to save her!"
		play sound "npc.magnibronzebeard.heart_infuse" with volume 5 and pitch 1 to {_p}
	portraitDialogue({_p}, "", "Magni Bronzebeard", {_dialogue})

	if {_extraSound} = true:
		play sound "block.wooden_button.click_on" with volume 5 and pitch 2 to {_p}
		play sound "entity.item.pickup" with volume 5 and pitch 0 to {_p}

function magniDialogue(p: player, dialogue: string, wait: timespan = 0 seconds):
	wait {_wait}
	portraitDialogue({_p}, "", "Magni Bronzebeard", {_dialogue})
	play sound "block.wooden_button.click_on" with volume 5 and pitch 2 to {_p}
	play sound "entity.item.pickup" with volume 5 and pitch 0 to {_p}

on rightclick on a player:
	if metadata value "MagniInteraction%player%" of clicked player = "QuestReady":
		set metadata value "MagniInteraction%player%" of clicked player to "Ask"
		set {_dialogue} to "I can hear the cries o' the world beneath my feet. The planet trembles in pain! We must find a way tae ease its sufferin'..."
		magniDialogue(player, {_dialogue})
		wait 3 seconds
		send formatted "&7(CTRL) &f&l💬 &fWhat does Earthcraft want of me, Magni? &9(Play cinematic)" to player
		play sound "entity.item.pickup" with volume 5 and pitch 1 to player

on press of sprint key:
	if metadata value "MagniInteraction%player%" of (target entity of player) = "Ask":
		chamberCinematic(player)
		magniDialogueVoiced(player, "theplanet", 2.5 seconds)
		magniDialogueVoiced(player, "thevery", 15 seconds)
		magniDialogueVoiced(player, "infuse", 20 seconds)

function chamberCinematic(p: player):
	send "&9(For an optimal cinematic experience, please enable F1.)" to {_p}
	play sound "music.chamberofheart" with volume 5 and pitch 1 to {_p}
	wait 10 ticks
	set {_point::1} to location(9101.610, -42, 1658.129, world "world", -122.7, -10)
	set {_point::2} to location(9096.445, -33.50789, 1624.809, world "world", -35.4, -10)

	set {_point::3} to location(9112.481, -40.61875, 1662.2, world "world", 0.5, 5.3)
	set {_point::4} to location(9112.484, -37.643, 1653.806, world "world", 0.7, 32)

	set {_point::5} to location(9112.838, -26.8, 1643.346, world "world", 103.2, -83.9)
	set {_point::6} to location(9112.838, -41, 1643.346, world "world", 28.1, -90)

	set {_point::7} to location(9112.384, -41, 1665.3, world "world", -179.1, 2.1)
	set {_point::8} to location(9112.478, -41.5, 1659.720, world "world", -179.8, -27.5)

	set {_point::9} to location(9112.5, -11.8, 1644, world "world", 131.5, 67.0)
	set {_point::10} to location(9112.5, -27, 1644, world "world", -131.5, 67.0)

	set {_point::11} to location(9101.064, -26.8, 1639.947, world "world", -47.3, 34)
	set {_point::12} to location(9111.052, -41, 1661.542, world "world", -162.1, -16.8)

	set {_point::13} to location(9109.941, -40, 1658, world "world", -65.4, -17)

	set {_point::14} to location(9112.5, -39.34, 1657.3, world "world", 2.8, 8.7)
	set {_point::15} to location(9112.533, -24.8, 1632.781, world "world", 1.7, 26.9)

	set {_point::16} to location(9137, -52, 1650, world "world", 0, 90)

	set {_id} to random integer between 0 and 999999999999

	set {_idPlayer} to random integer between 0 and 999999999999
	set {_idPlayer2} to random integer between 0 and 999999999999
	set {_uuid} to a random uuid

	set {_properties} to "%{_p}.getPlayerProfile().getProperty("textures")%"
	replace all "Property[name=textures" and "value=" and "," and "]" in {_properties} with ""
	set {_properties::*} to {_properties} split at "signature="

	set {_texture} to {_properties::1}
	set {_signature} to {_properties::2}

	#spawn fake player named ({_p}'s name) with skin named "%{_texture}%,%{_signature}%" at {_p} for {_p} with id {_idPlayer} and uuid {_uuid}

	spawnCinematicEntity({_p}, {_id}, {_point::1})
	
	set {_xDif} to (x-coordinate of {_point::2}) - (x-coordinate of {_point::1})
	set {_yDif} to (y-coordinate of {_point::2}) - (y-coordinate of {_point::1})
	set {_zDif} to (z-coordinate of {_point::2}) - (z-coordinate of {_point::1})
	set {_yawDif} to (yaw of {_point::2}) - (yaw of {_point::1})
	set {_pitchDif} to (pitch of {_point::2}) - (pitch of {_point::1})
	
	set {_steps} to 300
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::1})-{_yaw} and pitch (pitch of {_point::1})-{_pitch} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}


	remove fake entity with id {_id} for {_p}
	#remove fake entity with id {_idPlayer} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::3})
	spawn fake player named ({_p}'s name) with skin named "%{_texture}%,%{_signature}%" at {_point::7} for {_p} with id {_idPlayer} and uuid {_uuid}

	set {_yawDif} to (yaw of {_point::4}) - (yaw of {_point::3})
	set {_pitchDif} to (pitch of {_point::4}) - (pitch of {_point::3})
	set {_yDif} to (y-coordinate of {_point::4}) - (y-coordinate of {_point::3})
	set {_zDif} to (z-coordinate of {_point::4}) - (z-coordinate of {_point::3})
	set {_steps} to 200
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_xDifPlayer} to (x-coordinate of {_point::8}) - (x-coordinate of {_point::7})
	set {_yDifPlayer} to (y-coordinate of {_point::8}) - (y-coordinate of {_point::7})
	set {_zDifPlayer} to (z-coordinate of {_point::8}) - (z-coordinate of {_point::7})
	set {_yawDifPlayer} to (yaw of {_point::8}) - (yaw of {_point::7})
	set {_pitchDifPlayer} to (pitch of {_point::8}) - (pitch of {_point::7})

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	set {_yawPlayer} to {_yawDifPlayer}/{_steps}
	set {_pitchPlayer} to {_pitchDifPlayer}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by 0 {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::3})-{_yaw} and pitch (pitch of {_point::3})-{_pitch} for {_p}
		move entity with id {_idPlayer} by {_xDifPlayer}/{_stepsDif} {_yDifPlayer}/{_stepsDif} {_zDifPlayer}/{_stepsDif} for {_p}
		rotate entity with id {_idPlayer} with yaw (yaw of {_point::7})-{_yawPlayer} and pitch (pitch of {_point::7})+{_pitchPlayer} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}
		remove {_yawDif}/{_steps} from {_yawPlayer}
		remove {_pitchDif}/{_steps} from {_pitchPlayer}

	remove fake entity with id {_id} for {_p}
	remove fake entity with id {_idPlayer2} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::5})

	set {_xDif} to (x-coordinate of {_point::6}) - (x-coordinate of {_point::5})
	set {_yDif} to (y-coordinate of {_point::6}) - (y-coordinate of {_point::5})
	set {_zDif} to (z-coordinate of {_point::6}) - (z-coordinate of {_point::5})
	set {_yawDif} to (yaw of {_point::6}) - (yaw of {_point::5})
	set {_pitchDif} to (pitch of {_point::6}) - (pitch of {_point::5})

	set {_xDifHeart} to (x-coordinate of {_point::10}) - (x-coordinate of {_point::9})
	set {_yDifHeart} to (y-coordinate of {_point::10}) - (y-coordinate of {_point::9})
	set {_zDifHeart} to (z-coordinate of {_point::10}) - (z-coordinate of {_point::9})
	set {_yawDifHeart} to (yaw of {_point::10}) - (yaw of {_point::9})
	set {_pitchDifHeart} to (pitch of {_point::10}) - (pitch of {_point::9})
	
	set {_steps} to 150
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	set {_yawHeart} to {_yawDifHeart}/{_steps}
	set {_pitchHeart} to {_pitchDifHeart}/{_steps}

	set {_idHeart} to random integer between 0 and 999999999999
	spawnCinematicEntity({_p}, {_idHeart}, {_point::9}, false)
	set {_heartItem} to gold nugget with nbt from "{""minecraft:custom_model_data"":{floats:[10.0f]}}"
	apply equippable component to {_heartItem}:
		slot: chestplate slot
		equip_sound: "item.armor.equip_gold"
		asset_id: "heartofearthcraft"
		dispensable: true
		swappable: true
		damage_on_hurt: false
	fake {_idHeart}'s equipment slot "CHEST" to {_heartItem} for {_p}
	azeriteHumCinematic({_p}, {_point::8})
	cinematicAzeriteVFX({_steps}, {_point::9}, {_point::10})

	wait 5 ticks
	cinematicAzeriteVFX({_steps}, {_point::9}, {_point::8}, 2.75 seconds)
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::5})-{_yaw} and pitch (pitch of {_point::5})-{_pitch} for {_p}

		move entity with id {_idHeart} by {_xDifHeart}/{_stepsDif} {_yDifHeart}/{_stepsDif} {_zDifHeart}/{_stepsDif} for {_p}
		rotate entity with id {_idHeart} with yaw (yaw of {_point::9})-{_yawHeart} and pitch (pitch of {_point::9})-{_pitchHeart} for {_p}

		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}

		remove {_yawDifHeart}/{_steps} from {_yawHeart}
		remove {_pitchDifHeart}/{_steps} from {_pitchHeart}	

	remove fake entity with id {_id} for {_p}

	spawnCinematicEntity({_p}, {_id}, {_point::11})

	set {_xDifHeart} to (x-coordinate of {_point::8}-0.25) - (x-coordinate of {_point::10})
	set {_yDifHeart} to (y-coordinate of {_point::8}) - (y-coordinate of {_point::10})
	set {_zDifHeart} to (z-coordinate of {_point::8}) - (z-coordinate of {_point::10})
	set {_yawDifHeart} to (yaw of {_point::7}) - (yaw of {_point::10})
	set {_pitchDifHeart} to (pitch of {_point::7}) - (pitch of {_point::10})

	set {_yawHeart} to {_yawDifHeart}/{_steps}
	set {_pitchHeart} to {_pitchDifHeart}/{_steps}

	set {_xDif} to (x-coordinate of {_point::13}) - (x-coordinate of {_point::12})
	set {_yDif} to (y-coordinate of {_point::13}) - (y-coordinate of {_point::12})
	set {_zDif} to (z-coordinate of {_point::13}) - (z-coordinate of {_point::12})
	set {_yawDif} to (yaw of {_point::13}) - (yaw of {_point::12})
	set {_pitchDif} to (pitch of {_point::13}) - (pitch of {_point::12})

	set {_x} to 0
	set {_steps} to 230
	set {_stepsDif} to {_steps}/4096

	set {_steps2} to 230-160
	set {_stepsDif2} to {_steps2}/4096

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_idHeart} by {_xDifHeart}/{_stepsDif} {_yDifHeart}/{_stepsDif} {_zDifHeart}/{_stepsDif} for {_p}
		rotate entity with id {_idHeart} with yaw (yaw of {_point::10})-{_yawHeart} and pitch (pitch of {_point::10})-{_pitchHeart} for {_p}

		wait 1 tick if {_x} is divisible by 2
		
		remove {_yawDifHeart}/{_steps} from {_yawHeart}
		remove {_pitchDifHeart}/{_steps} from {_pitchHeart}
		if {_x} = 110:
			remove fake entity with id {_id} for {_p}
			spawnCinematicEntity({_p}, {_id}, {_point::12})
		else if {_x} > 160:
			move entity with id {_id} by {_xDif}/{_stepsDif2} {_yDif}/{_stepsDif2} {_zDif}/{_stepsDif2} for {_p}
			rotate entity with id {_id} with yaw (yaw of {_point::12})-{_yaw} and pitch (pitch of {_point::12})-{_pitch} for {_p}
			remove {_yawDif}/{_steps2} from {_yaw}
			remove {_pitchDif}/{_steps2} from {_pitch}
	remove fake entity with id {_id} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::14})
	
	set {_xDif} to (x-coordinate of {_point::15}) - (x-coordinate of {_point::14})
	set {_yDif} to (y-coordinate of {_point::15}) - (y-coordinate of {_point::14})
	set {_zDif} to (z-coordinate of {_point::15}) - (z-coordinate of {_point::14})
	set {_yawDif} to (yaw of {_point::15}) - (yaw of {_point::14})
	set {_pitchDif} to (pitch of {_point::15}) - (pitch of {_point::14})
	
	set {_steps} to 350
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::14})-{_yaw} and pitch (pitch of {_point::14})-{_pitch} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}

	remove fake entity with id {_id} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::16})
	set {_pot} to potion effect of blindness of tier 20 without particles for 2 seconds
	add {_pot} to potion effects of {_p}
	wait 2 seconds

	remove fake entity with id {_id} for {_p}
	remove fake entity with id {_idPlayer} for {_p}
	remove fake entity with id {_idHeart} for {_p}
	set camera of {_p} to entity with id (entity id of {_p})
	stop sound "music.chamberofheart" for {_p}

	grantPlayerHeartOfEC({_p})

function grantPlayerHeartOfEC(p: player):
	#If yaml value is not set
	send " " to {_p}
	send mini message from "           <gradient:#A770EF:#CF8BF3:#FDB99B><b>✨ NEW CONTENT UNLOCKED" to {_p}
	send " " to {_p}
	send "<#A770EF>* &f   <##e8ce81>&nHeart of Earthcraft" to {_p}
	send " " to {_p}
	send "<#A770EF>* <#FDB99B>>> &7The &f <##e8ce81>Heart of Earthcraft &7is an artifact medallion, entrusted to only the worthiest of heroes by &f &bMagni Bronzebeard&7." to {_p}
	send " " to {_p}
	send "<#A770EF>* <#FDB99B>>> &7The &f <##e8ce81>Heart of Earthcraft &7grants the ability to unlock <##CF8BF3>Azerite Traits &7on exceptional pieces of armor called <##a335ee>Azerite Armor&7." to {_p}
	send " " to {_p}
	send "<#A770EF>* <#FDB99B>>> &7When you first acquire the &f <##e8ce81>Heart of Earthcraft&7, it begins at <##CF8BF3>Level 1 &7and <##fdd002>Item Level 60&7." to {_p}
	send {_msg} to {_p}
	send " " to {_p}
	play sound "entity.item.pickup" with volume 5 and pitch 1 to {_p}

	set {_nbt} to "{""minecraft:custom_model_data"":{floats:[10.0f]}}"
	give {_p} gold nugget named "<##e8ce81>Heart of Earthcraft" with lore "<##fdd002>Item Level 280%nl%&fSoulbound to %{_p}%%nl%&f+104 Health%nl%<##00ff00>+129 Critical Hit%nl%<##00ff00>+129 Haste%nl%<##00ff00>+129 Mastery%nl% %nl%<##00ff00>Equip: Harnesses the energy of raw%nl%<##00ff00>Azerite, awakening exceptional pieces%nl%<##00ff00>of armor that possess latent powers.%nl% %nl%<##fdd002>''A living symbol of hope, borne by the%nl%<##fdd002>champions of a dying planet. The fate%nl%<##fdd002>of Earthcraft will be shared by all its%nl%<##fdd002>children.''" with nbt from {_nbt}
	play sound "azerite.cast" with volume 5 and pitch 1 to {_p}
	play sound "azerite.collect" with volume 5 and pitch 1 to {_p}

	#set {_azerite} to "You are able to empower your <##e8ce81>Heart of Earthcraft &fby collecting  <##e8ce81>Azerite&f, which will grant you <##e8ce81>Artifact Power&f."

function spawnCinematicEntity(p: player, id: integer, loc: location, camera: boolean = true):
	spawn fake armor stand at {_loc} for {_p} with id {_id}
        
	set {_meta} to metadata packet with id {_id}

	add data from "invisible true" to {_meta}
	add data from "stand marker true" to {_meta}
	send packet {_meta} to {_p}
	if {_camera} = true:
		set camera of {_p} to entity with id {_id}

function cinematicAzeriteVFX(stepsMax: integer, loc1: location, loc2: location, wait: timespan = 0 seconds):
	wait {_wait}
	set {_steps} to 0
	create a new custom dust_color_transition particle with:
		count: 1
		velocity: outwards
		force: true
		data: dustTransition(light blue, yellow, 0.75)
	set {_particle} to last created particle
	set {_sphere} to a sphere of radius 0.8
	set particle of {_sphere} to {_particle}
	set {_loc} to {_loc1}
	set {_stepsMax} to {_stepsMax} - 50 if {_wait} = 0 seconds
	set {_loc} to location 2 behind {_loc} if {_wait} != 0 seconds
	while {_steps} < {_stepsMax}:
		set {_y} to 0 if {_y} = 45
		set {_xDifHeart} to (x-coordinate of {_loc2}) - (x-coordinate of {_loc1})
		set {_yDifHeart} to (y-coordinate of {_loc2}) - (y-coordinate of {_loc1})
		set {_zDifHeart} to (z-coordinate of {_loc2}) - (z-coordinate of {_loc1})
		increase {_loc}'s x-coordinate by {_xDifHeart}/{_stepsMax}
		increase {_loc}'s y-coordinate by {_yDifHeart}/{_stepsMax}
		increase {_loc}'s z-coordinate by {_zDifHeart}/{_stepsMax}
		if {_wait} = 0 seconds:
			draw shape {_sphere} at {_loc} for 2 ticks if {_steps} is divisible by 3
		set {_v} to vector 1, 0, 1
		set {_v2} to vector 0.5, 0, 0.5
		set {_v3} to vector 0.5, 0, 0.5
		rotate {_v} around y-axis by {_y}
		rotate {_v2} around y-axis by {_y}
		rotate {_v3} around y-axis by {_y}*-1
		set {_v4} to vector 0.75, 0, 0.75
		set {_v5} to vector 0.75, 0, 0.75
		rotate {_v4} around y-axis by {_y}
		rotate {_v5} around y-axis by {_y}*-1
		add 8 to {_y}
		draw 1 of dust using dustOption(light blue, 1) at {_loc} ~ {_v}
		draw 1 of dust using dustOption(light blue, 0.5) at {_loc} ~ {_v2}
		draw 1 of dust using dustOption(light blue, 0.5) at {_loc} ~ {_v3}
		draw 1 of dust using dustOption(light blue, 0.75) at {_loc} ~ {_v4}
		draw 1 of dust using dustOption(light blue, 0.75) at {_loc} ~ {_v5}
		draw 1 of dust using dustOption(yellow, 1) at {_loc} ~ {_v} with offset vector(0.5, 0, 0.5)
		add 1 to {_steps}
		wait 2 ticks if {_steps} is divisible by 3

function azeriteHumCinematic(p: player, loc: location):
	play sound "azerite.hum" with volume 5 and pitch 1 to {_p}
	wait 8 seconds
	play sound "azerite.hum" with volume 5 and pitch 1 to {_p}
	wait 1.75 seconds
	stop sound "azerite.hum" for {_p}
	play sound "azerite.cast" with volume 5 and pitch 1 to {_p}
	wait 2 ticks
	play sound "azerite.trait_select" with volume 5 and pitch 1 to {_p}
	play sound "azerite.cast" with volume 5 and pitch 1 to {_p}
	loop 5 times:
		draw 60 of dust using dustOption(light blue, 1) at location above {_loc} with offset vector(1, 1, 1) with extra 0.01 with force
		draw 30 of dust using dustOption(yellow, 1) at location above {_loc} with offset vector(1, 1, 1) with extra 0.01 with force
		wait 4 ticks