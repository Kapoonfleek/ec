#LAVA BURST
on rightclick:
	if clicked block exists:
		if metadata value "MoltenLava%player%" of clicked block is set:
			make player see block at clicked block as magma block
	if boolean tag "Lava Burst" of custom nbt of player's tool = true:
		if name of player's tool = "<##b03228>Lava Burst":
			cancel event
			if {kartaname::%player%} = "Ghazan":
				if CanUseAbility(player) != false:
					if metadata value "Rain of Lava" of {_p} is true:
						stop
					set {_target} to Target(player, 100, false)
					if {_target} is set:
						if metadata value "Lava Surge" of player is not true:
							if cooldown "LavaBurst%player%" is finished:
								set {_id} to line 19 of lore of {karta::%player%}
								set {_pospiech} to Haste(player)
								set {_casttime} to "%round((2/{_pospiech}), 1)% seconds" parsed as timespan
								set {_cd} to "%8/{_pospiech}% seconds" parsed as timespan
								if {_target} is alive:
									if metadata value "cast" of player is not set:
										play sound "skill.ghazan.lava_burst_precast" with volume 2 and pitch 1 to player
										set metadata value "casting" of player to true
										set metadata value "cast" of player to {_casttime}
										while metadata value "casting" of player = true:
											if metadata value "cast" of player is not set:
												clear metadata value "casting" of player
												stop
											if player can not see {_target}:
												clear metadata value "casting" of player
												stop
											if {_casttime} > 0 seconds:
												send action bar "Casting... %{_casttime}%" to player
												wait 0.1 seconds
												remove 0.1 seconds from {_casttime}
											else:
												clear metadata value "casting" of player
												send action bar "" to player
												stop loop
									else:
										stop
									clear metadata value "casting" of player
									clear metadata value "cast" of player
									stop sound "skill.ghazan.lava_burst_precast" for player
									if {_casttime} > 0 seconds:
										send action bar "&cInterrupted" to player
										stop

									if string tag "Talents;Row 2" of custom nbt of {karta::%player%} = "Flow of Power":
										set {_chance} to 4
										if string tag "Talents;Row 5" of custom nbt of {karta::%player%} = "Further Beyond":
											set {_chance} to 6
										chance of {_chance}%:
											set {_ascDuration} to 6
											if getTrait(player, "Mountains will Fall") is set:
												add 2 to {_ascDuration}
											if boolean tag "Constellation;Let the World Watch" of custom nbt of {karta::%player%} is set:
												set {_ascendanceDuration} to "%{_ascDuration}*1.33% seconds" parsed as timespan
											else:
												set {_ascendanceDuration} to "%{_ascDuration}% seconds" parsed as timespan
											Ascendance(player, {_ascendanceDuration})

									if metadata value "Ascendance" of player is not set:
										set the cooldown of player's held item for player to {_cd}
										create cooldown "LavaBurst%player%" for {_cd}

									AbilityUse(player, "Lava Burst")
									LavaBurst(player, {_target}, 1, "Lava Burst", false)
									if metadata value "Lava Wave" of player is set:
										clear metadata value "Lava Wave" of player
										LavaWave(player, {_target})
									if metadata value "Master Heritage Lava Spread" of player > 0:
										MasterHeritageLavaSpread(player, {_target})
									stop
							else: 
								cancel event
								if {tekstcd::%player%} = true:
									set {_cdd} to cooldown "LavaBurst%player%"
									send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
								stop
						else:
							LavaSurge(player, {_target})
			else:
				send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	#RAIN OF LAVA
	else if boolean tag "Rain of Lava" of custom nbt of player's tool is set:
		if name of player's tool = "<##b03228>Rain of Lava":
			cancel event
			if {kartaname::%player%} = "Ghazan":
				if CanUseAbility(player) != false:
					set {_id} to line 19 of lore of {karta::%player%}
					set {_pospiech} to Haste(player)
					set {_cd} to "%300/{_pospiech}% seconds" parsed as timespan
					set {_cdd} to {_cd}
					set {_wait} to 12
					if string tag "Talents;Row 1" of custom nbt of {karta::%player%} = "Unrivaled Finesse":
						add 1.5 seconds to {_wait}
					
					if cooldown "Rain of Lava%player%" is finished:
						create cooldown "Rain of Lava%player%" for {_cd}
						set the cooldown of player's held item for player to {_cd}
						set metadata value "cast" of player to true
						AbilityUse(player, "Rain of Lava")
						if string tag "Talents;Row 5" of custom nbt of {karta::%player%} = "Skytear":
							set {_tick} to 0.5 seconds
						else:
							set {_tick} to 1 seconds
						set {_rain} to "%{_tick}%"
						replace all " seconds" and " second" in {_rain} with ""

						set {_lore} to "&8Ultimate Ability%nl%&fInstant cast%nl%&7Cooldown:  &f%{_cdd}%%nl%&7Use: &fRMB%nl%<##b03228>Ghazan creates a display of his skill,%nl%<##b03228>throwing himself in the air for &f%{_RoLduration}% sec<##b03228>.%nl%<##b03228>During this spell, Ghazan continously%nl%<##b03228>fires &f <##d14d43>Lava Burst <##b03228>at nearby enemies%nl%<##b03228>every &f%{_rain}% sec<##b03228>, prioritizing enemies inside%nl%&f <##d14d43>Molten Lava<##b03228>."
						loop all items in player's inventory:
							if boolean tag "Rain of Lava" of custom nbt of loop-item = true:
								set lore of loop-item to {_lore}
								
						if boolean tag "Constellation;Unstoppable Heat" of custom nbt of {karta::%player%} is set:
							set {_crit} to CriticalHit(player)
							set {_shield} to 10 + {primarystat::%player%}/8 + {utility::%player%}/16 + {versatility::%player%}/48

							chance of {_crit}%:
								set {_shield} to {_shield}*GhazanCritDamage(player)

							set {_loreShield} to "&f <##d14d43>Rain of Lava <##b03228>can no longer be interrupted.%nl%<##b03228>You gain a &f%{_shield}% HP <##d14d43> Shield <##b03228>for the duration%nl%<##b03228>of &f <##d14d43>Rain of Lava<##b03228>."
							
							set {_shieldNumber} to Shield(player, player, {_shield} + 0.00, "Unstoppable Heat", "<##b03228>", {_loreShield}, 0, true, true)

						set metadata value "Rain of Lava" of player to true
						WildfireDuration(player)
						WildfireSpin(player)

						if string tag "Talents;Row 2" of custom nbt of {karta::%player%} = "Lava Will Rain":
							set {_bonusIntellect} to 20
							if string tag "Talents;Row 5" of custom nbt of {karta::%player%} = "Further Beyond":
								add 20 to {_bonusIntellect}
							set {_ascDuration} to 8
							if getTrait(player, "Mountains will Fall") is set:
								add 2 to {_ascDuration}
							if boolean tag "Constellation;Let the World Watch" of custom nbt of {karta::%player%} is set:
								set {_ascendanceDuration} to "%{_ascDuration}*1.33% seconds" parsed as timespan
							else:
								set {_ascendanceDuration} to "%{_ascDuration}% seconds" parsed as timespan
							add {_bonusIntellect} to {primarystat::%player%}

						while metadata value "Rain of Lava" of player is true:
							stop loop if metadata value "Rain of Lava" of player is not true
							if boolean tag "Constellation;Unstoppable Heat" of custom nbt of {karta::%player%} is not set:
								stop loop if metadata value "cast" of player is not true
							loop all entities in radius 60 around player:
								if boolean tag "ECMob" of custom nbt of loop-entity is set:
									if loop-entity is alive:
										if metadata value "ECPulled" of loop-entity is set:
											set {_enemyPulled::*} to {_enemyPulled::*} and loop-entity
											if metadata value "MoltenLava%player%" of block under loop-entity is set:
												set {_enemyMoltenLava::*} to {_enemyMoltenLava::*} and loop-entity
										else:
											set {_enemyNotInCombat::*} to {_enemyNotInCombat::*} and loop-entity
							if size of {_enemyMoltenLava::*} >= 1:
								set {_target} to a random element of {_enemyMoltenLava::*}
							else:
								if size of {_enemyPulled::*} >= 1:
									set {_target} to a random element of {_enemyPulled::*}
								else:
									set {_target} to {_enemyNotInCombat::1}
							LavaBurst(player, {_target}, 1, "Rain of Lava", false, {_bonusDamage})
							if {_shield} is set:
								draw 8 falling lava particle at location above player with offset vector(1.25, 0.5, 1.25) with extra 0.015
							if boolean tag "Constellation;Splintered Lava" of custom nbt of {karta::%player%} is set:
								if metadata value "Lava Surge" of player is set:
									LavaSurge(player, {_target})
							clear {_enemyPulled::*}
							clear {_enemyMoltenLava::*}
							clear {_enemyNotInCombat::*}
							add rollingLava(player) to {_bonusDamage}
							wait {_tick}
						clear metadata value "cast" of player

						set {_igneousHail} to statTrait(player, "Ghazan", "Igneous Hail")
						if {_igneousHail} > 0:
							set {_igneousHail} to {_igneousHail}*(metadata value "IgneousHailCrits" of player)
							IgneousHail(player, {_igneousHail})

						if string tag "Talents;Row 2" of custom nbt of {karta::%player%} = "Lava Will Rain":
							remove {_bonusIntellect} from {primarystat::%player%}
							Ascendance(player, {_ascendanceDuration})

						if {_shieldNumber} is set:
							shieldExpire(player, {_shieldNumber})
					else: 
						cancel event
						if {tekstcd::%player%} = true:
							if cooldown "CdTextOverlap%player%" is finished:
								create cooldown "CdTextOverlap%player%" for 2 ticks
								set {_cdd} to cooldown "Rain of Lava%player%"
								send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
						stop
			else:
				send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	#MOLTEN LAVA
	else if boolean tag "Molten Lava" of custom nbt of player's tool = true:
		if name of player's tool = "<##b03228>Molten Lava":
			cancel event
			if {kartaname::%player%} = "Ghazan":
				if CanUseAbility(player) != false:
					if cooldown "moltenlava%player%" is finished:
						set {_id} to line 19 of lore of {karta::%player%}
						set {_pospiech} to Haste(player)
						#IGNEOUS POTENTIAL
						loop {_loreheart::*}:
							loop-value contains "Igneous Potential":
								add (0.25*{trait::Ghazan::Igneous Potential::%player%}) to {_cdred}
						set {_cd} to "%(15-{_cdred})/{_pospiech}% seconds" parsed as timespan
						set {_cdd} to (15-{_cdred})/{_pospiech}
						set {_radius} to 2 + ({crowdcontrol::%player%}/40)
						if distance between player and target block < 7:
							create cooldown "moltenlava%player%" for {_cd}
							AbilityUse(player, "Molten Lava")
							set the cooldown of player's held item for player to {_cd}
							MoltenLava(player, {_radius}, {_cdd}, {_pospiech}, false, player)
					else: 
						cancel event
						if {tekstcd::%player%} = true:
							set {_cdd} to cooldown "moltenlava%player%"
							send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
						stop
			else:
				send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
				play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if boolean tag "Ascendance" of custom nbt of player's tool is set:
		if name of player's tool = "<##b03228>Ascendance":
			cancel event
			if {kartaname::%player%} = "Ghazan":
				if CanUseAbility(player) != false:
					if string tag "Talents;Row 2" of custom nbt of {karta::%player%} = "Ascendance":
						set {_pospiech} to Haste(player)
						if string tag "Talents;Row 5" of custom nbt of {karta::%player%} = "Further Beyond":
							set {_baseCd} to 330
						else:
							set {_baseCd} to 360
						set {_cd} to "%{_baseCd}/{_pospiech}% seconds" parsed as timespan
						set {_cdd} to {_baseCd}/{_pospiech}
						LoreUpdate(player, "Ascendance", {_lore})
						if cooldown "Ascendance%player%" is finished:
							set cooldown "Ascendance%player%" to {_cd}
							AbilityUse(player, "Ascendance")
							set {_ascDuration} to 18
							if getTrait(player, "Mountains will Fall") is set:
								add 2 to {_ascDuration}
							if boolean tag "Constellation;Let the World Watch" of custom nbt of {karta::%player%} is set:
								set {_ascendanceDuration} to "%{_ascDuration}*1.33% seconds" parsed as timespan
							else:
								set {_ascendanceDuration} to "%{_ascDuration}% seconds" parsed as timespan
							Ascendance(player, {_ascendanceDuration})
							set {_sec} to seconds of {_ascendanceDuration}
							set {_lore} to "&8Ultimate Ability%nl%&fInstant cast%nl%&7Cooldown:  &f%{_cd}%%nl%&7Use: &fRMB%nl%<##b03228>Transform into a &f <##d14d43>Lava Ascendant <##b03228>for &f%{_sec}% sec<##b03228>,%nl%<##b03228>removing the cooldown on &f <##d14d43>Lava Burst <##b03228>and%nl%<##b03228>increasing the damage of &f <##d14d43>Lava Burst <##b03228>by an%nl%<##b03228>amount equal to your <##d14d43> Critical Strike <##b03228>chance.%nl% %nl%<##b03228>When you transform into the &f <##d14d43> Lava Ascendant,%nl%<##b03228>instantly cast a &f <##d14d43>Lava Burst <##b03228>at all enemies%nl%<##b03228>affected by your &f <##d14d43>Molten Lava<##b03228>, and refresh%nl%<##b03228>your &f <##d14d43>Molten Lava <##b03228>durations."
						else: 
							cancel event
							if {tekstcd::%player%} = true:
								set {_cdd} to cooldown "Ascendance%player%"
								send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
							stop
					else:
						send "&8[&6Earthcraft&8] &6You don't have the required talent to use this ability." to player
						play sound "block.glass.break" with volume 3 and pitch 0 to player
			else:
				send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
	else if boolean tag "Lava Wave" of custom nbt of player's tool = true:
		cancel event
		if {kartaname::%player%} = "Ghazan":
			if name of player's tool = "<##b03228>Lava Wave":
				if CanUseAbility(player) != false:
					set {_target} to Target(player, 100, false)
					if {_target} is set:
						if string tag "Talents;Row 3" of custom nbt of {karta::%player%} = "Lava Wave":
							if cooldown "Lava Wave%player%" is finished:
								set cooldown "Lava Wave%player%" to 1 minute
								set the cooldown of player's held item for player to 1 minute
								AbilityUse(player, "Lava Wave")
								set {_l} to location 0.3 blocks below player's head
								set {_l} to location 0.4 blocks right of {_l}
								set {_v} to vector between {_l} and {_target}'s head
								set {_lore} to "&8Basic Ability%nl%&fInstant cast%nl%&7Cooldown: &8 &f1 minute%nl%&7Use: &fRMB%nl%<##b03228>Blast your target with a &f <##d14d43>Lava Wave<##b03228>, which%nl%<##b03228>deals &f%{_damage}% <##ff3014>Lava <##b03228>damage <##b03228>and applies &f <##d14d43>Molten Lava%nl%<##b03228>upon reaching its target.%nl% %nl%<##b03228>Your next &f <##d14d43>Lava Burst <##b03228>will also hit all targets%nl%<##b03228>affected by &f <##d14d43>Molten Lava <##b03228>for &f80%% <##b03228>of normal%nl%<##b03228>damage."
								loop all items in player's inventory:
									if boolean tag "Lava Wave" of custom nbt of loop-item = true:
										set lore of loop-item to {_lore}
								loop round(distance between {_l} and {_target}) / 0.85 times:
									set {_v} to vector between {_l} and {_target}'s head
									set vector length of {_v} to loop-value * 0.85
									draw 1 of lava at {_l} ~ {_v}
									set {_shape} to a spherical sector of radius 0.5 and angle 90 degrees
									set particle of {_shape} to landing lava
									draw {_shape} at {_l} ~ {_v}
									draw 1 flame particle at {_l} ~ {_v} offset by a random vector
									draw 1 dripping lava particle at {_l} ~ {_v} offset by a random vector
									draw 1 smoke particle at {_l} ~ {_v} offset by a random vector
									play sound "block.lava.pop" with volume 1.2 and pitch 1 at {_l} ~ {_v}
									wait 1 tick
								set metadata value "Lava Wave" of player to true
								if boolean tag "Constellation;Master Heritage" of custom nbt of {karta::%player%} is set:
									set metadata value "Master Heritage Lava Spread" of player to 2
								set {_pospiech} to Haste(player)
								if {_loreheart::*} is set:
									loop {_loreheart::*}:
										loop-value contains "Igneous Potential":
											add (0.25*{trait::Ghazan::Igneous Potential::%player%}) to {_cdred}
								set {_cd} to "%(15-{_cdred})/{_pospiech}% seconds" parsed as timespan
								set {_cdd} to (15-{_cdred})/{_pospiech}
								set {_radius} to 2 + ({crowdcontrol::%player%}/40)
								MoltenLava(player, {_radius}, {_cdd}, {_pospiech}, true, {_target})
								set {_crit} to CriticalHit(player)
								set {_damage} to 3 + ({damage::%player%}/35) + ({versatility::%player%}/105) + ({primarystat::%player%}/17.5)
								chance of {_crit}%:
									if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%player%} is set:
										PerpetualBurn(player)
									set {_damage} to {_damage}*GhazanCritDamage(player)
								play sound "skill.ghazan.lava_burst_impact" with volume 4 and pitch 2 at location of {_target}
								set {_target}'s last damage cause to sweep attack
								set metadata value "LastDamageCause" of {_target} to "<##b03228>Lava Wave"
								set metadata value "LastDamageCauseLore" of {_target} to {_lore}
								set metadata value "Element" of player to "Lava"
								make player damage {_target} by {_damage}*2
							else: 
								cancel event
								if {tekstcd::%player%} = true:
									set {_cdd} to cooldown "Lava Wave%player%"
									send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
								stop
						else:
							send "&8[&6Earthcraft&8] &6You don't have the required talent to use this ability." to player
							play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if boolean tag "Lavakeeper" of custom nbt of player's tool = true:
		cancel event
		if string tag "Talents;Row 3" of custom nbt of {karta::%player%} = "Lavakeeper":
			if CanUseAbility(player) != false:
				if cooldown "Lavakeeper%player%" is finished:
					set cooldown "Lavakeeper%player%" to 1 minute
					set the cooldown of player's held item for player to 1 minute
					set {_pospiech} to Haste(player)
					set {_casttime} to "%round((1.5/{_pospiech}), 1)% seconds" parsed as timespan
					set {_casttext} to {_casttime}
					loop all items in player's inventory:
						if boolean tag "Lavakeeper" of custom nbt of loop-item = true:
							set lore of loop-item to "&8Basic Ability%nl%&f%{_casttime}% cast%nl%&7Cooldown: &8 &f1 minute%nl%&7Use: &fRMB%nl%<##b03228>Charge yourself with heat, causing%nl%<##b03228>your next &f2 &f <##d14d43>Lava Burst <##b03228>casts to deal%nl%&f190%% <##b03228>increased damage."
					play sound "skill.ghazan.lava_burst_precast" with volume 2 and pitch 1 to player
					if metadata value "cast" of player is not set:
						play sound "skill.ghazan.lava_burst_precast" with volume 2 and pitch 1 to player
						set metadata value "casting" of player to true
						set metadata value "cast" of player to {_casttime}
						while metadata value "casting" of player = true:
							if metadata value "cast" of player is not set:
								clear metadata value "casting" of player
								stop
							if {_casttime} > 0 seconds:
								send action bar "Casting... %{_casttime}%" to player
								wait 0.1 seconds
								remove 0.1 seconds from {_casttime}
							else:
								clear metadata value "casting" of player
								send action bar "" to player
								stop loop
					else:
						stop
					clear metadata value "casting" of player
					clear metadata value "cast" of player
					stop sound "skill.ghazan.lava_burst_precast" for player
					if {_casttime} > 0 seconds:
						send action bar "&cInterrupted" to player
						stop
					AbilityUse(player, "Lavakeeper")
					draw 20 flame at location above player with offset vector(0.32, 0.71, 0.32) with extra 0.027
					draw 50 dripping lava at location above player with offset vector(0.4, 0.6, 0.4) with extra 0.03
					draw 10 smoke at location above player with offset vector(0.3, 0.5, 0.3) with extra 0.02
					set metadata value "Lavakeeper" of player to 2
					set {_pitch} to 0
					loop 8 times:
						play sound "block.lava.pop" with volume 1.3 and pitch {_pitch} at location of player
						add 0.12 to {_pitch}
						wait 1 tick
					play sound "skill.ghazan.lava_burst_impact" with volume 1.3 and pitch 2 at location of player
					if boolean tag "Constellation;Master Heritage" of custom nbt of {karta::%player%} is set:
						set metadata value "Master Heritage Lava Spread" of player to 2
				else: 
					cancel event
					if {tekstcd::%player%} = true:
						set {_cdd} to cooldown "Lavakeeper%player%"
						send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
					stop
		else:
			send "&8[&6Earthcraft&8] &6You don't have the required talent to use this ability." to player
			play sound "block.glass.break" with volume 3 and pitch 0 to player
	else if boolean tag "Lavafury" of custom nbt of player's tool = true:
		if name of player's tool = "<##b03228>Lavafury":
			set {_target} to Target(player, 100, false)
			if {_target} is set:
				if string tag "Talents;Row 3" of custom nbt of {karta::%player%} = "Lavafury":
					if CanUseAbility(player) != false:
						if cooldown "Lavafury%player%" is finished:
							set {_pospiech} to Haste(player)
							set {_casttime} to "%round((1.5/{_pospiech}), 1)% seconds" parsed as timespan
							set {_casttext} to {_casttime}
							if metadata value "cast" of player is not set:
								play sound "skill.ghazan.lava_burst_precast" with volume 2 and pitch 1 to player
								set metadata value "casting" of player to true
								set metadata value "cast" of player to {_casttime}
								while metadata value "casting" of player = true:
									if metadata value "cast" of player is not set:
										clear metadata value "casting" of player
										stop
									if player can not see {_target}:
										clear metadata value "casting" of player
										stop
									if {_casttime} > 0 seconds:
										send action bar "Casting... %{_casttime}%" to player
										wait 0.1 seconds
										remove 0.1 seconds from {_casttime}
									else:
										clear metadata value "casting" of player
										send action bar "" to player
										stop loop
							else:
								stop
							clear metadata value "casting" of player
							clear metadata value "cast" of player
							stop sound "skill.ghazan.lava_burst_precast" for player
							if {_casttime} > 0 seconds:
								send action bar "&cInterrupted" to player
								stop
							set cooldown "Lavafury%player%" to 1 minute
							set the cooldown of player's held item for player to 1 minute
							AbilityUse(player, "Lavafury")
							set {_l} to location 0.7 blocks below player's head
							set {_l} to location 0.4 blocks right of {_l}
							set {_v} to vector between {_l} and {_target}'s head
							loop round(distance between {_l} and {_target}) / 0.85 times:
								set {_v} to vector between {_l} and {_target}'s head
								set vector length of {_v} to loop-value * 0.85
								draw 1 of lava at {_l} ~ {_v}
								if loop-value is divisible by 3:
									set {_shape} to a spherical sector of radius 0.5 and angle 90 degrees
									set particle of {_shape} to smoke
									draw {_shape} at {_l} ~ {_v}
								draw 1 block particle using stone at {_l} ~ {_v} offset by a random vector
								draw 1 flame particle at {_l} ~ {_v} offset by a random vector
								draw 1 lava particle at {_l} ~ {_v} offset by a random vector
								if loop-value is divisible by 2:
									play sound "block.lava.pop" with volume 1.2 and pitch 0.1 at {_l} ~ {_v}
								if loop-value is divisible by 3:
									play sound "block.lava.pop" with volume 1.2 and pitch 1 at {_l} ~ {_v}
								wait 1 tick
							if boolean tag "Constellation;Splintered Lava" of custom nbt of {karta::%player%} is set:
								set {_lavafuryStacks} to 4
								set {_LFBonus} to 60
							else:
								set {_lavafuryStacks} to 3
								set {_LFBonus} to 20
							set metadata value "Lavafury" of player to {_lavafuryStacks}
							play sound "skill.ghazan.lava_burst_impact" with volume 1.3 and pitch 0 at location of player
							set {_crit} to CriticalHit(player)
							set {_damage} to 5 + ({damage::%player%}/18) + ({versatility::%player%}/36) + ({primarystat::%player%}/9)
							if boolean tag "Constellation;Master Heritage" of custom nbt of {karta::%player%} is set:
								set metadata value "Master Heritage Lava Spread" of player to 2
							chance of {_crit}%:
								if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%player%} is set:
									PerpetualBurn(player)
								set {_damage} to {_damage}*GhazanCritDamage(player)
							set {_lore} to "&8Basic Ability%nl%&f%{_casttext}% cast%nl%&7Cooldown: &8 &f1 minute%nl%&7Use: &fRMB%nl%<##b03228>Hurls a hot lava rock at the target,%nl%<##b03228>dealing &f%{_damage}% <##ff3014>Lava <##b03228>damage and causing your%nl%<##b03228>next &f%{_lavafuryStacks}% &f <##d14d43>Molten Lava <##b03228>ticks to generate a%nl%&f <##d14d43>Lava Surge <##b03228>and deal &f%{_LFBonus}%%% <##b03228>increased%nl%<##b03228>damage."
							loop all items in player's inventory:
								if boolean tag "Lavafury" of custom nbt of loop-item = true:
									set lore of loop-item to {_lore}
							set {_target}'s last damage cause to sweep attack
							set metadata value "LastDamageCause" of {_target} to "<##b03228>Lavafury"
							set metadata value "LastDamageCauseLore" of {_target} to {_lore}
							set metadata value "Element" of player to "Lava"
							make player damage {_target} by {_damage}*2
						else: 
							cancel event
							if {tekstcd::%player%} = true:
								set {_cdd} to cooldown "Lavafury%player%"
								send "<##b03228>You must wait &f%{_cdd}%<##b03228> to use this ability." to player
							stop
				else:
					send "&8[&6Earthcraft&8] &6You don't have the required talent to use this ability." to player
					play sound "block.glass.break" with volume 3 and pitch 0 to player
		else:
			send "&8[&6Earthcraft&8] &6You don't have the required card selected to use this ability." to player
		
function LavaWave(p: player, target: entity):
	wait 1 tick
	loop all entities in radius 100 around {_p}:
		if boolean tag "ECMob" of custom nbt of loop-entity is set:
			if metadata value "MoltenLava%{_p}%" of block under loop-entity is set:
				LavaBurst({_p}, loop-entity, 0.8, "Lava Burst", false)
				add 1 to {_targets}
	if boolean tag "Constellation;Splintered Lava" of custom nbt of {karta::%{_p}%} is set:
		LavaWaveHasteBuff({_p}, {_targets})

function LavaWaveHasteBuff(p: player, targets: integer):
	if metadata value "LavaWaveHasteBuff" of {_p} is not set:
		set {_bonusHaste} to 40 + {_targets}*6
		set {_bonusHaste} to 100 if {_bonusHaste} > 100
		add {_bonusHaste} to {bonusHaste::%{_p}%}
		set metadata value "LavaWaveHasteBuff" of {_p} to 12 seconds
		while metadata value "LavaWaveHasteBuff" of {_p} > 0 seconds:
			wait 1 second
			remove 1 second from metadata value "LavaWaveHasteBuff" of {_p}
		clear metadata value "LavaWaveHasteBuff" of {_p}
		remove {_bonusHaste} from {bonusHaste::%{_p}%}
	else:
		set metadata value "LavaWaveHasteBuff" of {_p} to 12 seconds

function LavaSurge(p: player, target: entity):
	clear metadata value "Lava Surge" of {_p}
	
	if string tag "Talents;Row 2" of custom nbt of {karta::%{_p}%} = "Flow of Power":
		set {_chance} to 4
		if string tag "Talents;Row 5" of custom nbt of {karta::%{_p}%} = "Further Beyond":
			set {_chance} to 6
		chance of {_chance}%:
			set {_ascDuration} to 6
			if getTrait({_p}, "Mountains will Fall") is set:
				add 2 to {_ascDuration}
			if boolean tag "Constellation;Let the World Watch" of custom nbt of {karta::%{_p}%} is set:
				set {_ascendanceDuration} to "%{_ascDuration}*1.33% seconds" parsed as timespan
			else:
				set {_ascendanceDuration} to "%{_ascDuration}% seconds" parsed as timespan
			Ascendance({_p}, {_ascendanceDuration})

	if getTrait({_p}, "Molten Blast") is set:
		add statTrait({_p}, "Ghazan", "Molten Blast") to {_moltenBlast}
		MoltenBlast({_p}, {_moltenBlast})

	AbilityUse({_p}, "Lava Burst")
	set {_bonusDamage} to lavaResurgence({_p})

	if boolean tag "Constellation;Deeptremor" of custom nbt of {karta::%{_p}%} is set:
		LavaBurst({_p}, {_target}, 1.18, "Lava Burst", false, {_bonusDamage})
	else:
		LavaBurst({_p}, {_target}, 1, "Lava Burst", false, {_bonusDamage})

	if metadata value "Rain of Lava-Camera" of {_p} is set:
		set {_entityId} to metadata value "Rain of Lava-Camera" of {_p}
		set {_entity} to entity from id {_entityId} in {_p}'s world
		send title " " with subtitle " " to {_entity} for 1 second with fade in 0 second and fade out 0 second
	send title " " with subtitle " " to {_p} for 1 second with fade in 0 second and fade out 0 second
	if metadata value "Lava Wave" of {_p} is set:
		clear metadata value "Lava Wave" of {_p}
		LavaWave({_p}, {_target})
	if metadata value "Master Heritage Lava Spread" of {_p} > 0:
		MasterHeritageLavaSpread({_p}, {_target})
#AREA RELOADER PLUGIN OGARNĄĆ
on skript stop:
	loop all players:
		if {magmaarea::%loop-player%} is set:
			clear {magmaarea::%loop-player%}
			clear {magmaareacount::%loop-player%}
on damage:
	if damage cause is magma:
		cancel event

function MoltenLava(p: player, radius: number, cdd: number, pospiech: number, wave: boolean, target: entity):
	set {_damage} to (0.5 + ({damage::%{_p}%}/160) + ({versatility::%{_p}%}/480) + ({primarystat::%{_p}%}/80) + {_bonusdmg})
	#(KOLEJNE 5 LINIJEK TYLKO DLA LORE)
	#MOLTEN UPHEAVAL
	loop {_loreheart::*}:
		if loop-value contains "Molten Upheaval":
			add ((2.75*{trait::Ghazan::Molten Upheaval::%{_p}%})/100) to {_faster}
	set {_faster} to 1 + {_faster}
	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Hot Hand":
		add 0.08 to {_faster}
	set {_wait} to "%(1/{_faster})/(((({_pospiech}-1)/1.3))+1)% seconds" parsed as timespan
	play sound "block.lava.extinguish" with volume 4 and pitch 0.32 at location of target block of {_p}
	if {_wave} is true:
		set {_Eventblock} to block under {_target}
	else:
		if {_Eventblock} is solid:
			set {_Eventblock} to target block of {_p}
		else:
			set {_Eventblock} to block under target block of {_p}
	set {_duration} to 30 seconds
	set {_waitLore} to "%{_wait}%"
	replace all " seconds" and " second" in {_waitLore} with ""
	set {_lore} to "&8Basic Ability%nl%&fInstant cast%nl%&7Cooldown:  &f%{_cdd}% seconds%nl%&7Use: &fRMB%nl%<##b03228>Turns all terrain in radius &f%{_radius}% <##b03228>of the%nl%<##b03228>target block into &f <##d14d43>Molten Lava <##b03228>for &f%{_duration}%<##b03228>.%nl%<##b03228>Enemies standing in &f <##d14d43>Molten Lava%nl%<##b03228>receive &f%{_damage}% <##ff4d00>Lava <##b03228>damage every &f%{_waitLore}% sec<##b03228>."
	loop all items in {_p}'s inventory:
		if boolean tag "Molten Lava" of custom nbt of loop-item = true:
			set lore of loop-item to {_lore}
	#MOLTEN INSTABILITY
	loop {_loreheart::*}:
		loop-value contains "Molten Instability":
			add "%(2*{trait::Ghazan::Molten Instability::%{_p}%})% seconds" parsed as timespan to {_duration}

	loop all blocks in radius {_radius} around {_Eventblock}:
		if loop-block is solid:
			if loop-counter = 1:
				set {_sound} to true
			else:
				set {_sound} to false
			if (y-coordinate of loop-block) >= (y-coordinate of {_Eventblock}):
				if "%regions at loop-block%" does not contain "spawn":
					if metadata value "MoltenLava%{_p}%" of loop-block is not set:
						moltenLavaSee({_p}, location of loop-block)
						add 1 to {magmaarea::%{_p}%}
						set metadata value "MoltenLava%{_p}%" of loop-block to {_duration}
						add 1 to metadata value "MoltenLava" of loop-block
						MoltenLavaTick({_p}, location of loop-block, {_sound})
					else:
						set metadata value "MoltenLava%{_p}%" of loop-block to {_duration}
					if loop-counter is divisible by 3:
						wait 1 tick
				
	loop all entities in radius {_radius}+0.5 around {_Eventblock}:
		if (y-coordinate of loop-entity) >= (y-coordinate of {_Eventblock}):
			combatInitiate({_p}, loop-entity)

function MoltenLavaTick(p: player, loc: location, sound: boolean = false):
	while metadata value "MoltenLava%{_p}%" of block at {_loc} > 0 seconds:
		wait 1 second
		remove 1 second from metadata value "MoltenLava%{_p}%" of block at {_loc}
	remove 1 from {magmaarea::%{_p}%}
	clear {magmaarea::%{_p}%} if 0 >= {magmaarea::%{_p}%}
	clear metadata value "MoltenLava%{_p}%" of block at {_loc}
	remove 1 from metadata value "MoltenLava" of block at {_loc}
	if metadata value "MoltenLava" of block at {_loc} <= 0:
		make (all players in {_p}'s world) see block at {_loc} as (block at {_loc})
		clear metadata value "MoltenLava" of block at {_loc}
	if {_sound} = true:
		play sound "block.lava.extinguish" with volume 4 and pitch 2 at location of {_loc}

on packet event play_server_block_change:
	set {_field} to field 0 of event-packet
	set {_loc} to location({_field}.getX(), {_field}.getY(), {_field}.getZ(), world "%player's world%")
	if metadata value "MoltenLava" of block at {_loc} is set:
		cancel event

function moltenLavaSee(p: player, loc: location):
	set {_packet} to new play_server_block_change packet
	set field 0 of {_packet} to {_loc}
	set field 1 of {_packet} to "magma block" parsed as item type
	send (all players in {_p}'s world) packet {_packet} without calling event

function BonusLavaBurst(p: player, target: entity, maxStacks: integer):
	set metadata value "Lava Technique Duration%{_p}%" of {_target} to 16 seconds
	if metadata value "Lava Technique Stacks%{_p}%" of {_target} is not set:
		set metadata value "Lava Technique Stacks%{_p}%" of {_target} to 0
		set {_id} to entity id of {_target}
		set {_meta} to metadata packet with id {_id}
		while metadata value "Lava Technique Duration%{_p}%" of {_target} > 0 seconds:
			if {_target} is alive:
				set {_duration} to seconds of metadata value "Lava Technique Duration%{_p}%" of {_target}
				set {_stacks} to metadata value "Lava Technique Stacks%{_p}%" of {_target}
				set {_name} to "%name of {_target}% &8| &f %{_stacks}%x (%{_duration}%s)"
				add data from "name %{_name}%" to {_meta}
				send packet {_meta} to {_p}
				wait 1 second
				remove 1 second from metadata value "Lava Technique Duration%{_p}%" of {_target}
				if 0 seconds >= metadata value "Lava Technique Duration%{_p}%" of {_target}:
					clear metadata value "Lava Technique Stacks%{_p}%" of {_target}
					clear metadata value "Lava Technique Duration%{_p}%" of {_target}
					stop loop
			else:
				clear metadata value "Lava Technique Stacks%{_p}%" of {_target}
				clear metadata value "Lava Technique Duration%{_p}%" of {_target}
				stop loop
		if {_target} is alive:
			add data from "name %name of {_target}%" to {_meta}
			send packet {_meta} to {_p}
	else:
		if metadata value "Lava Technique Stacks%{_p}%" of {_target} < {_maxStacks}:
			add 1 to metadata value "Lava Technique Stacks%{_p}%" of {_target}

on packet event play_client_use_entity:
	set {_field} to field 0 of event-packet
	set {_entity} to entity from id {_field} in world of player
	if metadata value "Lava Technique Stacks%player%" of {_entity} is set:
		cancel event

function lavaResurgence(p: player) :: number:
	set {_damage} to 0
	add offensiveTrait({_p}, "Ghazan", "Lava Resurgence") to {_damage}
	return {_damage}

function rollingLava(p: player) :: number:
	set {_damage} to 0
	add offensiveTrait({_p}, "Ghazan", "Rolling Lava") to {_damage}
	return {_damage}

function Magma(p: player):
	#IGNEOUS POTENTIAL
	loop {_loreheart::*}:
		loop-value contains "Igneous Potential":
			add (1*{trait::Ghazan::Igneous Potential::%{_p}%}) to {_bonusdmg}
	set {_id} to line 19 of lore of {karta::%{_p}%}
	set {_crit} to CriticalHit({_p})
	set {_damage} to (0.5 + ({damage::%{_p}%}/160)) + ({versatility::%{_p}%}/480) + ({primarystat::%{_p}%}/80) + {_bonusdmg}
	set {_pospiech} to Haste({_p})
	set {_chance} to 12
	#LAVA IMBUED
	loop {_loreheart::*}:
		loop-value-2 contains "Lava Imbued":
			add (0.5*{trait::Ghazan::Lava Imbued::%{_p}%}) to {_chance}
	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Hot Hand":
		add 2 to {_chance}

	if getTrait({_p}, "Lava Resurgence") is set:
		add 2.5 to {_chance}

	set {_faster} to 1
	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Hot Hand":
		add 0.08 to {_faster}
	set {_wait} to "%(1/{_faster})/(((({_pospiech}-1)/1.3))+1)% seconds" parsed as timespan
	set {_radius} to 2 + ({crowdcontrol::%{_p}%}/40)
	set {_lore} to "&8Basic Ability%nl%&fInstant cast%nl%&7Cooldown:  &f%{_cdd}% seconds%nl%&7Use: &fRMB%nl%<##b03228>Turns all terrain in radius &f%{_radius}% <##b03228>of the%nl%<##b03228>target block into &f <##d14d43>Molten Lava <##b03228>for &f%{_duration}%<##b03228>.%nl%<##b03228>Enemies standing in &f <##d14d43>Molten Lava%nl%<##b03228>receive &f%{_damage}% <##ff4d00>Lava <##b03228>damage every &f%{_wait}% sec<##b03228>."
	loop all entities in radius 100 around {_p}:
		if metadata value "MoltenLava%{_p}%" of (block under loop-entity) is set:
			if boolean tag "ECMob" of custom nbt of loop-entity is set:
				set metadata value "Element" of {_p} to "Lava"
				set loop-entity's last damage cause to sweep attack
				set metadata value "LastDamageCause" of loop-entity to "<##b03228>Molten Lava"
				set metadata value "LastDamageCauseLore" of loop-entity to {_lore}
				if metadata value "Lavafury" of {_p} > 0:
					if boolean tag "Constellation;Splintered Lava" of custom nbt of {karta::%{_p}%} is set:
						set {_LFMultiplier} to 1.2
					else:
						set {_LFMultiplier} to 1.6
					set {_damage} to {_damage}*{_LFMultiplier}
					remove 1 from metadata value "Lavafury" of {_p}
					set metadata value "Lava Surge" of {_p} to true
					if {guiscale::%{_p}%} = 4:
						send title " " with subtitle "          " to {_p} for 1 minute with fade in 0.25 second and fade out 0.0 second
					else:
						send title " " with subtitle "                    " to {_p} for 1 minute with fade in 0.25 second and fade out 0.0 second
					if metadata value "Lavafury" of {_p} = 0:
						clear metadata value "Lavafury" of {_p}
				chance of {_crit}%:
					if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%{_p}%} is set:
						PerpetualBurn({_p})
					set {_damage} to {_damage}*GhazanCritDamage({_p})
				make {_p} damage loop-entity by {_damage}*2
				play sound "entity.player.hurt" with volume 1.5 and pitch 1 at (location of loop-entity)
				#LAVA SURGE
				chance of {_chance}%:
					set metadata value "Lava Surge" of {_p} to true
					if metadata value "Rain of Lava-Camera" of {_p} is set:
						set {_entityId} to metadata value "Rain of Lava-Camera" of {_p}
						set {_entity} to entity from id {_entityId} in {_p}'s world
						send title " " with subtitle "          " to {_entity} for 1 minute with fade in 0.25 second and fade out 0.0 second

					if {guiscale::%{_p}%} = 4:
						send title " " with subtitle "          " to {_p} for 1 minute with fade in 0.25 second and fade out 0.0 second
					else:
						send title " " with subtitle "                    " to {_p} for 1 minute with fade in 0.25 second and fade out 0.0 second
						
#Transforms the ground into molten rocks
#Melts the ground around target area. Enemies inside take 0.5 damage every one second.
function moltenLavaRefresh(p: player):
	set {_MLDuration} to 30 seconds
	set {_n} to now
	loop all blocks in radius 50 around {_p}:
		if metadata value "MoltenLava%{_p}%" of loop-block is set:
			set metadata value "MoltenLava%{_p}%" of loop-block to 30 seconds

function Ascendance(p: player, duration: timespan):
	play sound "skill.ghazan.ascendance_activate" with volume 3 and pitch 0 at (location of {_p})
	clear cooldown "LavaBurst%{_p}%"
	set {_haste} to Haste({_p})
	set {_id} to line 19 of lore of {karta::%{_p}%}
	set {_cdd} to (15-{_cdred})/{_haste}
	set {_radius} to 2 + ({crowdcontrol::%{_p}%}/40)

	loop all entities in radius 100 around {_p}:
		if metadata value "MoltenLava%{_p}%" of (block under loop-entity) is set:
			if boolean tag "ECMob" of custom nbt of loop-entity is set:
				LavaBurst({_p}, loop-entity, 1, "Lava Burst", false)
				MoltenLava({_p}, {_radius}, {_cdd}, {_haste}, true, loop-entity)

	if metadata value "Ascendance" of {_p} is not set:
		set metadata value "Ascendance" of {_p} to 1
		set metadata value "AscendanceDuration" of {_p} to {_duration}
		if string tag "Talents;Row 5" of custom nbt of {karta::%{_p}%} = "Further Beyond":
			add 200 to {bonusHaste::%{_p}%}
			set {_furtherBeyond} to true
		if string tag "Talents;Row 2" of custom nbt of {karta::%{_p}%} = "Lava Will Rain":
			set {_bonusIntellect} to 20
			add {_bonusIntellect} to {primarystat::%{_p}%}
		set {_mountainsWillFall} to statTrait({_p}, "Ghazan", "Mountains will Fall")
		add {_mountainsWillFall} to {bonusCriticalHit::%{_p}%}
	else:
		add {_duration} to metadata value "AscendanceDuration" of {_p}
		stop

	while metadata value "Ascendance" of {_p} is set:
		if metadata value "cast" of {_p} is not set:
			send action bar " Ascendance: %metadata value "AscendanceDuration" of {_p}%" to {_p}
		if metadata value "AscendanceDuration" of {_p} >= 1 second:
			wait 1 second
		else:
			wait metadata value "AscendanceDuration" of {_p}
		remove 1 second from metadata value "AscendanceDuration" of {_p}
		if 0 seconds >= metadata value "AscendanceDuration" of {_p}:
			stop loop
	clear metadata value "AscendanceDuration" of {_p}
	clear metadata value "Ascendance" of {_p}
	if {_furtherBeyond} is true:
		remove 200 from {bonusHaste::%{_p}%}
		clear {_furtherBeyond}
		
	if {_mountainsWillFall} > 0:
		remove {_mountainsWillFall} from {bonusCriticalHit::%{_p}%} 

	if string tag "Talents;Row 2" of custom nbt of {karta::%{_p}%} = "Lava Will Rain":
		remove {_bonusIntellect} from {primarystat::%{_p}%}

on disconnect:
	wait 60 seconds
	if player is offline:
		clear metadata value "AscendanceDuration" of player
		clear metadata value "Lavakeeper" of player
		clear metadata value "Lavafury" of player

function MagmaCheck(p: player):
	while metadata value "ECEngaged" of {_p} is set:
		set {_id} to line 19 of lore of {karta::%{_p}%}
		#MOLTEN UPHEAVAL
		set {_faster} to 0
		loop {_loreheart::*}:
			if loop-value contains "Molten Upheaval":
				add ((2.75*{trait::Ghazan::Molten Upheaval::%{_p}%})/100) to {_faster}
		set {_faster} to 1 + {_faster}
		if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Hot Hand":
			add 0.08 to {_faster}
		if {magmaarea::%{_p}%} > 0:
			Magma({_p})
		set {_pospiech} to Haste({_p})
		set {_wait} to "%(1/{_faster})/(((({_pospiech}-1)/1.3))+1)% seconds" parsed as timespan
		wait {_wait}

function WildfireDuration(p: player):
	set {_wait} to 12 seconds
	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Unrivaled Finesse":
		add 1.5 seconds to {_wait}
	#ERUPTING LAVA
	loop {_loreheart::*}:
		loop-value contains "Erupting Lava":
			loop {trait::Ghazan::Erupting Lava::%{_p}%} times:
				add 1 second to {_wait}
	wait {_wait}
	clear metadata value "Rain of Lava" of {_p}
	
function LavaBurst(p: player, x: entity, multiplier: number, ability: string, replicated: boolean, bonusDamage: number = 0):
	set {_id} to line 19 of lore of {karta::%{_p}%}
	set {_crit} to CriticalHit({_p})
	set {_damage} to 2.5 + ({damage::%{_p}%}/32.5) + ({versatility::%{_p}%}/97.5) + ({primarystat::%{_p}%}/16.25)
	set {_mistrzostwo} to 4 + (Mastery({_p})/26)
	set {_pospiech} to Haste({_p})
	set {_casttime} to round((2/{_pospiech}), 1)
	set {_cdd} to (8/{_pospiech})

	add {_bonusDamage} to {_damage}
	set {_damage} to {_damage}*{_multiplier}					

	if metadata value "Ascendance" of {_p} is set:
		if boolean tag "Constellation;Let the World Watch" of custom nbt of {karta::%{_p}%} is set:
			set {_damage} to {_damage} * (1 + ({_crit}/50))
		else:
			set {_damage} to {_damage} * (1 + ({_crit}/100))

	set {_chance} to 12
	if getTrait({_p}, "Lava Resurgence") is set:
		add 2.5 to {_chance}
	set {_lore2} to "&8Passive Ability%nl%&fNo cast%nl%&7Cooldown:  &fnone%nl%&7Use: &fPASSIVE%nl%<##b03228>Your &f <##d14d43>Molten Lava <##b03228>damage has a &f%{_chance}%%%%nl%<##b03228>chance to cause your next &f <##d14d43>Lava Burst%nl%<##b03228>to be instant and not incur its cooldown."

	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Advanced Technique":
		set {_maxStacks} to 30
		add 0.01 to {_mistrzostwo}
	else:
		set {_maxStacks} to 25
	BonusLavaBurst({_p}, {_x}, {_maxStacks})

	set {_LTStacks} to metadata value "Lava Technique Stacks%{_p}%" of {_x}

	set {_maxMasteryDmg} to ((1 + ({_mistrzostwo}/100))^{_LTmaxStacks})*100
	set {_LTDuration} to 16
	set {_loreMastery} to "&8Mastery Bonus%nl%&fNo cast%nl%&7Cooldown:  &fnone%nl%&7Use: &fPASSIVE%nl%&f <##d14d43>Lava Burst <##b03228>deals &f%{_mistrzostwo}%%% <##b03228>more damage%nl%<##b03228>to the enemy each time it is used on the%nl%<##b03228>the same target, up to &f%{_maxStacks}% stacks<##b03228>.%nl%<##b03228>Maximum damage increase: &f%{_maxMasteryDmg}%%%<##b03228>.%nl% %nl%<##b03228>This damage increase has a duration%nl%<##b03228>of &f%{_LTDuration}% sec <##b03228>and is refreshed with each%nl%&f <##d14d43>Lava Burst <##b03228>cast on the target."
	
	if {_ability} = "Lava Burst":
		if {_replicated} = false:
			if metadata value "Lavakeeper" of {_p} > 0:
				set {_damage} to {_damage} * 1.90
				remove 1 from metadata value "Lavakeeper" of {_p}
				if metadata value "Lavakeeper" of {_p} is 0:
					clear metadata value "Lavakeeper" of {_p}
				if boolean tag "Constellation;Splintered Lava" of custom nbt of {karta::%{_p}%} is set:
					set {_LTStacks} to {_maxStacks}
					set {_extraMastery} to 70
					add ({_extraMastery}/26) to {_mistrzostwo}
	set {_damage} to {_damage}*(1+({_mistrzostwo}*{_LTStacks}/100))
		
	set {_lore} to "&8Basic Ability%nl%&f%{_casttime}% second cast%nl%&7Cooldown:  &f%{_cdd}% seconds%nl%&7Use: &fRMB%nl%<##b03228>Hurls molten lava at the target, dealing%nl%&f%{_damage}% <##ff4d00>Lava <##b03228>damage. &f <##d14d43>Lava Burst <##b03228>will%nl%<##b03228>always <##d14d43> Critically Strike <##b03228>if the target%nl%<##b03228>is affected by &f <##d14d43>Molten Lava<##b03228>."
	
	set {_loc} to {_p}'s location
	set {_hand} to a random integer between 1 and 2
	if {_hand} is 1:
		set {_loc} to location 0.4 blocks left of {_loc}
	if {_hand} is 2:
		set {_loc} to location 0.4 blocks right of {_loc}
	set {_loc} to location 0.5 blocks below {_loc}
	set {_pid} to random 8 char string from charset `0-9`
	set {_pid2} to random 8 char string from charset `0-9`
	if distance between {_p} and {_x} < 300:
		if {_ability} = "Rain of Lava":
			set {_locEffect} to location 5 above {_p}
		else:
			set {_locEffect} to location at {_p}
		set {_shape} to a line from {_locEffect} to {_x}
		set particle of {_shape} to lava particle
		draw shape {_shape} at {_locEffect} ~ {_x}
	play sound "skill.ghazan.lava_burst_cast" with volume 4 and pitch 1 at (location of {_p})
	loop all items in the inventory of {_p}:
		if boolean tag "Lava Burst" of custom nbt of loop-item = true:
			set lore of loop-item to {_lore}
		else if boolean tag "Lava Surge" of custom nbt of loop-item = true:
			set lore of loop-item to {_lore2}
		else if boolean tag "Mastery: Lava Technique" of custom nbt of loop-item = true:
			set lore of loop-item to {_loreMastery}
	wait 0.4 seconds
	set {_d} to distance between {_p} and {_x}
	if {_d} > 3:
		if {_d} < 5:
			wait 0.2 seconds
	else:
		wait 0.5 seconds
	play sound "skill.ghazan.lava_burst_impact" with volume 4 and pitch 1 at (location of {_x})
	set {_x}'s last damage cause to sweep attack
	if {_ability} = "Rain of Lava":
		if {_replicated} is not true:
			set metadata value "LastDamageCause" of {_x} to "<##b03228>Rain of Lava"
		else:
			set metadata value "LastDamageCause" of {_x} to "<##b03228>Rain of Lava (Echo)"
		set {_RoLduration} to 12
		if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Unrivaled Finesse":
			add 1.5 to {_RoLduration} 
		if string tag "Talents;Row 5" of custom nbt of {karta::%{_p}%} = "Skytear":
			set {_rain} to 0.5
		else:
			set {_rain} to 1
		set {_lore} to "&8Ultimate Ability%nl%&fInstant cast%nl%&7Cooldown:  &f%{_cdd}%%nl%&7Use: &fRMB%nl%<##b03228>Ghazan creates a display of his skill,%nl%<##b03228>throwing himself in the air for &f%{_RoLduration}% sec<##b03228>.%nl%<##b03228>During this spell, Ghazan continously%nl%<##b03228>fires &f <##d14d43>Lava Burst <##b03228>at nearby enemies%nl%<##b03228>every &f%{_rain}% sec<##b03228>, prioritizing enemies inside%nl%&f <##d14d43>Molten Lava<##b03228>."
		set metadata value "LastDamageCauseLore" of {_x} to {_lore}
	else if {_ability} = "Lava Burst":
		if {_replicated} is not true:
			set metadata value "LastDamageCause" of {_x} to "<##b03228>Lava Burst"
		else:
			set metadata value "LastDamageCause" of {_x} to "<##b03228>Lava Burst (Echo)"
	set metadata value "LastDamageCauseLore" of {_x} to {_lore}

	set metadata value "Element" of {_p} to "Lava"
	if metadata value "MoltenLava%{_p}%" of block under {_x} is set:
		set {_check} to true
		if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%{_p}%} is set:
			PerpetualBurn({_p})
		set {_damage} to {_damage}*GhazanCritDamage({_p})
		add 1 to metadata value "IgneousHailCrits" of {_p}
	if {_check} is not set:
		chance of {_crit}%:
			if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%{_p}%} is set:
				PerpetualBurn({_p})
			set {_damage} to {_damage}*GhazanCritDamage({_p})
			if {_ability} = "Rain of Lava":
				add 1 to metadata value "IgneousHailCrits" of {_p}

	
	make {_p} damage {_x} by {_damage}*2

	if string tag "Talents;Row 5" of custom nbt of {karta::%{_p}%} = "Rolling Magma":
		if cooldown "Lava Wave%{_p}%" > 0 seconds:
			remove 0.75 seconds from cooldown "Lava Wave%{_p}%"
		if cooldown "Lavakeeper%{_p}%" > 0 seconds:
			remove 0.75 seconds from cooldown "Lavakeeper%{_p}%"
		if cooldown "Lavafury%{_p}%" > 0 seconds:
			remove 0.75 seconds from cooldown "Lavafury%{_p}%"
		loop all items in {_p}'s inventory:
			if boolean tag "Lava Wave" of custom nbt of loop-item is set:
				set cooldown of loop-item for {_p} to cooldown "Lava Wave%{_p}%"
			if boolean tag "Lavakeeper" of custom nbt of loop-item is set:
				set cooldown of loop-item for {_p} to cooldown "Lavakeeper%{_p}%"
			if boolean tag "Lavafury" of custom nbt of loop-item is set:
				set cooldown of loop-item for {_p} to cooldown "Lavafury%{_p}%"
	
	if boolean tag "Constellation;Master Heritage" of custom nbt of {karta::%{_p}%} is set:
		MasterHeritage({_p}, {_x}, {_damage})

	if boolean tag "Constellation;Incineration" of custom nbt of {karta::%{_p}%} is set:
		if {_replicated} is not true:
			chance of 40%:
				ReplicatedLavaBurst({_p}, {_x}, 0.2, {_ability})

	#VOLCANIC INFERNO
	wait 1 tick
	loop {_loreheart::*}:
		loop-value contains "Volcanic Inferno":
			add (2*{trait::Ghazan::Volcanic Inferno::%{_p}%}) to {_dmgfissure}
	if {_dmgfissure} is set:
		chance of 20%:
			loop all blocks in radius 1.3 around {_x}:
				if (rounded down y-coordinate of loop-block) = (rounded down y-coordinate of {_x}):
					set {_y} to location of loop-block
					increase y-coordinate of {_y} by -0.4
					draw 3 of dust using dustOption((rgb 122, 70, 62), 3) at {_y}
			loop all blocks in radius 1 around {_x}:
				if (rounded down y-coordinate of loop-block) = (rounded down y-coordinate of {_x}):
					set {_y} to location of loop-block
					increase y-coordinate of {_y} by -0.2
					draw 3 of dust using dustOption(red, 2) at {_y}
			loop all blocks in radius 1 around {_x}:
				if (rounded down y-coordinate of loop-block) = (rounded down y-coordinate of {_x}):
					set {_y} to location of loop-block
					draw 3 of dust using dustOption(orange, 1) at {_y}
			loop all living entities in radius 2.5 around {_x}:
				if boolean tag "ECMob" of custom nbt of loop-entity is set:
					set metadata value "Element" of {_p} to "Lava"
					set loop-entity's last damage cause to sweep attack
					set metadata value "LastDamageCause" of loop-entity to "<##b03228>Volcanic Fissure"
					set metadata value "LastDamageCauseLore" of loop-entity to "<##b03228>Opens a volcanic fissure under%nl%<##b03228>the target, dealing &f%{_dmgfissure}% <##ff3014>Lava <##b03228>damage to all nearby%nl%<##b03228>enemies."
					chance of {_crit}%:
						set {_dmgfissure} to {_dmgfissure}*GhazanCritDamage({_p})
					make {_p} damage loop-entity by {_dmgfissure}*2

function ReplicatedLavaBurst(p: player, target: entity, multiplier: number, ability: string):
	set {_haste} to Haste({_p})
	set {_wait} to "%1/{_haste}% seconds" parsed as timespan
	wait {_wait}
	wait 1 tick
	LavaBurst({_p}, {_target}, {_multiplier}, {_ability}, true)

function WildfireSpin(p: player):
	make {_p} invisible
	set {_id} to random integer between 0 and 999999999999
	set {_uuid} to a random uuid

	set {_properties} to "%{_p}.getPlayerProfile().getProperty("textures")%"
	replace all "Property[name=textures" and "value=" and "," and "]" in {_properties} with ""
	set {_properties::*} to {_properties} split at "signature="

	set {_texture} to {_properties::1}
	set {_signature} to {_properties::2}

	spawn fake player named ({_p}'s name) with skin named "%{_texture}%,%{_signature}%" at {_p} for all players with id {_id} and uuid {_uuid}
	set {_yaw} to 0
	set camera of {_p} to entity with id {_id}
	set metadata value "Rain of Lava-Camera" of {_p} to {_id}
	WildfirePush({_id})

	set {_wait} to 12
	if string tag "Talents;Row 1" of custom nbt of {karta::%{_p}%} = "Unrivaled Finesse":
		add 1.5 to {_wait}

	while metadata value "Rain of Lava" of {_p} is set:
		send action bar " Rain of Lava: %round({_wait}, 0)% sec" to {_p}
		wait 1 tick
		rotate entity with id {_id} with yaw {_yaw} and pitch {_p}'s pitch for all players
		add 10 to {_yaw}
		set {_wait} to {_wait}-0.05
	
	WildfireFall({_p}, {_id})
	

function WildfirePush(id: integer):
	loop 5 times:
		move entity with id {_id} by 0 4096 0 for all players
		wait 1 tick

function WildfireFall(p: player, id: integer):
	loop 5 times:
		move entity with id {_id} by 0 -4096 0 for all players
		wait 1 tick
	remove fake entity with id {_id} for all players
	set camera of {_p} to entity with id (entity id of {_p})
	make {_p} visible
	clear metadata value "Rain of Lava-Camera" of {_p}

function MasterHeritage(p: player, target: entity, damageLava: number):
	set {_pospiech} to Haste({_p})/1.5
	set {_ticks} to rounded 4*({_pospiech})
	if metadata value "Master Heritage-%{_p}%" of {_target} is not set:
		set metadata value "Master Heritage-%{_p}%" of {_target} to {_ticks}
		set metadata value "Master Heritage Total Damage-%{_p}%" of {_target} to {_damageLava}
		wait 1 tick
		while metadata value "Master Heritage-%{_p}%" of {_target} > 0:
			if {_target} is alive:
				set {_crit} to CriticalHit({_p})
				set {_duration} to 14
				set {_damageTotal} to (metadata value "Master Heritage Total Damage-%{_p}%" of {_target})
				set {_damage} to {_damageTotal}*(0.1/{_ticks})

				set {_damageLeft} to metadata value "Master Heritage Total Damage-%{_p}%" of {_target}
				remove {_damage} from {_damageLeft}
				set metadata value "Master Heritage Total Damage-%{_p}%" of {_target} to {_damageLeft}

				set {_target}'s last damage cause to sweep attack
				set metadata value "Element" of {_p} to "Lava"
				set metadata value "LastDamageCause" of {_target} to "<##b03228>Lava Languish"
				set metadata value "LastDamageCauseLore" of {_target} to {_lore}
				make {_p} damage {_target} by {_damage}*2
				set {_ticksTotal} to metadata value "Master Heritage-%{_p}%" of {_target}
				remove 1 from {_ticksTotal}
				set metadata value "Master Heritage-%{_p}%" of {_target} to {_ticksTotal}
				wait 1 second
			else:
				clear metadata value "Master Heritage-%{_p}%" of {_target}
				clear metadata value "Master Heritage Total Damage-%{_p}%" of {_target}
				stop loop
		clear metadata value "Master Heritage-%{_p}%" of {_target}
		clear metadata value "Master Heritage Total Damage-%{_p}%" of {_target}
	else:
		set metadata value "Master Heritage-%{_p}%" of {_target} to {_ticks}
		set metadata value "Master Heritage Total Damage-%{_p}%" of {_target} to (metadata value "Master Heritage Total Damage-%{_p}%" of {_target} + {_damageLava})

function MasterHeritageLavaSpread(p: player, target: entity):
	if metadata value "Lava Wave" of {_p} is not true:
		set {_lavaSpread} to metadata value "Master Heritage Lava Spread" of {_p}
		remove 1 from {_lavaSpread}
		set metadata value "Master Heritage Lava Spread" of {_p} to {_lavaSpread}
		if metadata value "Master Heritage Lava Spread" of {_p} = 0:
			clear metadata value "Master Heritage Lava Spread" of {_p}
		set {_entities::*} to LoopEntitiesAroundTarget({_target}, 100, false)
		loop {_entities::*}:
			if metadata value "MoltenLava%{_p}%" of block under loop-value is set:
				LavaBurst({_p}, loop-value, 0.65, "Lava Burst", false)
				add 1 to {_count}
			stop loop if {_count} = 3

function PerpetualBurn(p: player):
	if metadata value "PerpetualBurnCount" of {_p} is not set:
		set metadata value "PerpetualBurnCount" of {_p} to 0
	if metadata value "PerpetualBurnCount" of {_p} < 10:
		set {_perpetualBurnCount} to metadata value "PerpetualBurnCount" of {_p}
		add 1 to {_perpetualBurnCount}
		set metadata value "PerpetualBurnCount" of {_p} to {_perpetualBurnCount}

	if metadata value "PerpetualBurn" of {_p} is not set:
		set metadata value "PerpetualBurn" of {_p} to 20 seconds
		while metadata value "PerpetualBurn" of {_p} > 0 seconds:
			wait 1 second
			set {_duration} to metadata value "PerpetualBurn" of {_p}
			remove 1 second from {_duration}
			set metadata value "PerpetualBurn" of {_p} to {_duration}
			if 0 seconds >= metadata value "PerpetualBurn" of {_p}:
				clear metadata value "PerpetualBurn" of {_p}
				clear metadata value "PerpetualBurnCount" of {_p}
				stop loop
	else:
		set metadata value "PerpetualBurn" of {_p} to 20 seconds

function MoltenBlast(p: player, stat: number):
	add {_stat} to metadata value "MoltenBlast" of {_p}
	if metadata value "MoltenBlastDuration" of {_p} is not set:
		set metadata value "MoltenBlastDuration" of {_p} to 5 seconds
		while metadata value "MoltenBlastDuration" of {_p} > 0 seconds:
			wait 1 second
			remove 1 second from metadata value "MoltenBlastDuration" of {_p}
		clear metadata value "MoltenBlast" of {_p}
		clear metadata value "MoltenBlastDuration" of {_p}
		
function IgneousHail(p: player, stat: number):
	clear metadata value "IgneousHailCrits" of {_p}
	if metadata value "IgneousHail" of {_p} is not set:
		set metadata value "IgneousHail" of {_p} to {_stat}
		add {_stat} to {primarystat::%{_p}%}
		set metadata value "IgneousHailDuration" of {_p} to 12 seconds
		while metadata value "IgneousHailDuration" of {_p} > 0 seconds:
			wait 1 second
			remove 1 second from metadata value "IgneousHailDuration" of {_p}
		remove metadata value "IgneousHail" of {_p} from {primarystat::%{_p}%}
		clear metadata value "IgneousHailDuration" of {_p}
		clear metadata value "IgneousHail" of {_p}
	else:
		remove metadata value "IgneousHail" of {_p} from {primarystat::%{_p}%}
		set metadata value "IgneousHail" of {_p} to {_stat}
		add {_stat} to {primarystat::%{_p}%}

function GhazanCritDamage(p: player) :: number:
	set {_critdamage} to 2
	if boolean tag "Constellation;Perpetual Burn" of custom nbt of {karta::%{_p}%} is set:
		set {_perpetualBurnCount} to metadata value "PerpetualBurnCount" of {_p}
		set {_critdamage} to {_critdamage} + (0.02*{_perpetualBurnCount})

	#MOLTEN BLAST
	#Readd this portion when the Heart of Earthcraft is readded
	if {_heart} is true:
		loop {_loreheart::*}:
			loop-value contains "Molten Blast":
				add ((1*{trait::Ghazan::Molten Blast::%{_p}%})/100) to {_bonuscritdmg}

	return {_critdamage}
