variables:
	{dmgdealt::%player%} = 0
	{space} = ""
	{space2} = ""
function CombatRefresh(v: entity, a: entity):
	if tag "custom;ECMob" of nbt of {_v} is set:
		if metadata value "ECEngaged" of {_v} is not set:
			set metadata value "ECEngaged" of {_v} to 60
			while metadata value "ECEngaged" of {_v} > -1:
				if metadata value "ECEngaged" of {_v} > 0:
					wait 1 second
					set {_tag} to metadata value "ECEngaged" of {_v}
					remove 1 from {_tag}
					set metadata value "ECEngaged" of {_v} to {_tag}
				else:
					clear metadata value "ECEngaged" of {_v}
					loop {asyst::%uuid of {_v}%::*}:
						set {_player} to loop-value parsed as entity
						clear metadata value "CircleOfWater%{_player}%" of {_v}
					clear {asyst::%uuid of {_v}%::*}
					clear {lastdmgcauselore::%{_v}%::*}
					remove uuid of {_e} from {incombatwith::%{_a}%::*}
					clear metadata value "LastDamageCause" of {_v}
					clear {lastdmgcauseloreEN::%{_v}%::*}
		else:
			set metadata value "ECEngaged" of {_v} to 60

function clearCombat(e: entity):
	LogDmgBreakdown({_e})
	clear metadata value "ECEngaged" of {_e}
	SetPlayerStats({_e})
	clear {seconds::%{_e}%}
	clear {lavasurge::%{_e}%}
	clear {magmaarea::%{_e}%}
	clear {circleofwater::%{_e}%}
	clear {extraSecondsIcyVeins::%{_e}%}
	clear {ascendanceDuration::%{_e}%}
	clear {lavakeeper::%{_e}%}
	clear {lavafury::%{_e}%}
	clear {lingeringInsanityHaste::%{_e}%}
	clear {hasteVoidform::%{_e}%}
	set {insanity::%{_e}%} to 0
	loop {incombatwith::%{_e}%::*}:
		remove uuid of {_e} from {asyst::%uuid of loop-value%}
	clear {incombatwith::%{_e}%::*}
	clear metadata value "Lava Wave" of {_e}
	clear {icicles::%{_e}%}
	clear {iciclehave::%{_e}%}
	if {kartaname::%{_e}%} = "Cresselia":
		if tag "Talents;Row 2" of nbt of {karta::%{_e}%} = "Astral Communion":
			set {astralpower::%{_e}%} to 60
		else:
			set {astralpower::%{_e}%} to 50
		AstronomicalImpact({_e})
	else if {kartaname::%{_e}%} = "Vaporeon":
		loop all entities where [metadata value "CircleOfWater%{_e}%" of input is set]:
			clear metadata value "CircleOfWater%{_e}%" of loop-entity
	set {healed::%{_e}%} to 0
	set {hps::%{_e}%} to 0
	set {frozenfingers::%{_e}%} to 0
	set {dmgdealt::%{_e}%} to 0
	set {dps::%{_e}%} to 0
	set {_uuid} to uuid of {_e}
	shieldsClear({_e})
	clear {healcard::*}
	clear {dmgbreak::*}
	clear {shieldcard::*}
	clear {shieldtotal::*}
	clearBuffs({_e})
	set {_id} to line 19 of lore of {karta::%{_e}%}
	clear {mobilnosc::%{_e}%}
	clear {wildfireDelphox::%{_e}%}
	clear {lastdmgcauselore::%{_e}%::*}
	clear metadata value "LastDamageCause" of {_e}
	clear {lastdmgcauseloreEN::%{_e}%::*}
	clear metadata value "TwistOfFateDuration" of {_e}
	clear metadata value "TwistOfFate" of {_e}
	clear metadata value "VoidRayDuration" of {_e}
	clear metadata value "VoidRayStacks" of {_e}
	clear metadata value "LingeringInsanity" of {_e}
	clear metadata value "ShadowyInsight" of {_e}
	clear metadata value "SurrenderToMadness" of {_e}
	clear metadata value "AstralInvocation" of {_e}
	clear metadata value "OrbitBreaker" of {_e}
	clear metadata value "Blaze" of {_e}
	clear metadata value "FlameAccelerantTicks" of {_e}
	clear metadata value "HotSpree" of {_e}
	clear metadata value "AetherialKindlingExtension" of {_e}
	clear metadata value "StarlordStackCount" of {_e}
	clear metadata value "Starlord" of {_e}
	clear metadata value "PerpetualBurn" of {_e}
	clear metadata value "PerpetualBurnCount" of {_e}
	clear metadata value "UnstoppableHeatShield" of {_e}
	clear metadata value "TidalWaves" of {_e}
	remove {_e} from all boss bars
	playerMoveSpeedUpdate({_e})
	send title " " with subtitle " " to {_e} for 0 seconds with fade in 0 second and fade out 0 second
	loop all players where [metadata value "ECEngaged" of input is set]:
		clear loop-player's scoreboard
		scoreboardUpdateCombat(loop-player)
	if {agnesstop} is true:
		clear {agnesstop}
	loop 7 times:
		if {icicle%loop-number%::%{_e}%} is set:
			set {_icicle} to {icicle%loop-number%::%{_e}%}
			kill {_icicle}
			clear {icicle%loop-number%::%{_e}%}
	#set {_mob} to {mobilnosc::%{_e}%}/5000
	#set {_e}'s walking speed to 0.2

function scoreboardUpdateCombat(p: player):
	if metadata value "DungeonInstance" of {_p} is not set:
		if {meter::%{_p}%} = "healing":
			set {_kolorek} to KolorekScoreboard({_p})
			set title of {_p}'s scoreboard to "&f&l«-───▬ %{_kolorek}%&lEC &f&l▬───-»"
			set line 12 of {_p}'s scoreboard to ""
			if {language::%{_p}%} = "English":
				set line 11 of {_p}'s scoreboard to " &fIn combat for: %{_kolorek}%%{seconds::%{_p}%}% seconds     "
			else:
				set line 11 of {_p}'s scoreboard to " &fW walce od: %{_kolorek}%%{seconds::%{_p}%}% sekund     "
			set line 10 of {_p}'s scoreboard to " "
			set {_x} to first element of createTop("healed", 5, "[P]")
			set {_x2} to 2nd element of createTop("healed", 5, "[P]")
			set {_x3} to 3rd element of createTop("healed", 5, "[P]")
			set {_x4} to 4th element of createTop("healed", 5, "[P]")
			set {_x5} to 5th element of createTop("healed", 5, "[P]")
			if {healed::%{_x}%} > 0:
				set line 9 of {_p}'s scoreboard to "  &f1. &f%{ikonkakarta::%{_x}%}%%{kartacolor::%{_x}%}%%first element of createTop("healed", 5, "[P]")% &f%first element of createTop("healed", 5, "[V]")% %{kartacolor::%{_x}%}%HEAL | &f%{hps::%{_x}%}% %{kartacolor::%{_x}%}%HPS"
			if {healed::%{_x2}%} > 0:
				set line 8 of {_p}'s scoreboard to "  &f2. &f%{ikonkakarta::%{_x2}%}%%{kartacolor::%{_x2}%}%%2nd element of createTop("healed", 5, "[P]")% &f%2nd element of createTop("healed", 5, "[V]")% %{kartacolor::%{_x2}%}%HEAL | &f%{hps::%{_x2}%}% %{kartacolor::%{_x2}%}%HPS"
			if {healed::%{_x3}%} > 0:
				set line 7 of {_p}'s scoreboard to "  &f3. &f%{ikonkakarta::%{_x3}%}%%{kartacolor::%{_x3}%}%%3rd element of createTop("healed", 5, "[P]")% &f%3rd element of createTop("healed", 5, "[V]")% %{kartacolor::%{_x3}%}%HEAL | &f%{hps::%{_x3}%}% %{kartacolor::%{_x3}%}%HPS"
			if {healed::%{_x4}%} > 0:
				set line 6 of {_p}'s scoreboard to "  &f4. %{ikonkakarta::%{_x4}%}%%{kartacolor::%{_x4}%}%%4th element of createTop("healed", 5, "[P]")% &f%4th element of createTop("healed", 5, "[V]")% %{kartacolor::%{_x4}%}%HEAL | &f%{hps::%{_x4}%}% %{kartacolor::%{_x4}%}%HPS"
			if {healed::%{_x5}%} > 0:
				set line 5 of {_p}'s scoreboard to "  &f5. %{ikonkakarta::%{_x5}%}%%{kartacolor::%{_x5}%}%%5th element of createTop("healed", 5, "[P]")% &f%5th element of createTop("healed", 5, "[V]")% %{kartacolor::%{_x5}%}%HEAL | &f%{hps::%{_x5}%}% %{kartacolor::%{_x5}%}%HPS"
			set line 4 of {_p}'s scoreboard to ""
			if {language::%{_p}%} = "English":
				set line 3 of {_p}'s scoreboard to " &fCombat ends in: %{_kolorek}%%metadata value "ECEngaged" of {_p}% seconds     "
			else:
				set line 3 of {_p}'s scoreboard to " &fKoniec walki za: %{_kolorek}%%metadata value "ECEngaged" of {_p}% sekund     "
			set line 2 of {_p}'s scoreboard to ""
		else:
			set {_kolorek} to KolorekScoreboard({_p})
			if metadata value "DungeonInstance" of {_p} is not set:
				set title of {_p}'s scoreboard to "&f&l«-───▬ %{_kolorek}%&lEC &f&l▬───-»"
				set line 12 of {_p}'s scoreboard to ""
				if {language::%{_p}%} = "English":
					set line 11 of {_p}'s scoreboard to " &fIn combat for: %{_kolorek}%%{seconds::%{_p}%}% seconds     "
				else:
					set line 11 of {_p}'s scoreboard to " &fW walce od: %{_kolorek}%%{seconds::%{_p}%}% sekund     "
				set line 10 of {_p}'s scoreboard to " "
				set {_x} to first element of createTop("dmgdealt", 5, "[P]")
				set {_x2} to 2nd element of createTop("dmgdealt", 5, "[P]")
				set {_x3} to 3rd element of createTop("dmgdealt", 5, "[P]")
				set {_x4} to 4th element of createTop("dmgdealt", 5, "[P]")
				set {_x5} to 5th element of createTop("dmgdealt", 5, "[P]")
				if {dmgdealt::%{_x}%} > 0:
					set line 9 of {_p}'s scoreboard to "  &f1. &f%{ikonkakarta::%{_x}%}%%{kartacolor::%{_x}%}%%first element of createTop("dmgdealt", 5, "[P]")% &f%first element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x}%}%DMG | &f%{dps::%{_x}%}% %{kartacolor::%{_x}%}%DPS"
				if {dmgdealt::%{_x2}%} > 0:
					set line 8 of {_p}'s scoreboard to "  &f2. &f%{ikonkakarta::%{_x2}%}%%{kartacolor::%{_x2}%}%%2nd element of createTop("dmgdealt", 5, "[P]")% &f%2nd element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x2}%}%DMG | &f%{dps::%{_x2}%}% %{kartacolor::%{_x2}%}%DPS"
				if {dmgdealt::%{_x3}%} > 0:
					set line 7 of {_p}'s scoreboard to "  &f3. &f%{ikonkakarta::%{_x3}%}%%{kartacolor::%{_x3}%}%%3rd element of createTop("dmgdealt", 5, "[P]")% &f%3rd element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x3}%}%DMG | &f%{dps::%{_x3}%}% %{kartacolor::%{_x3}%}%DPS"
				if {dmgdealt::%{_x4}%} > 0:
					set line 6 of {_p}'s scoreboard to "  &f4. %{ikonkakarta::%{_x4}%}%%{kartacolor::%{_x4}%}%%4th element of createTop("dmgdealt", 5, "[P]")% &f%4th element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x4}%}%DMG | &f%{dps::%{_x4}%}% %{kartacolor::%{_x4}%}%DPS"
				if {dmgdealt::%{_x5}%} > 0:
					set line 5 of {_p}'s scoreboard to "  &f5. %{ikonkakarta::%{_x5}%}%%{kartacolor::%{_x5}%}%%5th element of createTop("dmgdealt", 5, "[P]")% &f%5th element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x5}%}%DMG | &f%{dps::%{_x5}%}% %{kartacolor::%{_x5}%}%DPS"
				set line 4 of {_p}'s scoreboard to ""
				if {language::%{_p}%} = "English":
					set line 3 of {_p}'s scoreboard to " &fCombat ends in: %{_kolorek}%%metadata value "ECEngaged" of {_p}% seconds     "
				else:
					set line 3 of {_p}'s scoreboard to " &fKoniec walki za: %{_kolorek}%%metadata value "ECEngaged" of {_p}% sekund     "
				set line 2 of {_p}'s scoreboard to ""

function HealRefresh(p: player, h: number):
	if metadata value "ECEngaged" of {_p} is not set:
		set {_id} to line 19 of lore of {karta::%{_p}%}
		set {healed::%{_p}%} to 0
		set {hps::%{_p}%} to 0
		add {_h} to {healed::%{_p}%}
		if {seconds::%{_p}%} is not set:
			set {seconds::%{_p}%} to 0
		if metadata value "DungeonInstance" of {_p} is not set:
			clear scoreboard of {_p}
			set metadata value "ECEngaged" of {_p} to 59
			while metadata value "ECEngaged" of {_p} > -1:
				if metadata value "ECEngaged" of {_p} > 0:
					inCombat({_p})
					wait 1 second
					set {_tag} to metadata value "ECEngaged" of {_p}
					remove 1 from {_tag}
					set metadata value "ECEngaged" of {_p} to {_tag}
				else:
					set {_data} to data()
					if {hps::%{_p}%} is set:
						log "%{_data}% %{_p}% exit combat with %{dmgdealt::%{_p}%}% damage dealt, | %{dps::%{_p}%}% DPS, %{healed::%{_p}%}% health healed and %{hps::%{_p}%}% HPS. Fight duration: %{seconds::%{_p}%}% seconds" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
					else:
						log "%{_data}% %{_p}% exit combat with %{dmgdealt::%{_p}%}% damage dealt and | %{dps::%{_p}%}% DPS. Fight duration: %{seconds::%{_p}%}% seconds" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
					clearCombat({_p})
	else:
		set metadata value "ECEngaged" of {_p} to 59
		add {_h} to {healed::%{_p}%}
	if {seconds::%{_p}%} > 0:
		set {hps::%{_p}%} to {healed::%{_p}%}/{seconds::%{_p}%}
	else:
		set {hps::%{_p}%} to {healed::%{_p}%}
	if metadata value "DungeonInstance" of {_p} is not set:
		wait 1 tick
		scoreboardUpdateCombat({_p})
	if metadata value "ECEngaged" of {_p} is not set:
		clear {_p}'s scoreboard
		UpdateScoreboard({_p})

function HealAssist(p: player, e: entity):
	if {_p} != {_e}:
		loop {incombatwith::%{_e}%::*}:
			if {asyst::%uuid of loop-value%::*} does not contain uuid of {_p}:
				add uuid of {_p} to {asyst::%uuid of loop-value%::*}
on damage:
	if attacker is a player:
		if damage is not 0:
			if victim is not a player:
				combatInitiate(attacker, victim)

	if victim is a player:
		if attacker is alive:
			if damage is not 0:
				combatInitiate(victim, attacker)

function combatInitiate(att: entity, vict: entity):
	CombatRefresh({_vict}, {_att})
	if {incombatwith::%{_att}%::*} does not contain {_vict}:
		add uuid of {_vict} to {incombatwith::%{_att}%::*}
	if metadata value "ECEngaged" of {_att} is not set:
		set {dmgdealt::%{_att}%} to 0
		set {dps::%{_att}%} to 0
		set {_id} to line 19 of lore of {karta::%{_att}%}
		if {kartaname::%{_att}%} = "Cresselia":
			ShootingStars({_att})
			AstralPower({_att})
		if metadata value "DungeonInstance" of {_att} is not set:
			clear scoreboard of {_att}
		set metadata value "ECEngaged" of {_att} to 59
		if name of {_att} = "agnes":
			set {agnesstop} to true
			#equip citizen 6512 with diamond sword
		while metadata value "ECEngaged" of {_att} > -1:
			if metadata value "ECEngaged" of {_att} > 0:
				inCombat({_att})
				wait 1 second
				set {_tag} to metadata value "ECEngaged" of {_att}
				remove 1 from {_tag}
				set metadata value "ECEngaged" of {_att} to {_tag}
			else:
				set {_data} to data()
				if {hps::%{_att}%} > 0:
					log "%{_data}% %{_att}% exit combat with %{dmgdealt::%{_att}%}% damage dealt, | %{dps::%{_att}%}% DPS, %{healed::%{_att}%}% health healed and %{hps::%{_att}%}% HPS. Fight duration: %{seconds::%{_att}%}% seconds" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
				else:
					log "%{_data}% %{_att}% exit combat with %{dmgdealt::%{_att}%}% damage dealt and | %{dps::%{_att}%}% DPS. Fight duration: %{seconds::%{_att}%}% seconds" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
				log "%{_data}% Damage breakdown of %{_att}%:" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"	
				clearCombat({_att})
	else:
		set metadata value "ECEngaged" of {_att} to 59
	if {seconds::%{_att}%} > 0:
		set {dps::%{_att}%} to {dmgdealt::%{_att}%}/{seconds::%{_att}%}
	else:
		set {dps::%{_att}%} to {dmgdealt::%{_att}%}
	set {_health1} to {_vict}'s health
	wait 1 tick
	if {_health1} != {_vict}'s health:
		if metadata value "DungeonInstance" of {_att} is not set:
			if title of {_att}'s scoreboard is set:
				if {meter::%{_att}%} is not "healing":
					set {_kolorek} to KolorekScoreboard({_att})
					set title of {_att}'s scoreboard to "&f&l«-───▬ %{_kolorek}%&lEC &f&l▬───-»"
					set line 12 of {_att}'s scoreboard to ""
					if {language::%{_att}%} = "English":
						set line 11 of {_att}'s scoreboard to " &fIn combat for: %{_kolorek}%%{seconds::%{_att}%}% seconds     "
					else:
						set line 11 of {_att}'s scoreboard to " &fW walce od: %{_kolorek}%%{seconds::%{_att}%}% sekund     "
					set line 10 of {_att}'s scoreboard to " "
					set {_x} to first element of createTop("dmgdealt", 5, "[P]")
					set {_x2} to 2nd element of createTop("dmgdealt", 5, "[P]")
					set {_x3} to 3rd element of createTop("dmgdealt", 5, "[P]")
					set {_x4} to 4th element of createTop("dmgdealt", 5, "[P]")
					set {_x5} to 5th element of createTop("dmgdealt", 5, "[P]")
					if {dmgdealt::%{_x}%} > 0:
						set line 9 of {_att}'s scoreboard to "  &f1. &f%{ikonkakarta::%{_x}%}%%{kartacolor::%{_x}%}%%first element of createTop("dmgdealt", 5, "[P]")% &f%first element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x}%}%DMG | &f%{dps::%{_x}%}% %{kartacolor::%{_x}%}%DPS"
					if {dmgdealt::%{_x2}%} > 0:
						set line 8 of {_att}'s scoreboard to "  &f2. &f%{ikonkakarta::%{_x2}%}%%{kartacolor::%{_x2}%}%%2nd element of createTop("dmgdealt", 5, "[P]")% &f%2nd element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x2}%}%DMG | &f%{dps::%{_x2}%}% %{kartacolor::%{_x2}%}%DPS"
					if {dmgdealt::%{_x3}%} > 0:
						set line 7 of {_att}'s scoreboard to "  &f3. &f%{ikonkakarta::%{_x3}%}%%{kartacolor::%{_x3}%}%%3rd element of createTop("dmgdealt", 5, "[P]")% &f%3rd element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x3}%}%DMG | &f%{dps::%{_x3}%}% %{kartacolor::%{_x3}%}%DPS"
					if {dmgdealt::%{_x4}%} > 0:
						set line 6 of {_att}'s scoreboard to "  &f4. %{ikonkakarta::%{_x4}%}%%{kartacolor::%{_x4}%}%%4th element of createTop("dmgdealt", 5, "[P]")% &f%4th element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x4}%}%DMG | &f%{dps::%{_x4}%}% %{kartacolor::%{_x4}%}%DPS"
					if {dmgdealt::%{_x5}%} > 0:
						set line 5 of {_att}'s scoreboard to "  &f5. %{ikonkakarta::%{_x5}%}%%{kartacolor::%{_x5}%}%%5th element of createTop("dmgdealt", 5, "[P]")% &f%5th element of createTop("dmgdealt", 5, "[V]")% %{kartacolor::%{_x5}%}%DMG | &f%{dps::%{_x5}%}% %{kartacolor::%{_x5}%}%DPS"
					set line 4 of {_att}'s scoreboard to ""
	if metadata value "ECEngaged" of {_att} is not set:
		if metadata value "DungeonInstance" of {_att} is not set:
			clear {_att}'s scoreboard
			UpdateScoreboard({_att})
	#while metadata value "ECEngaged" of {_att} = true:
		#add 1 to {seconds::%{_att}%}
		#wait 1 second
on leave:
	wait 60 seconds
	if player is not online:
		clear metadata value "ECEngaged" of player
		clear {seconds::%player%}
		clear {seconds::%player%}
		set {dps::%player%} to 0
		set {dmgdealt::%player%} to 0
		set {healed::%player%} to 0
		set {hps::%player%} to 0
		clear {incombatwith::%player%::*}
		clear {icicles::%player%}
		set {astralpower::%player%} to 50
		set {_id} to line 19 of lore of {karta::%player%}
		replace all "&8Id " in {_id} with ""
		clear {dmgbreak::%{kartaname::%player%}%::%{_id}%}

		ClearPlayerStats(player) #Clears player stats inherited from the player's card

function inCombat(p: player):
	add 1 to {seconds::%{_p}%}
	if {seconds::%{_p}%} > 0:
		set {dps::%{_p}%} to {dmgdealt::%{_p}%}/{seconds::%{_p}%}
	else:
		set {dps::%{_p}%} to {dmgdealt::%{_p}%}
	if {healed::%{_p}%} > 0:
		set {hps::%{_p}%} to {healed::%{_p}%}/{seconds::%{_p}%}
	else:
		set {hps::%{_p}%} to {healed::%{_p}%}
	scoreboardUpdateCombat({_p})
command /meter [<text>]:
	aliases: /licznik
	trigger:
		if arg-1 = "healing":
			set {meter::%player%} to "healing"
			if {language::%player%} = "English":
				send "&aYour meter will now display Healing." to player
			else:
				send "&aTwój licznik będzie teraz wyświetlał Leczenie." to player
		if arg-1 = "damage":
			clear {meter::%player%}
			if {language::%player%} = "English":
				send "&aYour meter will now display Damage." to player
			else:
				send "&aTwój meter będzie teraz wyświetlał Obrażenia." to player
on tab complete of "meter" or "licznik":
	set tab completions for position 1 to "healing" and "damage"
#on death:
	#set metadata value "ECEngaged" of attacker to false
on skript stop:
	clear {lastdmgcauseen::*}
	clear {lastdmgcause::*}
	clear {lastdmgcauselore::*}
	clear {lastdmgcauseloreen::*}
	clear {dmgbreak::*}
	clear {healcard::*}
	clear {extraSecondsIcyVeins::%player%}
	clear {ascendanceDuration::%player%}
		
function LogDmgBreakdown(p: player):
	set {_data} to data()
	if metadata value "ECEngaged" of {_p} is set:
		set {_t} to SecondsToMinutes("%{seconds::%{_p}%}%")
		log "%{_data}% Fight duration: %{_t}%" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
	else:
		log "%{_data}% Fight duration: -" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
	if {dmgdealt::%{_p}%} is 0:
		log "%{_data}% Total: - (- dps)" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
	else:
		log "%{_data}% Total: %{dmgdealt::%{_p}%}% (| %{dps::%{_p}%}% dps)" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
	set {_id} to line 19 of lore of {karta::%{_p}%}
	replace all "&8Id: " in {_id} with ""
	set {_k} to {kartaname::%{_p}%}
	set {_r::*} to sorted indices of {dmgbreak::%{_k}%::%{_id}%::*} in descending order
	set {_size} to size of {_r::*}
	loop {_size} times:
		set {_1} to ({_r::%loop-number%} in strict proper case)
		log "%{_data}% %{_1}%: %{dmgbreak::%{_k}%::%{_id}%::%{_1}%}% (%({dmgbreak::%{_k}%::%{_id}%::%{_1}%}/{dmgdealt::%{_p}%})*100%%%)" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
function LogHealBreakdown(p: player):
	set {_data} to data()
	log "%{_data}% Healing breakdown of %{_p}%:" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"	
	if {healed::%{_p}%} > 0:
		if metadata value "ECEngaged" of {_p} is set:
			set {_t} to SecondsToMinutes("%{seconds::%{_p}%}%")
			log "%{_data}% Fight duration: %{_t}%" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
		else:
			log "%{_data}% Fight duration: -" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
		log "%{_data}% Total: %{healed::%{_p}%}% (%{hps::%{_p}%}% hps)" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
		set {_id} to line 19 of lore of {karta::%{_p}%}
		set {_k} to {kartaname::%{_p}%}
		set {_r::*} to sorted indices of {healcard::%{kartaname::%{_p}%}%::%{_id}%::*} in descending order
		set {_size} to size of {_r::*}
		loop {_size} times:
			set {_1} to ({_r::%loop-number%} in strict proper case)
			log "%{_data}% %{_1}%: %{healcard::%{_k}%::%{_id}%::%{_1}%}% (%({healcard::%{_k}%::%{_id}%::%{_1}%}/{healed::%{_p}%})*100%%%)" to "logi/combat/combatdetails %{datatydzien}%-%{datatydzien2}%.log"
command /damagebreakdown:
	aliases: /dmgbreakdown, /breakdown
	trigger:
		CombatBreakdown(player, "Damage")

command /healingbreakdown:
	aliases: /healbreakdown
	trigger:
		CombatBreakdown(player, "Healing")
		
function CombatBreakdown(p: player, type: text):
	set {_id} to line 19 of lore of {karta::%{_p}%}
	replace all "&8Id: " in {_id} with ""
	set {_k} to {kartaname::%{_p}%}

	
	if {_type} = "Damage":
		set {_text} to "dps"
		set {_variable} to {dmgdealt::%{_p}%}
		set {_ps} to {dps::%{_p}%}
		set {_r::*} to sorted indices of {dmgbreak::%{_k}%::%{_id}%::*} in descending order
		set {_source} to {dmgbreak::%{_k}%::%{_id}%}
		if {_r::*} is set:
			set {_size} to size of {_r::*}
			loop {_size} times:
				set {_1} to ({_r::%loop-number%} in strict proper case)
				add "%{_1}%: %{dmgbreak::%{_k}%::%{_id}%::%{_1}%}% (%({dmgbreak::%{_k}%::%{_id}%::%{_1}%}/{dmgdealt::%{_p}%})*100%%%)" to {_breakdown::*}
			if size of {_breakdown::*} > 1:
				set {_breakdown} to join {_breakdown::*} by nl
				set {_message} to mini message from "<gradient:##20e32a:##ffe270:##f54242>%{_breakdown}%"
			else:
				set {_message} to "<##20e32a>%{_breakdown::1}%"
		
	else if {_type} = "Healing":
		set {_text} to "hps"
		set {_variable} to {healed::%{_p}%}
		set {_ps} to {hps::%{_p}%}
		set {_r::*} to sorted indices of {healcard::%{_k}%::%{_id}%::*} in descending order
		set {_source} to {healcard::%{_k}%::%{_id}%}
		if {_r::*} is set:
			set {_size} to size of {_r::*}
			loop {_size} times:
				set {_1} to ({_r::%loop-number%} in strict proper case)
				add "%{_1}%: %{healcard::%{_k}%::%{_id}%::%{_1}%}% (%({healcard::%{_k}%::%{_id}%::%{_1}%}/{healed::%{_p}%})*100%%%)" to {_breakdown::*}
			if size of {_breakdown::*} > 1:
				set {_breakdown} to join {_breakdown::*} by nl
				set {_message} to mini message from "<gradient:##03fc41:##69faff:##2faabd:##303f96>%{_breakdown}%"
			else:
				set {_message} to "<##03fc41>%{_breakdown::1}%"

	send "Coming soon (TM)" to {_p}
	send "%{_type}% breakdown:" to {_p}
	if metadata value "ECEngaged" of {_p} is set:
		set {_t} to SecondsToMinutes("%{seconds::%{_p}%}%")
		send "Fight duration: %{_t}%" to {_p}
	else:
		send "Fight duration: -" to {_p}
		set {_id} to line 19 of lore of {karta::%{_p}%}
		replace all "&8Id: " in {_id} with ""
		if {dmgbreak::%{kartaname::%{_p}%}%::%{_id}%::*} is set:
			clear {dmgbreak::%{kartaname::%{_p}%}%::%{_id}%::*}
		if {healcard::%{kartaname::%{_p}%}%::%{_id}%::*} is set:
			clear {healcard::%{kartaname::%{_p}%}%::%{_id}%::*}
	
		
	if {_variable} is 0:
		send "Total: - (- %{_text}%)" to {_p}
	else:
		send "Total: %{_variable}% (%{_ps}% %{_text}%)" to {_p}
	send {_message} to {_p}

command /dmggraph [<text>] [<number>]:
	trigger:
		if arg-1 is "xilvia":
			if arg-2 is 1:
				set {kolorekkarta::%player%} to ""
				set {ikonkakarta::%player%} to ""
				send "&aOd teraz karta Xilvia będzie wyświetlać się na damage graphie w następujący sposób: &f " to player
			if arg-2 is 2:
				set {kolorekkarta::%player%} to ""
				set {ikonkakarta::%player%} to ""
				send "&aOd teraz karta Xilvia będzie wyświetlać się na damage graphie w następujący sposób: &f " to player
function SecondsToMinutes(v: text) :: string:
	set {_a} to {_v} parsed as number
	if {_a}/60 >= 1:
		set {_a} to {_a}/60
		if {_a} < 2:
			set {_t} to "minute"
		else:
			set {_t} to "minutes"
	else:
		if {_a} = 1:
			set {_t} to "second"
		else:
			set {_t} to "seconds"
	set {_r::*} to "%{_a}%" and {_t}
	set {_h} to join {_r::*} by " "
	return "%{_h}%"
command /kill [<player>]:
	trigger:
		if name of player = "kapoonfleek":
			kill arg-1
function DamageBreakdown(p: player, e: entity, v: number):
	set {_id} to line 19 of lore of {karta::%{_p}%}
	replace all "&8Id: " in {_id} with ""
	if metadata value "LastDamageCause" of {_e} is set:
		add {_v} to {dmgbreak::%{kartaname::%{_p}%}%::%{_id}%::%uncolored (metadata value "LastDamageCause" of {_e} in strict proper case)%}