function chamberCinematic(p: player):
	send "&9(For an optimal cinematic experience, please enable F1.)" to {_p}
	play sound "music.chamberofheart" with volume 5 and pitch 1 to {_p}
	wait 10 ticks
	set {_point::1} to location(9101.610, -42, 1658.129, world "world", -122.7, -10)
	set {_point::2} to location(9096.445, -33.50789, 1624.809, world "world", -35.4, -10)

	set {_point::3} to location(9112.481, -40.61875, 1662.2, world "world", 0.5, 5.3)
	set {_point::4} to location(9112.484, -37.643, 1653.806, world "world", 0.7, 32)

	set {_point::5} to location(9112.838, -26.8, 1643.346, world "world", 103.2, -83.9)
	set {_point::6} to location(9112.838, -41, 1643.346, world "world", 28.1, -90)

	set {_point::7} to location(9112.384, -41, 1665.3, world "world", -179.1, 2.1)
	set {_point::8} to location(9112.478, -41.5, 1659.720, world "world", -179.8, -27.5)

	set {_point::9} to location(9112.5, -11.8, 1644, world "world", 131.5, 67.0)
	set {_point::10} to location(9112.5, -27, 1644, world "world", -131.5, 67.0)

	set {_point::11} to location(9101.064, -26.8, 1639.947, world "world", -47.3, 34)
	set {_point::12} to location(9111.052, -41, 1661.542, world "world", -162.1, -16.8)

	set {_point::13} to location(9109.941, -40, 1658, world "world", -65.4, -17)

	set {_point::14} to location(9112.5, -39.34, 1657.3, world "world", 2.8, 8.7)
	set {_point::15} to location(9112.533, -24.8, 1632.781, world "world", 1.7, 26.9)

	set {_point::16} to location(9137, -52, 1650, world "world", 0, 90)

	set {_id} to random integer between 0 and 999999999999

	set {_idPlayer} to random integer between 0 and 999999999999
	set {_idPlayer2} to random integer between 0 and 999999999999
	set {_uuid} to a random uuid

	set {_properties} to "%{_p}.getPlayerProfile().getProperty("textures")%"
	replace all "Property[name=textures" and "value=" and "," and "]" in {_properties} with ""
	set {_properties::*} to {_properties} split at "signature="

	set {_texture} to {_properties::1}
	set {_signature} to {_properties::2}

	#spawn fake player named ({_p}'s name) with skin named "%{_texture}%,%{_signature}%" at {_p} for {_p} with id {_idPlayer} and uuid {_uuid}

	spawnCinematicEntity({_p}, {_id}, {_point::1})
	
	set {_xDif} to (x-coordinate of {_point::2}) - (x-coordinate of {_point::1})
	set {_yDif} to (y-coordinate of {_point::2}) - (y-coordinate of {_point::1})
	set {_zDif} to (z-coordinate of {_point::2}) - (z-coordinate of {_point::1})
	set {_yawDif} to (yaw of {_point::2}) - (yaw of {_point::1})
	set {_pitchDif} to (pitch of {_point::2}) - (pitch of {_point::1})
	
	set {_steps} to 300
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::1})-{_yaw} and pitch (pitch of {_point::1})-{_pitch} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}


	remove fake entity with id {_id} for {_p}
	#remove fake entity with id {_idPlayer} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::3})
	spawn fake player named ({_p}'s name) with skin named "%{_texture}%,%{_signature}%" at {_point::7} for {_p} with id {_idPlayer} and uuid {_uuid}

	set {_yawDif} to (yaw of {_point::4}) - (yaw of {_point::3})
	set {_pitchDif} to (pitch of {_point::4}) - (pitch of {_point::3})
	set {_yDif} to (y-coordinate of {_point::4}) - (y-coordinate of {_point::3})
	set {_zDif} to (z-coordinate of {_point::4}) - (z-coordinate of {_point::3})
	set {_steps} to 200
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_xDifPlayer} to (x-coordinate of {_point::8}) - (x-coordinate of {_point::7})
	set {_yDifPlayer} to (y-coordinate of {_point::8}) - (y-coordinate of {_point::7})
	set {_zDifPlayer} to (z-coordinate of {_point::8}) - (z-coordinate of {_point::7})
	set {_yawDifPlayer} to (yaw of {_point::8}) - (yaw of {_point::7})
	set {_pitchDifPlayer} to (pitch of {_point::8}) - (pitch of {_point::7})

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	set {_yawPlayer} to {_yawDifPlayer}/{_steps}
	set {_pitchPlayer} to {_pitchDifPlayer}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by 0 {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::3})-{_yaw} and pitch (pitch of {_point::3})-{_pitch} for {_p}
		move entity with id {_idPlayer} by {_xDifPlayer}/{_stepsDif} {_yDifPlayer}/{_stepsDif} {_zDifPlayer}/{_stepsDif} for {_p}
		rotate entity with id {_idPlayer} with yaw (yaw of {_point::7})-{_yawPlayer} and pitch (pitch of {_point::7})+{_pitchPlayer} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}
		remove {_yawDif}/{_steps} from {_yawPlayer}
		remove {_pitchDif}/{_steps} from {_pitchPlayer}

	remove fake entity with id {_id} for {_p}
	remove fake entity with id {_idPlayer2} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::5})

	set {_xDif} to (x-coordinate of {_point::6}) - (x-coordinate of {_point::5})
	set {_yDif} to (y-coordinate of {_point::6}) - (y-coordinate of {_point::5})
	set {_zDif} to (z-coordinate of {_point::6}) - (z-coordinate of {_point::5})
	set {_yawDif} to (yaw of {_point::6}) - (yaw of {_point::5})
	set {_pitchDif} to (pitch of {_point::6}) - (pitch of {_point::5})

	set {_xDifHeart} to (x-coordinate of {_point::10}) - (x-coordinate of {_point::9})
	set {_yDifHeart} to (y-coordinate of {_point::10}) - (y-coordinate of {_point::9})
	set {_zDifHeart} to (z-coordinate of {_point::10}) - (z-coordinate of {_point::9})
	set {_yawDifHeart} to (yaw of {_point::10}) - (yaw of {_point::9})
	set {_pitchDifHeart} to (pitch of {_point::10}) - (pitch of {_point::9})
	
	set {_steps} to 150
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	set {_yawHeart} to {_yawDifHeart}/{_steps}
	set {_pitchHeart} to {_pitchDifHeart}/{_steps}

	set {_idHeart} to random integer between 0 and 999999999999
	spawnCinematicEntity({_p}, {_idHeart}, {_point::9}, false)
	set {_heartItem} to gold nugget with nbt from "{""minecraft:custom_model_data"":{floats:[10.0f]}}"
	apply equippable component to {_heartItem}:
		slot: chestplate slot
		equip_sound: "item.armor.equip_gold"
		asset_id: "heartofearthcraft"
		dispensable: true
		swappable: true
		damage_on_hurt: false
	fake {_idHeart}'s equipment slot "CHEST" to {_heartItem} for {_p}
	azeriteHumCinematic({_p}, {_point::8})
	cinematicAzeriteVFX({_steps}, {_point::9}, {_point::10})

	wait 5 ticks
	cinematicAzeriteVFX({_steps}, {_point::9}, {_point::8}, 2.75 seconds)
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::5})-{_yaw} and pitch (pitch of {_point::5})-{_pitch} for {_p}

		move entity with id {_idHeart} by {_xDifHeart}/{_stepsDif} {_yDifHeart}/{_stepsDif} {_zDifHeart}/{_stepsDif} for {_p}
		rotate entity with id {_idHeart} with yaw (yaw of {_point::9})-{_yawHeart} and pitch (pitch of {_point::9})-{_pitchHeart} for {_p}

		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}

		remove {_yawDifHeart}/{_steps} from {_yawHeart}
		remove {_pitchDifHeart}/{_steps} from {_pitchHeart}	

	remove fake entity with id {_id} for {_p}

	spawnCinematicEntity({_p}, {_id}, {_point::11})

	set {_xDifHeart} to (x-coordinate of {_point::8}-0.05) - (x-coordinate of {_point::10})
	set {_yDifHeart} to (y-coordinate of {_point::8}) - (y-coordinate of {_point::10})
	set {_zDifHeart} to (z-coordinate of {_point::8}) - (z-coordinate of {_point::10})
	set {_yawDifHeart} to (yaw of {_point::7}) - (yaw of {_point::10})
	set {_pitchDifHeart} to (pitch of {_point::7}) - (pitch of {_point::10})

	set {_yawHeart} to {_yawDifHeart}/{_steps}
	set {_pitchHeart} to {_pitchDifHeart}/{_steps}

	set {_xDif} to (x-coordinate of {_point::13}) - (x-coordinate of {_point::12})
	set {_yDif} to (y-coordinate of {_point::13}) - (y-coordinate of {_point::12})
	set {_zDif} to (z-coordinate of {_point::13}) - (z-coordinate of {_point::12})
	set {_yawDif} to (yaw of {_point::13}) - (yaw of {_point::12})
	set {_pitchDif} to (pitch of {_point::13}) - (pitch of {_point::12})

	set {_x} to 0
	set {_steps} to 230
	set {_stepsDif} to {_steps}/4096

	set {_steps2} to 230-160
	set {_stepsDif2} to {_steps2}/4096

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}

	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_idHeart} by {_xDifHeart}/{_stepsDif} {_yDifHeart}/{_stepsDif} {_zDifHeart}/{_stepsDif} for {_p}
		rotate entity with id {_idHeart} with yaw (yaw of {_point::10})-{_yawHeart} and pitch (pitch of {_point::10})-{_pitchHeart} for {_p}

		wait 1 tick if {_x} is divisible by 2
		
		remove {_yawDifHeart}/{_steps} from {_yawHeart}
		remove {_pitchDifHeart}/{_steps} from {_pitchHeart}
		if {_x} = 110:
			remove fake entity with id {_id} for {_p}
			spawnCinematicEntity({_p}, {_id}, {_point::12})
		else if {_x} > 160:
			move entity with id {_id} by {_xDif}/{_stepsDif2} {_yDif}/{_stepsDif2} {_zDif}/{_stepsDif2} for {_p}
			rotate entity with id {_id} with yaw (yaw of {_point::12})-{_yaw} and pitch (pitch of {_point::12})-{_pitch} for {_p}
			remove {_yawDif}/{_steps2} from {_yaw}
			remove {_pitchDif}/{_steps2} from {_pitch}
	remove fake entity with id {_id} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::14})
	
	set {_xDif} to (x-coordinate of {_point::15}) - (x-coordinate of {_point::14})
	set {_yDif} to (y-coordinate of {_point::15}) - (y-coordinate of {_point::14})
	set {_zDif} to (z-coordinate of {_point::15}) - (z-coordinate of {_point::14})
	set {_yawDif} to (yaw of {_point::15}) - (yaw of {_point::14})
	set {_pitchDif} to (pitch of {_point::15}) - (pitch of {_point::14})
	
	set {_steps} to 350
	set {_stepsDif} to {_steps}/4096
	set {_x} to 0

	set {_yaw} to {_yawDif}/{_steps}
	set {_pitch} to {_pitchDif}/{_steps}
	while {_x} < {_steps}:
		add 1 to {_x}
		move entity with id {_id} by {_xDif}/{_stepsDif} {_yDif}/{_stepsDif} {_zDif}/{_stepsDif} for {_p}
		rotate entity with id {_id} with yaw (yaw of {_point::14})-{_yaw} and pitch (pitch of {_point::14})-{_pitch} for {_p}
		wait 1 tick if {_x} is divisible by 2
		remove {_yawDif}/{_steps} from {_yaw}
		remove {_pitchDif}/{_steps} from {_pitch}

	remove fake entity with id {_id} for {_p}
	spawnCinematicEntity({_p}, {_id}, {_point::16})
	set {_pot} to potion effect of blindness of tier 20 without particles for 2 seconds
	add {_pot} to potion effects of {_p}
	wait 2 seconds

	remove fake entity with id {_id} for {_p}
	remove fake entity with id {_idPlayer} for {_p}
	remove fake entity with id {_idHeart} for {_p}
	set camera of {_p} to entity with id (entity id of {_p})
	stop sound "music.chamberofheart" for {_p}

	grantPlayerHeartOfEC({_p})

function spawnCinematicEntity(p: player, id: integer, loc: location, camera: boolean = true):
	spawn fake armor stand at {_loc} for {_p} with id {_id}
        
	set {_meta} to metadata packet with id {_id}

	add data from "invisible true" to {_meta}
	add data from "stand marker true" to {_meta}
	send packet {_meta} to {_p}
	if {_camera} = true:
		set camera of {_p} to entity with id {_id}

function cinematicAzeriteVFX(stepsMax: integer, loc1: location, loc2: location, wait: timespan = 0 seconds):
	wait {_wait}
	set {_steps} to 0
	create a new custom dust_color_transition particle with:
		count: 1
		velocity: outwards
		force: true
		data: dustTransition(light blue, yellow, 0.75)
	set {_particle} to last created particle
	set {_sphere} to a sphere of radius 0.8
	set particle of {_sphere} to {_particle}
	set {_loc} to {_loc1}
	set {_stepsMax} to {_stepsMax} + 150 if {_wait} = 0 seconds
	set {_loc} to location 2 behind {_loc} if {_wait} != 0 seconds
	while {_steps} < {_stepsMax}:
		set {_y} to 0 if {_y} = 45
		set {_xDifHeart} to (x-coordinate of {_loc2}) - (x-coordinate of {_loc1})
		set {_yDifHeart} to (y-coordinate of {_loc2}) - (y-coordinate of {_loc1})
		set {_zDifHeart} to (z-coordinate of {_loc2}) - (z-coordinate of {_loc1})
		increase {_loc}'s x-coordinate by {_xDifHeart}/{_stepsMax}
		increase {_loc}'s y-coordinate by {_yDifHeart}/{_stepsMax}
		increase {_loc}'s z-coordinate by {_zDifHeart}/{_stepsMax}
		if {_wait} = 0 seconds:
			draw shape {_sphere} at {_loc} for 2 ticks if {_steps} is divisible by 3
		set {_v} to vector 1, 0, 1
		set {_v2} to vector 0.5, 0, 0.5
		set {_v3} to vector 0.5, 0, 0.5
		rotate {_v} around y-axis by {_y}
		rotate {_v2} around y-axis by {_y}
		rotate {_v3} around y-axis by {_y}*-1
		set {_v4} to vector 0.75, 0, 0.75
		set {_v5} to vector 0.75, 0, 0.75
		rotate {_v4} around y-axis by {_y}
		rotate {_v5} around y-axis by {_y}*-1
		add 8 to {_y}
		draw 1 of dust using dustOption(light blue, 1) at {_loc} ~ {_v}
		draw 1 of dust using dustOption(light blue, 0.5) at {_loc} ~ {_v2}
		draw 1 of dust using dustOption(light blue, 0.5) at {_loc} ~ {_v3}
		draw 1 of dust using dustOption(light blue, 0.75) at {_loc} ~ {_v4}
		draw 1 of dust using dustOption(light blue, 0.75) at {_loc} ~ {_v5}
		draw 1 of dust using dustOption(yellow, 1) at {_loc} ~ {_v} with offset vector(0.5, 0, 0.5)
		add 1 to {_steps}
		wait 2 ticks if {_steps} is divisible by 3

function azeriteHumCinematic(p: player, loc: location):
	play sound "azerite.hum" with volume 5 and pitch 1 to {_p}
	wait 8 seconds
	play sound "azerite.hum" with volume 5 and pitch 1 to {_p}
	wait 1.75 seconds
	stop sound "azerite.hum" for {_p}
	play sound "azerite.cast" with volume 5 and pitch 1 to {_p}
	wait 2 ticks
	play sound "azerite.trait_select" with volume 5 and pitch 1 to {_p}
	play sound "azerite.cast" with volume 5 and pitch 1 to {_p}
	loop 5 times:
		draw 60 of dust using dustOption(light blue, 1) at location above {_loc} with offset vector(1, 1, 1) with extra 0.01 with force
		draw 30 of dust using dustOption(yellow, 1) at location above {_loc} with offset vector(1, 1, 1) with extra 0.01 with force
		wait 4 ticks