on papi request for prefix "ec":
    if the identifier is "playerlevel":
        set the result to {poziom::%player%}
    else if the identifier is "playerexp":
        set the result to {exp::%player%}
    else if the identifier is "color":
        set the result to "%{kolorek::%player%}%"
    else if the identifier is "health":
        set the result to player's health
    else if the identifier is "playername":
        set the result to "&f%player's name%"
    else if the identifier is "card":
        if line 19 of lore of {karta::%player%} contains "Id: ":
            set {_id} to uncolored line 19 of lore of {karta::%player%}
            replace all "Id: " in {_id} with ""
            load yaml "plugins/Skript/playerdata/karty/%uncolored name of {karta::%player%}%/%{_id}%.yml" as "kartyPh-%player%"
            set {_level} to yaml value "Card.Level" in "kartyPh-%player%"
            unload yaml "kartyPh-%player%"
            if {_level} is not set:
                set the result to "-"
            else:
                set the result to "%{ikonkakarta::%player%}% %uncolored name of {karta::%player%}%"
        else:
            set the result to "-"
    else if the identifier is "cardlevel":
        if line 19 of lore of {karta::%player%} contains "Id: ":
            set {_id} to uncolored line 19 of lore of {karta::%player%}
            replace all "Id: " in {_id} with ""
            load yaml "plugins/Skript/playerdata/karty/%uncolored name of {karta::%player%}%/%{_id}%.yml" as "kartyPh-%player%"
            set {_level} to yaml value "Card.Level" in "kartyPh-%player%"
            unload yaml "kartyPh-%player%"
            if {_level} is not set:
                set the result to "-"
            else:
                set the result to "%{_level}%"
        else:
            set the result to "-"
    else if the identifier is "party":
        if player is in a party:
            set the result to "&b[%name of party of player%] "
        else:
            set the result to ""
    else if the identifier is "date":
        set {_data::*} to data() split at " "
        set {_timeAMPM::*} to {_data::1} split at ":"
        if ({_timeAMPM::1} parsed as number) >= 13:
            set {_AorP} to "PM"
        else:
            set {_AorP} to "AM"
        set {_timeAMPM} to "%{_timeAMPM::1}%:%{_timeAMPM::2}%"
        set the result to "%{_data::1}% | %{_timeAMPM}% %{_AorP}%"
    else if the identifier is "health":
        set the result to health of player
    else if the identifier is "tab":
        set {_name} to name of party of player
        if metadata value "ECEngaged" of player is set:
            if {_name} is set:
                set the result to "&8(%{kolorek::%player%}%&l%{poziom::%player%}%%{kolorek::%player%}%&l⭐&8) &r%player's name% &b[%{_name}%] &a%player's health%&c❤"
            else:
                set the result to "&8%{kolorek::%player%}%&l%{poziom::%player%}%%{kolorek::%player%}%&l⭐&8) &r%player's name% &a%player's health%&c❤"
        else:
            if {_name} is set:
                set the result to "&8(%{kolorek::%player%}%&l%{poziom::%player%}%%{kolorek::%player%}%&l⭐&8) &r%player's name% &b[%{_name}%]"
            else:
                set the result to "&8(%{kolorek::%player%}%&l%{poziom::%player%}%%{kolorek::%player%}%&l⭐&8) &r%player's name%"
    else if the identifier is "rank":
        if {rank::%player%} is set:
            set {_rank} to {rank::%player%}
        else:
            set {_rank} to "&8[&7Player&8]"
        set the result to {_rank}
    else if the identifier is "prefix":
        set {_name} to name of party of player
        if {_name} is set:
            set the result to "&b[%{_name}%]&r "
        else:
            set the result to ""
    else if the identifier is "combat_1":
        set the result to placeholderDamage(player, 1)
    else if the identifier is "combat_2":
        set the result to placeholderDamage(player, 2)
    else if the identifier is "combat_3":
        set the result to placeholderDamage(player, 3)
    else if the identifier is "combat_4":
        set the result to placeholderDamage(player, 4)
    else if the identifier is "combat_5":
        set the result to placeholderDamage(player, 5)
    else if the identifier is "stardust":
        set the result to {stardust::%player%}
    else if the identifier is "cosmicflux":
        set the result to {cosmicflux::%player%}
    else if the identifier is "buff1":
        if metadata value "ECEngaged" of player is set:
            if {kartaname::%player%} = "Brother Therold":
                if tag "Talents;Row 1" of nbt of {karta::%player%} = "Twist of Fate":
                    if metadata value "TwistOfFateDuration" of player is set:
                        set {_tofDuration} to seconds of metadata value "TwistOfFateDuration" of player
                        set {_buff} to "&f Twist of Fate: %{_tofDuration}% sec"
                    else:
                        set {_buff} to " "
        else:
            set {_buff} to " "
        set the result to {_buff}
    else if the identifier is "buff2":
        if metadata value "ECEngaged" of player is set:
            if {kartaname::%player%} = "Brother Therold":
                if tag "Talents;Row 3" of nbt of {karta::%player%} = "Void Ray":
                    if metadata value "VoidRayDuration" of player is set:
                        set {_voidRayDuration} to seconds of metadata value "VoidRayDuration" of player
                        set {_voidRayStacks} to metadata value "VoidRayStacks" of player
                        set {_buff} to "&f Void Ray: %{_voidRayDuration}% sec (%{_voidRayStacks}%)"
                    else:
                        set {_buff} to " "
        else:
            set {_buff} to " "
        set the result to {_buff}
    else if the identifier is "primarystat":
        set {_health} to {health::%player%}
        if {_health} is not set:
            set {_health} to 0
        if tag "PrimaryStat" of nbt of {karta::%player%} = "Intellect":
            if {intellect::%player%} is not set:
                set {_primaryStat} to 0
            else:
                set {_primaryStat} to {intellect::%player%}
            set the result to "<##59c1e3> Intellect: &f%{_primaryStat}% "
        else if tag "PrimaryStat" of nbt of {karta::%player%} = "Agility":
            if {agility::%player%} is not set:
                set {_primaryStat} to 0
            else:
                set {_primaryStat} to {agility::%player%}
            set the result to "<##5ee359> &fAgility: %{_primaryStat}% &8| <##c0ff02> &fHealth: %{_health}%"
        if tag "PrimaryStat" of nbt of {karta::%player%} = "Strength":
            if {strength::%player%} is not set:
                set {_primaryStat} to 0
            else:
                set {_primaryStat} to {strength::%player%}
            set the result to "<##e35959> &fStength: %{_primaryStat}% &8| <##c0ff02> &fHealth: %{_health}%"
    else if the identifier is "stats1":
        set {_damage} to {damage::%player%}
        set {_resistance} to {resistance::%player%}
        if {_damage} is not set:
            set {_damage} to 0
        if {_resistance} is not set:
            set {_resistance} to 0
        set the result to "<##f74428> Damage: &f180"
    else if the identifier is "stats2":
        set {_mobility} to {mobility::%player%}
        set {_utility} to {utility::%player%}
        if {_mobility} is not set:
            set {_mobility} to 0
        if {_utility} is not set:
            set {_utility} to 0
        set the result to "<##ae78d0> Utility: &f91"
    else if the identifier is "stats3":
        set {_mobility} to {mobility::%player%}
        set {_utility} to {utility::%player%}
        if {_mobility} is not set:
            set {_mobility} to 0
        if {_utility} is not set:
            set {_utility} to 0
        set the result to "<##f53b98> Mastery: &f12"
    else if the identifier is "stats4":
        set {_mobility} to {mobility::%player%}
        set {_utility} to {utility::%player%}
        if {_mobility} is not set:
            set {_mobility} to 0
        if {_utility} is not set:
            set {_utility} to 0
        set the result to "<##19943e> Haste: &f25"

function placeholderDamage(p: player, num: number) :: string:
    if metadata value "ECEngaged" of {_p} is set:
        set {_string} to ""
        set {_stringNegative} to ""
        set {_topDamage::*} to createTop("dmgdealt", 5, "[P]")
        set {_player} to {_topDamage::%{_num}%}
        if {dps::%{_player}%} > 0:
            set {_damageValues::*} to createTop("dmgdealt", 5, "[V]")
            set {_damageValue} to {_damageValues::%{_num}%}
            set {_dps} to {dps::%{_player}%}
            set {_text} to "%{_player}% %{_damageValue}% DMG | %{_dps}% DPS"
            set {_length} to length of {_text}
            set {_cardBackground} to "%last color of name of {karta::%{_p}%}%"
            set {_split::*} to {_text} split at " "
            #if size of {_split::*} > 4:
            #    set {_length} to {_length} - 2
            #loop (length of {_player}'s name) times:
             #   set {_stringNegative} to "%{_stringNegative}%%{_cardBackground}%"
            #loop rounded (length of {_player}'s name)*2.5 times:
            #    set {_string} to "%{_string}%"
            #set {_return} to "%{_num}%.%{ikonkakarta::%{_player}%}%&r%{_stringNegative}%&r%{_string}%%{_text}%"
            set {_return} to "%{_num}%. %{ikonkakarta::%{_player}%}% %{_text}%"

        else:
            set {_return} to ""

        return {_return}
    else:
        return ""
